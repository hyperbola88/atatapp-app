{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/system.ts","webpack:///./core/base-component.ts","webpack:///./utils/intervals.ts","webpack:///./wetcats/components/bound-component.ts","webpack:///./wetcats/systems/overlap-system.ts","webpack:///./core/view-component.ts","webpack:///./wetcats/components/sinking-component.ts","webpack:///./wetcats/systems/sinking-system.ts","webpack:///./wetcats/components/bubble-component.ts","webpack:///./wetcats/components/float-up-component.ts","webpack:///./wetcats/components/impulse-component.ts","webpack:///./wetcats/components/views/bubble-view-component.ts","webpack:///./wetcats/components/views/simple-fish-view-component.ts","webpack:///./wetcats/components/enemy-component.ts","webpack:///./wetcats/components/cat-component.ts","webpack:///./wetcats/systems/float-up-system.ts","webpack:///./wetcats/systems/view-system.ts","webpack:///./wetcats/pooling/abstract-pool.ts","webpack:///./wetcats/components/bonus-component.ts","webpack:///./wetcats/components/views/jelly-view-component.ts","webpack:///./wetcats/components/jelly-component.ts","webpack:///./wetcats/components/player-component.ts","webpack:///./wetcats/components/views/back-view-component.ts","webpack:///./wetcats/components/views/bonus-view-component.ts","webpack:///./wetcats/components/views/bonus0-view-component.ts","webpack:///./wetcats/components/views/bonus1-view-component.ts","webpack:///./wetcats/components/views/cat-view-component.ts","webpack:///./wetcats/components/views/cat0-view-component.ts","webpack:///./wetcats/components/views/cat1-view-component.ts","webpack:///./wetcats/components/views/enemy0-view-component.ts","webpack:///./wetcats/components/views/player-view-component.ts","webpack:///./wetcats/components/views/simple-friend-view-component.ts","webpack:///./wetcats/ui/score-ui-component.ts","webpack:///./wetcats/pooling/component-pool.ts","webpack:///./wetcats/pooling/pool-manager.ts","webpack:///./wetcats/pooling/entity-pool.ts","webpack:///./core/entity.ts","webpack:///./wetcats/systems/bubble-system.ts","webpack:///./wetcats/systems/player-system.ts","webpack:///./wetcats/levels.ts","webpack:///./wetcats/spawners/abstract-spawner.ts","webpack:///./wetcats/spawners/cats-spawner.ts","webpack:///./wetcats/spawners/cats-random-spawner.ts","webpack:///./wetcats/spawners/enemies-spawner.ts","webpack:///./wetcats/spawners/enemies-random-spawner.ts","webpack:///./wetcats/ui/level-ui.ts","webpack:///./wetcats/systems/level-system.ts","webpack:///./wetcats/systems/cats-system.ts","webpack:///./wetcats/systems/enemies-system.ts","webpack:///./wetcats/systems/impulse-system.ts","webpack:///./wetcats/systems/level-ui-system.ts","webpack:///./wetcats/systems/bonus-system.ts","webpack:///./states/BaseState.ts","webpack:///./wetcats/game.ts","webpack:///./splash-view.ts","webpack:///./preloader-view.ts","webpack:///./states/StateManager.ts","webpack:///./wetcats/wetcats.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","System","Map","component","this","isCorrectType","components","set","onAdded","clearComponents","onRemoved","componentRemoved","BaseComponent","disable","enable","e","_entity","_enabled","pools","release","intervals","timeouts","setTickerTimeout","callback","ms","progress","ticker","Ticker","shared","remove","add","clearTickerTimeout","setTimeoutsArray","milsecs","map","done","filter","v","BoundComponent","type","view","mainComponent","seconds","timer","overComp","overlapTriggered","enabled","shape","getViewBounds","undefined","OverlapTypes","Shape","intersects","require","OverlapSystem","overlapComponents","delta","Number","comp","viewEnabled","nType","ENEMIES","toString","nMap","nComp","isIntersects","overlapped","CIRCLE","cBounds","nBounds","circleCircle","x","y","radius","BOX","circleBox","width","height","boxBox","ViewComponent","_shape","_view","createView","Error","getBounds","scale","position","Container","SinkingComponent","_data","mainView","getEntity","direction","getComponent","moveTriggered","SinkingSystem","viewComp","newPos","getNextPosition","triggerCondition","copyFrom","triggered","clearCondition","clear","BubbleComponent","PLAYER","BONUSES","angle","FloatUpComponent","baseData","ImpulseComponent","forceVector","vx","Math","abs","damping","vy","BubbleViewComponent","spine","tint","state","setAnimation","Spine","resources","bubble","spineData","addChild","toGlobal","setEmptyAnimations","clearTrack","lastTime","skeleton","setToSetupPose","SimpleFishViewComponent","sink","fish0","stateData","setMix","EnemyComponent","typeData","bonus","enemyTypeData","impulseData","random","gameRunners","bonusCreate","emit","float","BUBBLES","bubbled","addComponent","obtain","init","b","impulsed","oBubble","impulse","sin","moveAngle","cos","removeComponent","createFakeBubble","pos","enemy","oSink","changeDirection","clearTimeout","CatComponent","_lives","catView","catSaved","lives","startLosing","showLives","setInterval","clearInterval","gameOver","nBubble","hideLives","putInBubble","boomBubble","disableFor","FloatUpSystem","cat","save","ViewSystem","gameContainer","removeChild","AbstractPool","ctor","size","params","createNewInstance","objects","pop","BonusComponent","bonusId","applyBonus","JellyViewComponent","jelly","addListener","complete","onAnimationComplete","entry","animation","JellyComponent","jump","moving","stopMoving","PlayerComponent","killPlayer","BackViewComponent","back","Sprite","from","Texture","BonusViewComponent","Bonus0ViewComponent","g","Graphics","beginFill","drawCircle","endFill","Bonus1ViewComponent","CatViewComponent","createSpine","createMixes","createEvents","Cat0ViewComponent","playStartAnimation","Cat1ViewComponent","step","startCrazy","Enemy0ViewComponent","anim","enemy0","PlayerViewComponent","WHITE","anchor","s1","SimpleFriendViewComponent","img","drawEllipse","mask","ScoreUIComponent","txt","Text","fill","fontSize","text","ComponentPool","console","log","PoolManager","getPool","item","constructor","EntityPool","Entity","pool","active","entityAdded","indexOf","setEntity","componentAdded","destroy","entityRemoved","removeChildren","rotation","constr","ret","BubbleSystem","startPos","WIDTH","HEIGHT","boom","xx","yy","PlayerSystem","startingPointsID","ready","interactive","drawRect","on","onStagePressed","onStageReleased","bubbleDelay","player","id","bonusTimer","mouseData","newPosition","getLocalPosition","updatePlayerRotation","elapsedMS","shoot","atan2","currentRotation","newX","startPoints","clone","rot","createBubble","event","DEG_TO_RAD","Levels","currentLevel","levels","waves","delay","cats","spots","types","bonuses","enemies","randoms","catsAmount","weight","amount","min","max","freq","1","AbstractSpawner","spawnsDelayTicker","spawnId","spawn","pointId","h","w","startX","CatsSpawner","makeSpawn","spotDelayType","getSpawnPosition","getView","at","movingData","getMovingData","bounds","CATS","startImpulse","getStartImpulse","ENEMY_TYPE","CatsRandomSpawner","activeTypeIndex","getIndexRandomData","getRandomSpotType","createNextSpawn","activeType","floor","allSpots","calculateBonus","sum","EnemiesSpawner","getTypeData","sinking","getSinkComponent","PI","JELLY","FISH","FRIEND","ANCHOR","getDirection","getClearCondition","scaleX","EnemiesRandomSpawner","LevelUI","container","score","LevelSystem","uiContainer","level","getLevel","saved","totalSaved","spawners","createBack","createLevelUI","levelStart","reset","forEach","flat","waveStart","waveDelayTicker","waveId","waveData","createCatSpawner","createEnemySpawner","nextLevel","update","levelCompleted","setTimeout","startLevel","saveHighScore","topScore","ui","CatsSystem","EnemiesSystem","ImpulseSystem","updatedDataAndGet","LevelUISystem","setScore","BonusSystem","posX","BaseState","Game","Runner","mouseMoving","waveCompleted","playerContainer","addSystem","system","SplashView","txt1","onStageClicked","off","stateManager","start","PreloaderView","visible","children","StateManager","stage","states","currentState","close","WetCats","createAndStart","loadAssets","Promise","resolve","loader","Loader","loadOptions","crossOrigin","baseUrl","onProgress","load","SpineParser","registerLoaderPlugin","onload","options","autoDensity","resolution","devicePixelRatio","app","Application","maxFPS","document","body","appendChild","style","left","top","game","resize","innerWidth","innerHeight","renderer","addEventListener","onfocus","onblur"],"mappings":"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","file":"bundle.8d562183aacf8a197317.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([171,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { IComponent } from \"./base-component\";\r\n\r\nexport abstract class System<T extends IComponent> {\r\n    protected components: Map<T, null> = new Map();\r\n    public abstract init();\r\n    protected abstract isCorrectType(component: T): boolean;\r\n    public componentAdded(component: T) {\r\n        if (this.isCorrectType(component)) {\r\n            this.components.set(component, null);\r\n            this.onAdded(component);\r\n        }\r\n    }\r\n    public destroy() {\r\n        this.clearComponents();\r\n    }\r\n    protected onAdded(component: T) {\r\n        //empty\r\n    }\r\n    protected onRemoved(component: T) {\r\n        //empty\r\n    }\r\n    protected componentRemoved(component: T) {\r\n        if (this.isCorrectType(component)) {\r\n            this.components.delete(component);\r\n            this.onRemoved(component);\r\n        }\r\n    }\r\n    protected clearComponents() {\r\n        if (!this.components) return;\r\n        for (const [c,v] of this.components) {\r\n            this.componentRemoved(c);\r\n        }\r\n        this.components = null;\r\n    }\r\n}","import { pools } from \"../wetcats/wetcats\";\r\nimport { Entity } from \"./entity\";\r\n\r\nexport interface IComponent {\r\n    getEntity(): Entity | undefined;\r\n    setEntity(e: Entity): void;\r\n    destroy();\r\n}\r\nexport class BaseComponent implements IComponent {\r\n    protected _entity: Entity;\r\n    protected _enabled = false;\r\n    constructor() {\r\n        this.disable();\r\n    }\r\n    public init(...params: any) {\r\n        this.enable();\r\n        return this;\r\n    }\r\n    public setEntity(e: Entity) {\r\n        this._entity = e;\r\n    }\r\n    public getEntity(): Entity | undefined {\r\n        return this._entity;\r\n    }\r\n    public get enabled() {\r\n        return this._enabled;\r\n    }\r\n    public disable() {\r\n        this._enabled = false;\r\n    }\r\n    public enable() {\r\n        this._enabled = true;\r\n    }\r\n    public destroy() {\r\n        this.disable();\r\n        this._entity = null;\r\n        pools.release(this);\r\n    }\r\n}\r\n","import { Ticker, TickerCallback } from \"pixi.js\";\r\n\r\n/*\r\nSmall helper functions to set/clear intervals using pixi ticker\r\n*/\r\nlet intervals: TickerCallback<any>[] = [];\r\nexport function setTickerInterval(\r\n  callback: (args: void) => void,\r\n  ms: number\r\n): TickerCallback<any> {\r\n  let progress = 0;\r\n  const ticker = () => {\r\n    progress += 16.6;//Ticker.shared.elapsedMS;\r\n\r\n    if (progress >= ms) {\r\n      progress = 0;\r\n      callback();\r\n    }\r\n  };\r\n\r\n  Ticker.shared.add(ticker);\r\n  intervals.push(ticker);\r\n  return ticker;\r\n}\r\nexport function clearTickerInterval(ticker: TickerCallback<any>) {\r\n  if (ticker) {\r\n    Ticker.shared.remove(ticker);\r\n  }\r\n}\r\nexport function clearAllIntervals() {\r\n  for (let t of intervals) {\r\n    Ticker.shared.remove(t);\r\n  }\r\n}\r\n\r\nlet timeouts: TickerCallback<any>[] = [];\r\nexport function setTickerTimeout(\r\n  callback: (args: void) => void,\r\n  ms: number\r\n): TickerCallback<any> {\r\n  let progress = 0;\r\n  const ticker = () => {\r\n    progress += 16.6;//Ticker.shared.elapsedMS;\r\n    if (progress >= ms) {\r\n      Ticker.shared.remove(ticker);\r\n      callback();\r\n    }\r\n  };\r\n\r\n  Ticker.shared.add(ticker);\r\n  timeouts.push(ticker);\r\n  return ticker;\r\n}\r\nexport function clearTickerTimeout(ticker: TickerCallback<any>) {\r\n  if (ticker) {\r\n    Ticker.shared.remove(ticker);\r\n  }\r\n}\r\nexport function clearAllTimeouts() {\r\n  for (let t of timeouts) {\r\n    Ticker.shared.remove(t);\r\n  }\r\n}\r\n\r\nexport function setTimeoutsArray(\r\n  callback: (wave: number) => void,\r\n  ms: number[]\r\n): TickerCallback<any> {\r\n  let progress = 0;\r\n  const milsecs: number[] = ms.map((m)=>m*1000);\r\n  const done: boolean[] = milsecs.map(()=>false);\r\n  const ticker = () => {\r\n    progress += 16.6;//Ticker.shared.elapsedMS;\r\n    for (let i = milsecs.length - 1; i >= 0; i--) {\r\n      if (!done[i] && progress >= milsecs[i]) {\r\n        callback(i);\r\n        done[i] = true;\r\n      }\r\n    }\r\n    if (done.filter(v=>!v).length === 0) {\r\n      Ticker.shared.remove(ticker);\r\n    }\r\n  };\r\n  Ticker.shared.add(ticker);\r\n  return ticker;\r\n}\r\n","import { BaseComponent } from \"../../core/base-component\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\nimport { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes, Shape } from \"../systems/overlap-system\";\r\n\r\nexport class BoundComponent extends BaseComponent {\r\n    public type: OverlapTypes;\r\n    private mainComponent: IOverlapTrigger;\r\n    private view: ViewComponent;\r\n    private timer: any;\r\n    override init(type: OverlapTypes, view: ViewComponent, mainComponent: IOverlapTrigger) {\r\n        this.type = type;\r\n        this.view = view;\r\n        this.mainComponent = mainComponent;\r\n        super.init();\r\n        return this;\r\n    }\r\n    public disableFor(seconds: number) {\r\n        this.disable();\r\n        this.timer = setTickerTimeout(()=> {\r\n            this.enable();\r\n        }, seconds);\r\n    }\r\n    public overlapped(overComp: BoundComponent) {\r\n        this.mainComponent.overlapTriggered(overComp);\r\n    }\r\n    public get viewEnabled() {\r\n        return this.view && this.view.enabled;\r\n    }\r\n    public get shape() {\r\n        if (!this.view) debugger;\r\n        return this.view.shape;\r\n    }\r\n    public getViewBounds() {\r\n        return this.view.getViewBounds();\r\n    }\r\n    override destroy() {\r\n        this.type = undefined;\r\n        this.mainComponent = null;\r\n        this.view = undefined;\r\n        super.destroy();\r\n    }\r\n}","import { System } from \"../../core/system\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport \"@pixi/math-extras\";\r\nimport { ICircle, IRectangle } from \"../interfaces/game-interfaces\";\r\nconst intersects = require('intersects');\r\n\r\nexport enum OverlapTypes {\r\n    CATS = 0,\r\n    ENEMIES,\r\n    BUBBLES,\r\n    BONUSES,\r\n    PLAYER\r\n}\r\nexport enum Shape {\r\n    BOX = 0,\r\n    CIRCLE\r\n}\r\nexport class OverlapSystem extends System<BoundComponent> {\r\n    protected overlapComponents: Map<number, Map<BoundComponent, null>> = new Map();\r\n    public init() {\r\n        \r\n    }\r\n    protected isCorrectType(component: BoundComponent): boolean {\r\n        return component instanceof BoundComponent;\r\n    }\r\n    protected onAdded(component: BoundComponent) {\r\n        if (!this.overlapComponents.get(component.type)) {\r\n            this.overlapComponents.set(component.type, new Map());\r\n        }\r\n        const map = this.overlapComponents.get(component.type);\r\n        map.set(component, null);\r\n    }\r\n    protected onRemoved(component: BoundComponent) {\r\n        const map = this.overlapComponents.get(component.type);\r\n        if (map) {\r\n            map.delete(component);\r\n        }\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for (const type in OverlapTypes) {\r\n            const map = this.overlapComponents.get(Number(type));\r\n            if (map) {\r\n                for (const [comp, value] of map) {\r\n                    if (comp.enabled && comp.viewEnabled) {\r\n                        for (const nType in OverlapTypes) {\r\n                            if (nType !== type || nType === OverlapTypes.ENEMIES.toString() && type === OverlapTypes.ENEMIES.toString()) {\r\n                                const nMap = this.overlapComponents.get(Number(nType));\r\n                                if (nMap) {\r\n                                    for (const [nComp, v] of nMap) {\r\n                                        if (comp.enabled && comp.viewEnabled && nComp.enabled && nComp.viewEnabled && nComp !== comp) {\r\n                                            if (this.isIntersects(comp, nComp)) {\r\n                                                comp.overlapped(nComp);\r\n                                                nComp.overlapped(comp);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private isIntersects(comp: BoundComponent, nComp: BoundComponent): boolean {\r\n        if (comp.shape === Shape.CIRCLE) {\r\n            const cBounds = comp.getViewBounds() as ICircle;\r\n            if (nComp.shape === Shape.CIRCLE) {\r\n                const nBounds = nComp.getViewBounds() as ICircle;\r\n                return intersects.circleCircle(cBounds.x, cBounds.y, cBounds.radius, nBounds.x, nBounds.y, nBounds.radius);\r\n            } else if (nComp.shape === Shape.BOX) {\r\n                const nBounds = nComp.getViewBounds() as IRectangle;\r\n                return intersects.circleBox(cBounds.x, cBounds.y, cBounds.radius, nBounds.x, nBounds.y, nBounds.width, nBounds.height);\r\n            }\r\n        } else if (comp.shape === Shape.BOX) {\r\n            const cBounds = comp.getViewBounds() as IRectangle;\r\n            if (nComp.shape === Shape.CIRCLE) {\r\n                const nBounds = nComp.getViewBounds() as ICircle;\r\n                return intersects.circleCircle(nBounds.x, nBounds.y, nBounds.radius, cBounds.x, cBounds.y, cBounds.width, cBounds.height);\r\n            } else if (nComp.shape === Shape.BOX) {\r\n                const nBounds = nComp.getViewBounds() as IRectangle;\r\n                return intersects.boxBox(cBounds.x, cBounds.y, cBounds.width, cBounds.height, nBounds.x, nBounds.y, nBounds.width, nBounds.height);\r\n            }\r\n        }\r\n        return false;                          \r\n    }\r\n    \r\n}","import { Container } from \"@pixi/display\";\r\nimport { ICircle, IRectangle } from \"../wetcats/interfaces/game-interfaces\";\r\nimport { Shape } from \"../wetcats/systems/overlap-system\";\r\nimport { BaseComponent } from \"./base-component\";\r\n\r\nexport class ViewComponent extends BaseComponent {\r\n    protected _shape: Shape;\r\n    private _view: Container;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init(shape: Shape = Shape.BOX) {\r\n        super.init();\r\n        this._shape = shape;\r\n        this._view = this.createView();\r\n        return this;\r\n    }\r\n    public get view() {\r\n        return this._view;\r\n    }\r\n    public get shape() {\r\n        return this._shape;\r\n    }\r\n    public getViewBounds(): ICircle | IRectangle {\r\n        if (this.shape === Shape.CIRCLE) throw new Error(\"Shape is Circle but bounds are not.\");\r\n        return this.view.getBounds();\r\n    }\r\n    override destroy() {\r\n        this.view.scale.set(1, 1);\r\n        this.view.position.set(0,0);\r\n        super.destroy();\r\n    }\r\n    protected createView() {\r\n        if (this.view) return this.view;\r\n        return new Container();\r\n    }\r\n}","import { IPointData } from \"@pixi/math\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\nimport { IMoveTrigger, IMovingData } from \"../interfaces/game-interfaces\";\r\n\r\nexport class SinkingComponent extends BaseComponent {\r\n    protected _data: IMovingData;\r\n    protected mainComponent: IMoveTrigger;\r\n    public get data() {\r\n        return this._data;\r\n    }\r\n    public init(data: IMovingData, mainComponent?: IMoveTrigger) {\r\n        this._data = data;\r\n        this.mainComponent = mainComponent;\r\n        super.init();\r\n        return this;\r\n    }\r\n    public getNextPosition(delta: number): IPointData {\r\n        const {mainView} = this.getEntity();\r\n        return {\r\n            x: mainView.position.x + this.data.direction.x * delta,\r\n            y: mainView.position.y + this.data.direction.y * delta\r\n        };\r\n    }\r\n    public changeDirection() {\r\n        this._data.direction.x *= -1;\r\n        this._data.direction.y *= -1;\r\n        const view = this.getEntity()?.getComponent(ViewComponent);\r\n        view.view.scale.set((this._data.direction.x < 0) ? -1 : 1, 1);\r\n    }\r\n    public triggered() {\r\n        this.mainComponent && this.mainComponent.moveTriggered();\r\n    }\r\n    override destroy() {\r\n        this._data = null;\r\n        this.mainComponent = undefined;\r\n        super.destroy();\r\n    }\r\n}","import { System } from \"../../core/system\";\r\nimport { SinkingComponent } from \"../components/sinking-component\";\r\n\r\nexport class SinkingSystem extends System<SinkingComponent> {\r\n    public init() {\r\n        \r\n    }\r\n    protected isCorrectType(component: SinkingComponent): boolean {\r\n        return component instanceof SinkingComponent;\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity()?.mainView;\r\n            if (viewComp) {\r\n                const newPos = comp.getNextPosition(delta);\r\n                if (comp.data.triggerCondition && comp.data.triggerCondition(newPos)) {\r\n                    viewComp.position.copyFrom(newPos);\r\n                    comp.triggered();\r\n                    comp.disable();\r\n                } else if (comp.data.clearCondition && comp.data.clearCondition(newPos)) {\r\n                    comp.getEntity()?.clear();\r\n                } else {\r\n                    viewComp.position.copyFrom(newPos);\r\n                }\r\n                /*console.log(comp.data.clearCondition(viewComp.position));\r\n                if (\r\n                    comp.data.direction.y === 1 && viewComp.position.y >= HEIGHT ||\r\n                    comp.data.direction.y === -1 && viewComp.position.y < 0 ||\r\n                    comp.data.direction.x === 1 && viewComp.position.x >= WIDTH ||\r\n                    comp.data.direction.x === -1 && viewComp.position.x < 0\r\n                    ) {\r\n                    \r\n                }*/\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { BaseComponent } from \"../../core/base-component\";\r\nimport { IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { BoundComponent } from \"./bound-component\";\r\n\r\nexport class BubbleComponent extends BaseComponent implements IOverlapTrigger {\r\n    private _data: number;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public overlapTriggered(overComp: BoundComponent): void {\r\n        if (overComp.type !== OverlapTypes.PLAYER && overComp.type !== OverlapTypes.BONUSES) {\r\n            this.getEntity()?.clear();\r\n        }\r\n    }\r\n    public init(angle: number) {\r\n        this._data = angle;\r\n        super.init();\r\n        return this;\r\n    }\r\n    public changeDirection() {\r\n        this._data *= -1;\r\n    }\r\n    public get moveAngle() {\r\n        return this._data;\r\n    }\r\n    override destroy() {\r\n        this._data = undefined;\r\n        super.destroy();\r\n    }\r\n}","import { IPointData } from \"@pixi/math\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\n\r\nexport class FloatUpComponent extends BaseComponent {\r\n    private _data: IPointData;\r\n    private static baseData: IPointData = {x: 0, y: -3};\r\n    public get data() {\r\n        return this._data;\r\n    }\r\n    public init() {\r\n        this._data = FloatUpComponent.baseData;\r\n        super.init();\r\n        return this;\r\n    }\r\n    override destroy() {\r\n        this._data = undefined;\r\n        super.destroy();\r\n    }\r\n}","import { BaseComponent } from \"../../core/base-component\";\r\nimport { IImpulseData } from \"../interfaces/game-interfaces\";\r\n\r\nexport class ImpulseComponent extends BaseComponent {\r\n    private _data: IImpulseData;\r\n    public get data() {\r\n        return this._data;\r\n    }\r\n    public init(data: IImpulseData) {\r\n        this._data = data;\r\n        super.init();\r\n        return this;\r\n    }\r\n    override destroy() {\r\n        this._data = null;\r\n        super.destroy();\r\n    }\r\n    public updatedDataAndGet () {\r\n        if (this._data.forceVector.x !== 0) {\r\n            const vx = this._data.forceVector.x / Math.abs(this._data.forceVector.x);\r\n            this._data.forceVector.x -= this.data.damping * vx;\r\n            if (this._data.forceVector.x === 0 || this._data.forceVector.x / Math.abs(this._data.forceVector.x) !== vx) {\r\n                this._data.forceVector.x = 0;\r\n            }\r\n        }\r\n        if (this._data.forceVector.y !== 0) {\r\n            const vy = this._data.forceVector.y / Math.abs(this._data.forceVector.y);\r\n            this._data.forceVector.y -= this.data.damping * vy;\r\n            if (this._data.forceVector.y === 0 || this._data.forceVector.y / Math.abs(this._data.forceVector.y) !== vy) {\r\n                this._data.forceVector.y = 0;\r\n            }\r\n        }\r\n        return this._data;\r\n    }\r\n}","import { Spine } from \"../../..\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { resources } from \"../../wetcats\";\r\n\r\nexport class BubbleViewComponent extends ViewComponent {\r\n    private spine: Spine;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init(scale: number = 1) {\r\n        super.init(Shape.CIRCLE);\r\n        this.view.scale.set(scale, scale);\r\n        return this;\r\n    }\r\n    public set tint(v: number) {\r\n        this.spine.tint = v;\r\n    }\r\n    public get tint() {\r\n        return this.spine.tint;\r\n    }\r\n    public boom() {\r\n        this.spine.state.setAnimation(0, \"boom\", false);\r\n    }\r\n    public float() {\r\n        this.spine.state.setAnimation(0, \"float\", true);\r\n    }\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        this.spine = new Spine(resources.bubble.spineData);\r\n        c.addChild(this.spine);\r\n        return c;\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 50 * this.view.scale.x};\r\n    }\r\n    override destroy() {\r\n        this.tint = 0xFFFFFF;\r\n        this.spine.state.setEmptyAnimations(0);\r\n        this.spine.state.clearTrack(0);\r\n        // @ts-ignore\r\n        this.spine.lastTime = null;\r\n        this.spine.skeleton.setToSetupPose();\r\n        super.destroy();\r\n    }\r\n}","import { Spine } from \"../../..\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { resources } from \"../../wetcats\";\r\n\r\nexport class SimpleFishViewComponent extends ViewComponent {\r\n    private spine: Spine;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init() {\r\n        super.init(Shape.CIRCLE);\r\n        return this;\r\n    }\r\n    public float() {\r\n        this.spine.state.setAnimation(0, \"float\", true);\r\n    }\r\n    public sink() {\r\n        this.spine.state.setAnimation(0, \"sink\", true);\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 30};\r\n    }\r\n    override createView() {\r\n        if (this.view) {\r\n            this.sink();\r\n            return this.view;\r\n        }\r\n        const c = super.createView();\r\n        this.spine = new Spine(resources.fish0.spineData);\r\n        c.addChild(this.spine);\r\n        this.spine.stateData.setMix('sink', 'float', 0.1);\r\n        this.spine.stateData.setMix('float', 'sink', 0.1);\r\n        this.sink();\r\n        return c;\r\n    }\r\n    override destroy() {\r\n        this.spine.state.setEmptyAnimations(0);\r\n        this.spine.state.clearTrack(0);\r\n        // @ts-ignore\r\n        this.spine.lastTime = null;\r\n        this.spine.skeleton.setToSetupPose();\r\n        super.destroy();\r\n    }\r\n}","import { IPointData } from \"@pixi/math\";\r\nimport { gameRunners } from \"../..\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { EnemyTypeData, IImpulseData, IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { pools } from \"../wetcats\";\r\nimport { BoundComponent } from \"./bound-component\";\r\nimport { BubbleComponent } from \"./bubble-component\";\r\nimport { FloatUpComponent } from \"./float-up-component\";\r\nimport { ImpulseComponent } from \"./impulse-component\";\r\nimport { SinkingComponent } from \"./sinking-component\";\r\nimport { BubbleViewComponent } from \"./views/bubble-view-component\";\r\nimport { SimpleFishViewComponent } from \"./views/simple-fish-view-component\";\r\n\r\n\r\nexport class EnemyComponent extends BaseComponent implements IOverlapTrigger {\r\n    private timer: number;\r\n    public impulseData: IPointData;\r\n    public enemyTypeData: EnemyTypeData;\r\n    private bonus: number;\r\n    constructor() {\r\n        super();\r\n    }\r\n    override init(typeData: EnemyTypeData, bonus: number) {\r\n        this.enemyTypeData = typeData;\r\n        this.bonus = bonus;\r\n        this.impulseData = {x: Math.random()<0.5 ? -5 : 5, y: -7};\r\n        super.init();\r\n        return this;\r\n    }\r\n    \r\n    public save() {\r\n        if (this.bonus >= 0) {\r\n            gameRunners.bonusCreate.emit(this.getEntity().mainView.position.x, this.bonus);\r\n        }\r\n    }\r\n    public overlapTriggered(overComp: BoundComponent): void {\r\n        const type = overComp.type;\r\n        const sink = this.getEntity()?.getComponent(SinkingComponent);\r\n        const float = this.getEntity()?.getComponent(FloatUpComponent);\r\n        if (type === OverlapTypes.BUBBLES) {\r\n            if (sink.enabled && this.enemyTypeData.bubbled) {\r\n                sink.disable();\r\n                this.getEntity()?.addComponent(pools.obtain(FloatUpComponent).init());\r\n                const b = pools.obtain(BubbleViewComponent);\r\n                this.getEntity()?.addComponent(b.init());\r\n                b.tint = 0x7afff6;\r\n                b.float();\r\n                this.getEntity()?.getComponent(SimpleFishViewComponent)?.float();\r\n            }\r\n            if (this.enemyTypeData.impulsed) {\r\n                const oBubble = overComp.getEntity()?.getComponent(BubbleComponent);\r\n                const force = 10;\r\n                const impulse: IImpulseData = {damping: 0.4, forceVector: {x: 0, y: -force}};\r\n                if (oBubble) {\r\n                    impulse.forceVector.x = force * Math.sin(oBubble.moveAngle);\r\n                    impulse.forceVector.y = force * Math.cos(oBubble.moveAngle);\r\n                }\r\n                this.getEntity()?.addComponent(pools.obtain(ImpulseComponent).init(impulse));\r\n            }\r\n            \r\n        } else if ((type === OverlapTypes.ENEMIES) && float && float.enabled) {\r\n            sink.enable();\r\n            this.getEntity()?.removeComponent(float);\r\n            const bubble = this.getEntity()?.getComponent(BubbleViewComponent);\r\n            gameRunners.createFakeBubble.emit({pos: this.getEntity()?.mainView.position, scale: bubble.view.scale.x, tint: bubble.tint});\r\n            this.getEntity()?.getComponent(SimpleFishViewComponent)?.sink();\r\n            this.getEntity()?.removeComponent(bubble);\r\n            const enemy = overComp.getEntity()?.getComponent(EnemyComponent);\r\n            const oSink = overComp.getEntity()?.getComponent(SinkingComponent);\r\n            oSink && enemy.enemyTypeData.changeDirection && oSink.changeDirection();\r\n        }\r\n    }\r\n    override destroy() {\r\n        this.bonus = undefined;\r\n        window.clearTimeout(this.timer);\r\n        super.destroy();\r\n    }\r\n}","import { gameRunners } from \"../..\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { IImpulseData, IMoveTrigger, IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { pools } from \"../wetcats\";\r\nimport { BoundComponent } from \"./bound-component\";\r\nimport { BubbleComponent } from \"./bubble-component\";\r\nimport { EnemyComponent } from \"./enemy-component\";\r\nimport { FloatUpComponent } from \"./float-up-component\";\r\nimport { ImpulseComponent } from \"./impulse-component\";\r\nimport { SinkingComponent } from \"./sinking-component\";\r\nimport { BubbleViewComponent } from \"./views/bubble-view-component\";\r\nimport { CatViewComponent } from \"./views/cat-view-component\";\r\n\r\n\r\nexport class CatComponent extends BaseComponent implements IOverlapTrigger, IMoveTrigger {\r\n    private _lives: number;\r\n    private timer: number;\r\n    private catView: CatViewComponent;\r\n    private bonus: number;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public get lives() {\r\n        return this._lives;\r\n    }\r\n    public init(catView: CatViewComponent, bonus: number) {\r\n        this.bonus = bonus;\r\n        this._lives = 1;\r\n        this.catView = catView;\r\n        super.init();\r\n        return this;\r\n    }\r\n    public save() {\r\n        if (this.bonus >= 0) {\r\n            gameRunners.bonusCreate.emit(this.catView.position.x, this.bonus);\r\n        }\r\n        gameRunners.catSaved.emit(this.lives);\r\n    }\r\n    public moveTriggered(): void {\r\n        this.catView.startLosing();\r\n        this.catView.showLives(this._lives);\r\n        this.timer = window.setInterval(()=> {\r\n            const bubble = this.getEntity()?.getComponent(BubbleViewComponent);\r\n            if (bubble) {\r\n                window.clearInterval(this.timer);\r\n            } else {\r\n                this._lives--;\r\n                this.catView.showLives(this._lives);\r\n                if (this._lives <= 0) {\r\n                    window.clearInterval(this.timer);\r\n                    gameRunners.gameOver.emit();\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n    public overlapTriggered(overComp: BoundComponent): void {\r\n        const {type} = overComp;\r\n        const sink = this.getEntity()?.getComponent(SinkingComponent);\r\n        const bubble = this.getEntity()?.getComponent(BubbleViewComponent);\r\n        if (type === OverlapTypes.BUBBLES) {\r\n            const oBubble = overComp.getEntity()?.getComponent(BubbleComponent);\r\n            const impulse: IImpulseData = {damping: 0.4, forceVector: {x: 0, y: -10}};\r\n            if (oBubble) {\r\n                impulse.forceVector.x = 10 * Math.sin(oBubble.moveAngle);\r\n                impulse.forceVector.y = 10 * Math.cos(oBubble.moveAngle);\r\n            }\r\n            if (sink.enabled && this.catView.position.y > 80 || !sink.enabled && !bubble) {\r\n                window.clearInterval(this.timer);\r\n                sink.disable();\r\n                this.getEntity()?.addComponent(pools.obtain(FloatUpComponent).init());\r\n                this.getEntity()?.addComponent(pools.obtain(ImpulseComponent).init(impulse));\r\n                const nBubble = pools.obtain(BubbleViewComponent).init(0.8);\r\n                nBubble.view.position.y = -35;\r\n                this.getEntity()?.addComponent(nBubble);\r\n                nBubble.float();\r\n                this.catView.hideLives();\r\n                this.catView.putInBubble();\r\n            } else if (!sink.enabled && bubble) {\r\n                this.getEntity()?.addComponent(pools.obtain(ImpulseComponent).init(impulse));\r\n            }\r\n            \r\n        } else if ((type === OverlapTypes.ENEMIES) && !sink.enabled && bubble) {\r\n            const enemy = overComp.getEntity()?.getComponent(EnemyComponent);\r\n            const oSink = overComp.getEntity()?.getComponent(SinkingComponent);\r\n            if (enemy && oSink && oSink.enabled) {\r\n                this.boomBubble(sink, bubble);\r\n                const bound = overComp.getEntity()?.getComponent(BoundComponent);\r\n                bound.disableFor(1);\r\n                if (enemy.enemyTypeData.changeDirection) {\r\n                    oSink.changeDirection();\r\n                }\r\n            }\r\n            \r\n            \r\n            \r\n        }\r\n    }\r\n    public boomBubble(sink?: SinkingComponent, bubble?: BubbleViewComponent) {\r\n        if (!sink) {\r\n            sink = this.getEntity()?.getComponent(SinkingComponent);\r\n        }\r\n        if (!bubble) {\r\n            bubble = this.getEntity()?.getComponent(BubbleViewComponent);\r\n        }\r\n        //todo hate that\r\n        sink.data.direction.y = 3;\r\n        sink.enable();\r\n        this.getEntity()?.removeComponent(this.getEntity()?.getComponent(FloatUpComponent));\r\n        const pos = {x: this.getEntity()?.mainView.position.x, y: this.getEntity()?.mainView.position.y - 35};\r\n        gameRunners.createFakeBubble.emit({pos, scale: bubble.view.scale.x, tint: bubble.tint});\r\n        this.getEntity()?.removeComponent(bubble);\r\n        this.catView.sink();\r\n    }\r\n    override destroy() {\r\n        this.bonus = undefined;\r\n        window.clearInterval(this.timer);\r\n        super.destroy();\r\n    }\r\n}","import { gameRunners } from \"../..\";\r\nimport { System } from \"../../core/system\";\r\nimport { CatComponent } from \"../components/cat-component\";\r\nimport { EnemyComponent } from \"../components/enemy-component\";\r\nimport { FloatUpComponent } from \"../components/float-up-component\";\r\n\r\nexport class FloatUpSystem extends System<FloatUpComponent> {\r\n    public init() {\r\n        //\r\n    }\r\n    protected isCorrectType(component: FloatUpComponent): boolean {\r\n        return component instanceof FloatUpComponent;\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity()?.mainView;\r\n            if (viewComp) {\r\n                viewComp.position.x += comp.data.x * delta;\r\n                viewComp.position.y += comp.data.y * delta;\r\n                if (viewComp.position.y < -50) {\r\n                    const cat = comp.getEntity()?.getComponent(CatComponent);\r\n                    cat && cat.save();\r\n                    const enemy = comp.getEntity()?.getComponent(EnemyComponent);\r\n                    enemy && enemy.save();\r\n                    comp.getEntity()?.clear();\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n}","import { Container } from \"@pixi/display\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { System } from \"../../core/system\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\n\r\nexport class ViewSystem extends System<ViewComponent> {\r\n    private gameContainer: Container;\r\n    constructor(gameContainer: Container) {\r\n        super();\r\n        this.gameContainer = gameContainer;\r\n    }\r\n    public init() {\r\n        //nothing to init\r\n    }\r\n    public entityAdded(e: Entity) {\r\n        this.gameContainer.addChild(e.mainView);\r\n    }\r\n    public entityRemoved(e: Entity) {\r\n        this.gameContainer.removeChild(e.mainView);\r\n    }\r\n    protected onAdded(component: ViewComponent) {\r\n        component.getEntity().mainView.addChild(component.view);\r\n    }\r\n    protected onRemoved(component: ViewComponent) {\r\n        component.getEntity().mainView.removeChild(component.view);\r\n    }\r\n    protected isCorrectType(component: ViewComponent) {\r\n        return component instanceof ViewComponent;\r\n    }\r\n    \r\n}","import { IPool } from \"./pool\";\r\n\r\n/**\r\n * Base implementation of pooling.\r\n *\r\n * Children should implement createNewInstance() which specifies how objects are created.\r\n */\r\nexport abstract class AbstractPool<T> implements IPool<T> {\r\n    protected ctor: new () => T;\r\n    protected readonly objects: T[] = [];\r\n\r\n    init(ctor: new () => T, size: number, ...params: any[]) {\r\n        this.ctor = ctor;\r\n        for (let i =  0; i < size; i++) {\r\n            this.release(this.createNewInstance(...params));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    obtain(...params: any[]): T {\r\n        //console.log(\"obtain\",this.objects.length,this);\r\n        return this.objects.pop() || this.createNewInstance(...params);\r\n    }\r\n\r\n    release(...objects: T[]): void {\r\n        this.objects.push(...objects);\r\n        //console.log(\"release\",this.objects.length,this);\r\n    }\r\n    get length() {\r\n        return this.objects.length;\r\n    }\r\n\r\n    protected abstract createNewInstance(...params: any[]): T;\r\n}\r\n","import { gameRunners } from \"../..\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { BoundComponent } from \"./bound-component\";\r\n\r\nexport class BonusComponent extends BaseComponent implements IOverlapTrigger {\r\n    private bonusId: number;\r\n    override init(bonusId: number) {\r\n        this.bonusId = bonusId;\r\n        super.init();\r\n        return this;\r\n    }\r\n    public overlapTriggered(overComp: BoundComponent): void {\r\n        if (overComp.type === OverlapTypes.PLAYER) {\r\n            gameRunners.applyBonus.emit(this.bonusId);\r\n            this.getEntity()?.clear();\r\n        }\r\n    }\r\n}","import { Spine, TrackEntry } from \"../../..\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { resources } from \"../../wetcats\";\r\nimport { JellyComponent } from \"../jelly-component\";\r\n\r\nexport class JellyViewComponent extends ViewComponent {\r\n    private spine: Spine;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init() {\r\n        super.init(Shape.CIRCLE);\r\n        return this;\r\n    }\r\n    public float() {\r\n        this.spine.state.setAnimation(0, \"float\", false);\r\n    }\r\n    public jump() {\r\n        this.spine.state.setAnimation(0, \"jump\", false);\r\n    }\r\n    public moving() {\r\n        this.spine.state.setAnimation(0, \"moving\", true);\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 50};\r\n    }\r\n    override createView() {\r\n        if (this.view) \r\n        {\r\n            this.float();\r\n            return this.view;\r\n        }\r\n        const c = super.createView();\r\n        this.spine = new Spine(resources.jelly.spineData);\r\n        c.addChild(this.spine);\r\n        this.spine.state.addListener({\r\n            complete: this.onAnimationComplete.bind(this),\r\n        });\r\n        this.float();\r\n        return c;\r\n    }\r\n    override destroy() {\r\n        this.spine.state.setEmptyAnimations(0);\r\n        this.spine.state.clearTrack(0);\r\n        // @ts-ignore\r\n        this.spine.lastTime = null;\r\n        this.spine.skeleton.setToSetupPose();\r\n        super.destroy();\r\n    }\r\n    protected onAnimationComplete(entry: TrackEntry) {\r\n        switch (entry.animation.name) {\r\n            case \"float\":\r\n                const jelly = this.getEntity()?.getComponent(JellyComponent);\r\n                jelly.changeDirection();\r\n                this.jump();\r\n                break;\r\n            case \"jump\":\r\n                this.moving();\r\n                break;\r\n        }\r\n    }\r\n}","import { IPointData } from \"@pixi/math\";\r\nimport { clearTickerInterval, setTickerInterval } from \"../../utils/intervals\";\r\nimport { IMoveTrigger, IMovingData } from \"../interfaces/game-interfaces\";\r\nimport { SinkingComponent } from \"./sinking-component\";\r\nimport { JellyViewComponent } from \"./views/jelly-view-component\";\r\n\r\nexport class JellyComponent extends SinkingComponent {\r\n    private timer: any;\r\n    private save: IPointData;\r\n\r\n    override init(data: IMovingData, mainComponent?: IMoveTrigger) {\r\n        super.init(data, mainComponent);\r\n        this.save = this.data.direction;\r\n        this.timer = setTickerInterval(()=> {\r\n            this.stopMoving();\r\n        }, 2000);\r\n        return this;\r\n    }\r\n    override getNextPosition(delta: number): IPointData {\r\n        const {mainView} = this.getEntity();\r\n        return {\r\n            x: mainView.position.x + this.data.direction.x * delta,\r\n            y: mainView.position.y + this.data.direction.y * delta\r\n        };\r\n    }\r\n    private stopMoving() {\r\n        this.save = this.data.direction;\r\n        this.data.direction = {x:0, y:0};\r\n        const view = this.getEntity()?.getComponent(JellyViewComponent);\r\n        view.float();\r\n    }\r\n    override changeDirection() {\r\n        this.data.direction = this.save;\r\n        //this.data.direction.x *= -1;\r\n    }\r\n    override destroy() {\r\n        clearTickerInterval(this.timer);\r\n        super.destroy();\r\n    }\r\n}","import { gameRunners } from \"../..\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { IOverlapTrigger } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { BoundComponent } from \"./bound-component\";\r\nimport { EnemyComponent } from \"./enemy-component\";\r\nimport { FloatUpComponent } from \"./float-up-component\";\r\n\r\nexport class PlayerComponent extends BaseComponent implements IOverlapTrigger {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public overlapTriggered(overComp: BoundComponent): void {\r\n        const {type} = overComp;\r\n        const float = overComp.getEntity()?.getComponent(FloatUpComponent);\r\n        const enemy = overComp.getEntity()?.getComponent(EnemyComponent);\r\n        if (type === OverlapTypes.ENEMIES && enemy.enemyTypeData.killPlayer && (!float || !float.enabled)) {\r\n            gameRunners.gameOver.emit();\r\n        }\r\n    }\r\n    public init() {\r\n        super.init();\r\n        return this;\r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\n\r\nexport class BackViewComponent extends ViewComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        const back = Sprite.from(Texture.from(\"back\"));\r\n        c.addChild(back);\r\n        return c;\r\n    }\r\n}","import { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\n\r\nexport abstract class BonusViewComponent extends ViewComponent {\r\n    public init() {\r\n        super.init(Shape.CIRCLE);\r\n        return this;\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 20};\r\n    }\r\n}","import { Graphics } from \"@pixi/graphics\";\r\nimport { BonusViewComponent } from \"./bonus-view-component\";\r\n\r\nexport class Bonus0ViewComponent extends BonusViewComponent {\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF00FF, 0.5);\r\n        g.drawCircle(0,0,20);\r\n        g.endFill();\r\n        c.addChild(g);\r\n        return c;\r\n    }\r\n}","import { Graphics } from \"@pixi/graphics\";\r\nimport { BonusViewComponent } from \"./bonus-view-component\";\r\n\r\nexport class Bonus1ViewComponent extends BonusViewComponent {\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 0.6);\r\n        g.drawCircle(0,0,20);\r\n        g.endFill();\r\n        c.addChild(g);\r\n        return c;\r\n    }\r\n}","\r\nimport { Spine, TrackEntry } from \"../../..\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\nimport { setTickerTimeout } from \"../../../utils/intervals\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { CatComponent } from \"../cat-component\";\r\n\r\nexport abstract class CatViewComponent extends ViewComponent {\r\n    //protected livesMeter: LivesMeterView;\r\n    protected animation: Spine;\r\n    protected goingCrazy: number;\r\n    //private crazyTimer: number;\r\n    protected playStartAnimation: boolean;\r\n    public get position() {\r\n        return this.getEntity()?.mainView.position;\r\n    }\r\n    public init() {\r\n        super.init(Shape.CIRCLE);\r\n        return this;\r\n    }\r\n    override createView() {\r\n        const c = super.createView();\r\n        this.createSpine();\r\n        c.addChild(this.animation);\r\n        //this.livesMeter = this.createLives();\r\n        //c.addChild(this.livesMeter);\r\n        return c;\r\n    }\r\n    override destroy() {\r\n        this.animation.state.setEmptyAnimations(0);\r\n        this.animation.state.clearTrack(0);\r\n        // @ts-ignore\r\n        this.animation.lastTime = null;\r\n        this.animation.skeleton.setToSetupPose();\r\n        //window.clearTimeout(this.crazyTimer);\r\n        super.destroy();\r\n    }\r\n    public showLives(value: number) {\r\n        //this.livesMeter.visible = true;\r\n        //this.livesMeter.updateLives(value);\r\n    }\r\n    public hideLives() {\r\n        //this.livesMeter.visible = false;\r\n    }\r\n    public putInBubble() {\r\n        /*window.clearTimeout(this.crazyTimer);\r\n        this.goingCrazy = Math.random() < 1 ? Math.random() * 2500 + 1000 : -1;\r\n        if (this.goingCrazy !== -1) {\r\n            this.crazyTimer = window.setTimeout(()=> {\r\n                this.startCrazy();\r\n            }, this.goingCrazy);\r\n        }*/\r\n        this.animation.state.setAnimation(0, \"in_bubble\", true);\r\n    }\r\n    public sink() {\r\n        //window.clearTimeout(this.crazyTimer);\r\n        //setTickerTimeout(()=> {\r\n        this.animation.state.setAnimation(0, \"sink\", true);\r\n        //}, Math.random()*200);\r\n    }\r\n    public startLosing() {\r\n        this.animation.state.setAnimation(0, \"losing\", true);\r\n    }\r\n    public startCrazy() {\r\n        this.animation.state.setAnimation(0, \"crazy\", false);\r\n    }\r\n    protected createSpine() {\r\n        this.createMixes();\r\n        this.createEvents();\r\n    }\r\n    protected createEvents() {\r\n        this.animation.state.addListener({\r\n            complete: this.onAnimationComplete.bind(this),\r\n        });\r\n    }\r\n    /*protected createLives() {\r\n        const lives = new LivesMeterView(9);\r\n        lives.position.set(0, -80);\r\n        lives.visible = false;\r\n        return lives;\r\n    }*/\r\n    protected createMixes() {\r\n        this.animation.stateData.setMix('drop', 'sink', 0.1);\r\n        this.animation.stateData.setMix('sink', 'in_bubble', 0.1);\r\n        this.animation.stateData.setMix('in_bubble', 'sink', 0.1);\r\n        this.animation.stateData.setMix('sink', 'losing', 0.2);\r\n        this.animation.stateData.setMix('losing', 'in_bubble', 0.1);\r\n        this.animation.stateData.setMix('sink2', 'crazy', 0.1);\r\n        this.animation.stateData.setMix('crazy', 'sink', 0.1);\r\n    }\r\n    protected onAnimationComplete(entry: TrackEntry) {\r\n        switch (entry.animation.name) {\r\n            case \"drop\":\r\n                this.sink();\r\n                break;\r\n            case \"crazy\":\r\n                setTickerTimeout(()=> {\r\n                    const cat = this.getEntity()?.getComponent(CatComponent);\r\n                    cat?.boomBubble();\r\n                }, 65);\r\n                break;\r\n        }\r\n    }\r\n}","import { Spine } from \"../../..\";\r\nimport { resources } from \"../../wetcats\";\r\nimport { CatViewComponent } from \"./cat-view-component\";\r\n\r\n\r\nexport class Cat0ViewComponent extends CatViewComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    override createSpine() {\r\n        if (!this.animation) {\r\n            this.animation = new Spine(resources.cat.spineData);\r\n            super.createSpine();\r\n        }\r\n        this.animation.scale.set(0.7,0.7);\r\n        if (this.playStartAnimation) {\r\n            this.animation.state.setAnimation(0, \"drop\", false);  \r\n        } else {\r\n            this.sink();\r\n        }\r\n        \r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 30};\r\n    }\r\n}","import { Spine } from \"../../..\";\r\nimport { resources } from \"../../wetcats\";\r\nimport { CatViewComponent } from \"./cat-view-component\";\r\n\r\n\r\nexport class Cat1ViewComponent extends CatViewComponent {\r\n    private step: number;\r\n    constructor() {\r\n        super();\r\n    }\r\n    override init() {\r\n        this.step = 0;\r\n        super.init();\r\n        return this;\r\n    }\r\n    override sink() {\r\n        if (this.step === 0) {\r\n            this.animation.state.setAnimation(0, \"sink2\", true);\r\n        } else {\r\n            super.sink();\r\n        }\r\n    }\r\n    override putInBubble() {\r\n        this.step++;\r\n        if (this.step === 1) {\r\n            this.startCrazy();\r\n        } else {\r\n            super.putInBubble();\r\n        }\r\n    }\r\n    override createSpine() {\r\n        if (!this.animation) {\r\n            this.animation = new Spine(resources.cat.spineData);\r\n            super.createSpine();\r\n        }\r\n        this.animation.scale.set(0.7,0.7);\r\n        if (this.playStartAnimation) {\r\n            this.animation.state.setAnimation(0, \"drop\", false);  \r\n        } else {\r\n            this.sink();\r\n        }\r\n        \r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 30};\r\n    }\r\n    override destroy() {\r\n        this.step = 0;\r\n        super.destroy();\r\n    }\r\n}","import { Spine } from \"../../..\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { resources } from \"../../wetcats\";\r\n\r\nexport class Enemy0ViewComponent extends ViewComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init() {\r\n        super.init(Shape.BOX);\r\n        return this;\r\n    }\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        const anim = new Spine(resources.enemy0.spineData);\r\n        c.addChild(anim);\r\n        return c;\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x: x-5, y: y-15, width: 10, height: 30};\r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { ViewComponent } from \"../../../core/view-component\";\r\n\r\nexport class PlayerViewComponent extends ViewComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        const s = Sprite.from(Texture.WHITE);\r\n        s.tint = 0x000000;\r\n        s.width = 60;\r\n        s.height = 100;\r\n        s.anchor.set(0.5, 0);\r\n        c.addChild(s);\r\n        const s1 = Sprite.from(Texture.WHITE);\r\n        s1.tint = 0xFFFF00;\r\n        s1.width = 60;\r\n        s1.height = 10;\r\n        s1.anchor.set(0.5, 0);\r\n        s1.position.set(0, 100);\r\n        c.addChild(s1);\r\n        return c;\r\n    }\r\n}","import { ViewComponent } from \"../../../core/view-component\";\r\nimport { Shape } from \"../../systems/overlap-system\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Texture } from \"@pixi/core\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\n\r\nexport class SimpleFriendViewComponent extends ViewComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public init() {\r\n        super.init(Shape.CIRCLE);\r\n        return this;\r\n    }\r\n    public float() {\r\n        //\r\n    }\r\n    public sink() {\r\n        //\r\n    }\r\n    override getViewBounds() {\r\n        const {x, y} = this.view.toGlobal({x:0,y:0});\r\n        return {x, y, radius: 50};\r\n    }\r\n    override createView() {\r\n        if (this.view) {\r\n            this.sink();\r\n            return this.view;\r\n        }\r\n        const c = super.createView();\r\n        const img = Sprite.from(Texture.WHITE);\r\n        img.scale.set(0.5, 0.5);\r\n        img.anchor.set(0.5,0.5);\r\n        c.addChild(img);\r\n\r\n        const m = new Graphics();\r\n        m.beginFill(0,1);\r\n        m.drawEllipse(0,0,50,60);\r\n        m.endFill();\r\n        c.addChild(m);\r\n\r\n        img.mask = m;\r\n\r\n        this.sink();\r\n        return c;\r\n    }\r\n    override destroy() {\r\n        super.destroy();\r\n    }\r\n}","import { Text } from \"@pixi/text\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\n\r\nexport class ScoreUIComponent extends ViewComponent {\r\n    private txt: Text;\r\n    override createView() {\r\n        if (this.view) return this.view;\r\n        const c = super.createView();\r\n        this.txt = new Text(\"0\", {fill: \"#000000\", fontSize: \"40px\"});\r\n        this.txt.position.set(10, 10);\r\n        c.addChild(this.txt);\r\n        return c;\r\n    }\r\n    public setScore(value: number) {\r\n        this.txt.text = value.toString();\r\n    }\r\n}","import { AbstractPool } from \".\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { CatComponent } from \"../components/cat-component\";\r\n\r\nexport class ComponentPool<T extends BaseComponent> extends AbstractPool<T> {\r\n    public print(): void {\r\n        console.log(this.objects.length);\r\n    }\r\n    protected createNewInstance(...params: any[]): T {\r\n        return new this.ctor();\r\n    }\r\n}","import { IPool } from \".\";\r\nimport { BaseComponent } from \"../../core/base-component\";\r\nimport { BonusComponent } from \"../components/bonus-component\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport { BubbleComponent } from \"../components/bubble-component\";\r\nimport { CatComponent } from \"../components/cat-component\";\r\nimport { EnemyComponent } from \"../components/enemy-component\";\r\nimport { FloatUpComponent } from \"../components/float-up-component\";\r\nimport { ImpulseComponent } from \"../components/impulse-component\";\r\nimport { JellyComponent } from \"../components/jelly-component\";\r\nimport { PlayerComponent } from \"../components/player-component\";\r\nimport { SinkingComponent } from \"../components/sinking-component\";\r\nimport { BackViewComponent } from \"../components/views/back-view-component\";\r\nimport { Bonus0ViewComponent } from \"../components/views/bonus0-view-component\";\r\nimport { Bonus1ViewComponent } from \"../components/views/bonus1-view-component\";\r\nimport { BubbleViewComponent } from \"../components/views/bubble-view-component\";\r\nimport { Cat0ViewComponent } from \"../components/views/cat0-view-component\";\r\nimport { Cat1ViewComponent } from \"../components/views/cat1-view-component\";\r\nimport { Enemy0ViewComponent } from \"../components/views/enemy0-view-component\";\r\nimport { JellyViewComponent } from \"../components/views/jelly-view-component\";\r\nimport { PlayerViewComponent } from \"../components/views/player-view-component\";\r\nimport { SimpleFishViewComponent } from \"../components/views/simple-fish-view-component\";\r\nimport { SimpleFriendViewComponent } from \"../components/views/simple-friend-view-component\";\r\nimport { ScoreUIComponent } from \"../ui/score-ui-component\";\r\nimport { ComponentPool } from \"./component-pool\";\r\n\r\nexport class PoolManager {\r\n    private pools: Map<{ new(): BaseComponent}, IPool<any>>;\r\n    constructor() {\r\n        this.pools = new Map<{ new(): BaseComponent}, IPool<any>>();\r\n        //pools\r\n        this.pools.set(SinkingComponent, new ComponentPool<SinkingComponent>().init(SinkingComponent, 10));\r\n        this.pools.set(PlayerComponent, new ComponentPool<PlayerComponent>().init(PlayerComponent, 1));\r\n        this.pools.set(JellyComponent, new ComponentPool<JellyComponent>().init(JellyComponent, 3));\r\n        this.pools.set(ImpulseComponent, new ComponentPool<ImpulseComponent>().init(ImpulseComponent, 10));\r\n        this.pools.set(FloatUpComponent, new ComponentPool<FloatUpComponent>().init(FloatUpComponent, 10));\r\n        this.pools.set(EnemyComponent, new ComponentPool<EnemyComponent>().init(EnemyComponent, 10));\r\n        this.pools.set(CatComponent, new ComponentPool<CatComponent>().init(CatComponent, 10));\r\n        this.pools.set(BubbleComponent, new ComponentPool<BubbleComponent>().init(BubbleComponent, 10));\r\n        this.pools.set(BoundComponent, new ComponentPool<BoundComponent>().init(BoundComponent, 10));\r\n        this.pools.set(BonusComponent, new ComponentPool<BonusComponent>().init(BonusComponent, 4));\r\n        this.pools.set(SimpleFishViewComponent, new ComponentPool<SimpleFishViewComponent>().init(SimpleFishViewComponent, 6));\r\n        this.pools.set(PlayerViewComponent, new ComponentPool<PlayerViewComponent>().init(PlayerViewComponent, 1));\r\n\r\n        this.pools.set(JellyViewComponent, new ComponentPool<JellyViewComponent>().init(JellyViewComponent, 10));\r\n        this.pools.set(Enemy0ViewComponent, new ComponentPool<Enemy0ViewComponent>().init(Enemy0ViewComponent, 4));\r\n        this.pools.set(SimpleFriendViewComponent, new ComponentPool<SimpleFriendViewComponent>().init(SimpleFriendViewComponent, 4));\r\n\r\n        this.pools.set(Cat0ViewComponent, new ComponentPool<Cat0ViewComponent>().init(Cat0ViewComponent, 10));\r\n        this.pools.set(Cat1ViewComponent, new ComponentPool<Cat1ViewComponent>().init(Cat1ViewComponent, 10));\r\n        this.pools.set(BubbleViewComponent, new ComponentPool<BubbleViewComponent>().init(BubbleViewComponent, 20));\r\n        this.pools.set(Bonus0ViewComponent, new ComponentPool<Bonus0ViewComponent>().init(Bonus0ViewComponent, 2));\r\n        this.pools.set(Bonus1ViewComponent, new ComponentPool<Bonus1ViewComponent>().init(Bonus1ViewComponent, 2));\r\n        this.pools.set(BackViewComponent, new ComponentPool<BackViewComponent>().init(BackViewComponent, 1));\r\n        this.pools.set(ScoreUIComponent, new ComponentPool<ScoreUIComponent>().init(ScoreUIComponent, 1));\r\n    }\r\n    public obtain<T extends BaseComponent>(c: { new(): T}): T {\r\n        return this.getPool<T>(c).obtain();\r\n    }\r\n    public release<T extends BaseComponent>(item: T): void {\r\n        this.getPool<T>(<typeof BaseComponent>item.constructor as { new(): T}).release(item);\r\n    }\r\n    public getLength<T extends BaseComponent>(c: { new(): T}) {\r\n        return this.getPool<T>(c).length;\r\n    }\r\n    private getPool<T extends BaseComponent>(c: { new(): T}): IPool<T> {\r\n        const p = this.pools.get(c);\r\n        if (!p) {\r\n            throw new Error(`No pool for ${c}`);\r\n        }\r\n        return p;\r\n    }\r\n}","import { AbstractPool } from \".\";\r\nimport { Entity } from \"../../core/entity\";\r\n\r\nexport class EntityPool extends AbstractPool<Entity> {\r\n    protected createNewInstance(...params: any[]): Entity {\r\n        return new Entity();\r\n    }\r\n    \r\n}","import { Container } from \"@pixi/display\";\r\nimport { gameRunners } from \"..\";\r\nimport { EntityPool } from \"../wetcats/pooling/entity-pool\";\r\nimport { IComponent } from \"./base-component\";\r\n\r\ntype constr<T> = { new(...args: unknown[]): T } \r\nexport class Entity {\r\n    private static pool: EntityPool = new EntityPool().init(Entity, 30);\r\n    private static active: Entity[] = [];\r\n    public mainView: Container;\r\n    private components: IComponent[];\r\n    constructor() {\r\n        this.components = [];\r\n        this.mainView = new Container();\r\n    }\r\n    public addComponent(component: IComponent) {\r\n        component.setEntity(this);\r\n        this.components.push(component);\r\n        gameRunners.componentAdded.emit(component);\r\n    }\r\n    public removeComponent(component: IComponent) {\r\n        if (!component) return;\r\n        const i = this.components.indexOf(component);\r\n        if (i >= 0) {\r\n            this.components.splice(i, 1);\r\n        }\r\n        gameRunners.componentRemoved.emit(component);\r\n        component.destroy();\r\n        if (this.components.length === 0) {\r\n            gameRunners.entityRemoved.emit(this);\r\n            this.mainView.removeChildren();\r\n            this.mainView.rotation = 0;\r\n            this.mainView.position.set(0,0);\r\n            Entity.remove(this);\r\n        }\r\n    }\r\n    public getComponent<C extends IComponent>(constr: constr<C>): C {\r\n        for (const component of this.components) {\r\n            if (component instanceof constr) {\r\n                return component as C;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public getAllComponents<C extends IComponent>(constr: constr<C>): C[] {\r\n        const ret = [];\r\n        for (const component of this.components) {\r\n            if (component instanceof constr) {\r\n                ret.push(component as C);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    public clear() {\r\n        for (let i = this.components.length - 1; i >= 0; i--) {\r\n            this.removeComponent(this.components[i]);\r\n        }\r\n        this.components = [];\r\n    }\r\n\r\n    public static create() {\r\n        const e = this.pool.obtain();\r\n        this.active.push(e);\r\n        gameRunners.entityAdded.emit(e);\r\n        return e;\r\n    }\r\n    public static remove(e: Entity) {\r\n        this.active.splice(this.active.indexOf(e), 1);\r\n        Entity.pool.release(e);\r\n    }\r\n    public static clearAll() {\r\n        for (let i = this.active.length - 1; i >= 0; i--) {\r\n            const e = this.active[i];\r\n            e.clear();\r\n        }\r\n    }\r\n}\r\n","import { IPointData } from \"@pixi/math\";\r\nimport { HEIGHT, WIDTH } from \"../..\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { System } from \"../../core/system\";\r\nimport { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport { BubbleComponent } from \"../components/bubble-component\";\r\nimport { BubbleViewComponent } from \"../components/views/bubble-view-component\";\r\nimport { pools } from \"../wetcats\";\r\nimport { OverlapTypes } from \"./overlap-system\";\r\n\r\nexport class BubbleSystem extends System<BubbleComponent> {\r\n    private startPos: IPointData;\r\n    public init() {\r\n       this.startPos = {x: WIDTH*0.5, y: HEIGHT - 60};\r\n    }\r\n    protected isCorrectType(component: BubbleComponent): boolean {\r\n        return component instanceof BubbleComponent;\r\n    }\r\n    protected createFakeBubble(b: {pos: IPointData, scale: number, tint: number}) {\r\n        const e = Entity.create();\r\n        e.mainView.position.copyFrom(b.pos);\r\n        const view = pools.obtain(BubbleViewComponent);\r\n        e.addComponent(view.init(b.scale));\r\n        view.tint = b.tint;\r\n        view.boom();\r\n        setTickerTimeout(()=> {\r\n            e.clear();\r\n        }, 300);\r\n    }\r\n    protected createBubble(pos: IPointData, rotation: number) {\r\n        const e = Entity.create();\r\n        e.mainView.position.copyFrom(pos);\r\n        const bubble = pools.obtain(BubbleComponent);\r\n        const view = pools.obtain(BubbleViewComponent);\r\n        e.addComponent(view.init(0.5));\r\n        //const angle = Math.atan2(pos.x-this.startPos.x, pos.y-this.startPos.y)\r\n        e.addComponent(bubble.init(rotation));\r\n        e.addComponent(pools.obtain(BoundComponent).init(OverlapTypes.BUBBLES, view, bubble));\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity().mainView;\r\n            const xx = viewComp.position.x + Math.sin(comp.moveAngle) * 15 * delta;\r\n            const yy = viewComp.position.y + Math.cos(comp.moveAngle) * 15 * delta;\r\n            viewComp.position.set(xx, yy);\r\n            if (xx < 15 || xx > WIDTH - 15) {\r\n                comp.changeDirection();\r\n            } else if (yy < 0 || xx > HEIGHT) {\r\n                comp.getEntity()?.clear();\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { Container } from \"@pixi/display\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\nimport { InteractionEvent } from \"@pixi/interaction\";\r\nimport { DEG_TO_RAD, IPointData, Ticker } from \"pixi.js\";\r\nimport { gameRunners, HEIGHT, WIDTH } from \"../..\";\r\nimport { System } from \"../../core/system\";\r\nimport { clearTickerTimeout, setTickerTimeout } from \"../../utils/intervals\";\r\nimport { PlayerComponent } from \"../components/player-component\";\r\n\r\nexport class PlayerSystem extends System<PlayerComponent> {\r\n    private static startPoints = [\r\n        [\r\n            {x: 0, y: 0, r: 0}\r\n        ],\r\n        [\r\n            {x: -20, y: -20, r: -30*DEG_TO_RAD},\r\n            {x: 0, y: 0, r: 0},\r\n            {x: 20, y: -20, r: 30*DEG_TO_RAD}\r\n        ]\r\n    ];\r\n    private gameContainer: Container;\r\n    private progress: number = -1;\r\n    private bubbleDelay: number;\r\n    private mouseData: any;\r\n    private player: PlayerComponent;\r\n    private currentRotation;\r\n    private ready: boolean;\r\n    private bonusTimer: any;\r\n    private startingPointsID: number;\r\n    constructor(gameContainer: Container) {\r\n        super();\r\n        this.startingPointsID = 0;\r\n        this.ready = false;\r\n        this.gameContainer = gameContainer;\r\n        gameContainer.interactive = true;\r\n        const g = new Graphics();\r\n        g.beginFill(0x111111, 1);\r\n        g.drawRect(0,0,WIDTH,HEIGHT);\r\n        g.endFill();\r\n        gameContainer.addChild(g);\r\n        gameContainer.on(\"pointerdown\", this.onStagePressed, this);\r\n        gameContainer.on(\"pointerup\", this.onStageReleased, this);\r\n    }\r\n    public init() {\r\n        this.progress = -1;\r\n        this.bubbleDelay = 500;\r\n    }\r\n    public levelStart() {\r\n        this.ready = true;\r\n    }\r\n    /*public waveStart() {\r\n        this.ready = true;\r\n    }*/\r\n    override onAdded(c: PlayerComponent) {\r\n        this.player = c;\r\n        super.onAdded(c);\r\n    }\r\n    public levelCompleted() {\r\n        //this.ready = false;\r\n        //this.progress = -1;\r\n    }\r\n    public applyBonus(id: number) {\r\n        switch(id) {\r\n            case 0:\r\n                this.startingPointsID = 0;\r\n                clearTickerTimeout(this.bonusTimer);\r\n                this.bubbleDelay = 100;\r\n                this.bonusTimer = setTickerTimeout(()=> {\r\n                    this.bubbleDelay = 500;\r\n                }, 5000);\r\n                break;\r\n            case 1:\r\n                this.startingPointsID = 1;\r\n                clearTickerTimeout(this.bonusTimer);\r\n                this.bubbleDelay = 300;\r\n                this.bonusTimer = setTickerTimeout(()=> {\r\n                    this.startingPointsID = 0;\r\n                    this.bubbleDelay = 500;\r\n                }, 5000);\r\n                break;\r\n        }\r\n    }\r\n    protected update() {\r\n        if (!this.ready) return;\r\n        if (this.progress !== -1) {\r\n            if (this.mouseData) {\r\n                const newPosition = this.mouseData.getLocalPosition(this.gameContainer);\r\n                this.updatePlayerRotation(newPosition);\r\n            }\r\n            \r\n            this.progress += Ticker.shared.elapsedMS;\r\n            if (this.progress >= this.bubbleDelay) {\r\n                this.progress = (this.mouseData) ? 0 : -1;\r\n                this.mouseData && this.shoot();\r\n            }\r\n        }\r\n    }\r\n    protected isCorrectType(component: PlayerComponent): boolean {\r\n        return component instanceof PlayerComponent;\r\n    }\r\n    private updatePlayerRotation(pos: IPointData) {\r\n        const {mainView} = this.player.getEntity();\r\n        const {x, y} = mainView.position;\r\n        const r = Math.atan2(pos.x-x, pos.y-y);\r\n        if (!(r >= -2.1 && r <= 2.1)) {\r\n            this.currentRotation = r;\r\n            mainView.rotation = -this.currentRotation;\r\n        }\r\n        const d = 0.15;\r\n        let newX = mainView.position.x;\r\n        newX += (pos.x - newX) * d;\r\n        mainView.position.x = newX;\r\n    }\r\n    private shoot() {\r\n        const {mainView} = this.player.getEntity();\r\n        const startPoints = PlayerSystem.startPoints[this.startingPointsID];\r\n        for (let p of startPoints) {\r\n            const pos = mainView.position.clone();\r\n            const rot = this.currentRotation + p.r;\r\n            pos.x += (120 + p.x) * Math.sin(rot);\r\n            pos.y += (120 + p.y) * Math.cos(rot);\r\n            gameRunners.createBubble.emit(pos, rot);\r\n        }\r\n    }\r\n    private onStageReleased(event: InteractionEvent) {\r\n        if (!this.ready) return;\r\n        this.mouseData = null;\r\n        //this.progress = -1;\r\n    }\r\n    private onStagePressed(event: InteractionEvent) {\r\n        if (!this.ready) return;\r\n        this.mouseData = event.data;\r\n        if (this.progress === -1) {\r\n            this.progress = 100000;\r\n        }\r\n    }\r\n    public destroy() {\r\n        clearTickerTimeout(this.bonusTimer);\r\n        this.bonusTimer = undefined;\r\n        super.destroy();\r\n    }\r\n}","import { ILevelData } from \"./interfaces/game-interfaces\";\r\n/*\r\nThese are spawn points\r\n 11  4 12  5 13  6 14\r\n3                    7\r\n2                    8\r\n1                    9\r\n0                    10\r\n X  X  15 16 17  X  X\r\n\r\nBonuses (all apply for 10 seconds):\r\n0 - shoot freq\r\n1 - shoot in 3 directions on a same time\r\n2 - double score\r\n*/\r\nexport class Levels {\r\n    private static currentLevel: number = 0;\r\n    private static levels: ILevelData[] = [\r\n        {\r\n            id: 0,\r\n            waves: [\r\n                {\r\n                    delay: 0,\r\n                    cats: [\r\n                            {spots: [5], delay: 0.5, types: 0},\r\n                            {spots: [4], delay: 2, types: 0},\r\n                            {spots: [6], delay: 4, types: 0},\r\n                            {spots: [4], delay: 7, types: 0},\r\n                            {spots: [6], delay: 8, types: 0},\r\n                            {spots: [4,6], delay: 12, types: 0},\r\n                            {spots: [5], delay: 13, types: 0, bonuses: [0]},\r\n                            {spots: [2,8], delay: 15, types: 0},\r\n                            {spots: [1,9], delay: 15.5, types: 0},\r\n                            {spots: [2,8], delay: 16, types: 0},\r\n                            {spots: [1,9], delay: 17, types: 0},\r\n                            {spots: [5], delay: 19, types: 0},\r\n                            {spots: [10], delay: 22, types: 0, bonuses: [0]},\r\n                            {spots: [0], delay: 24, types: 0},\r\n                            {spots: [4,5,6], delay: 27, types: 0},\r\n                    ],\r\n                    enemies: [\r\n                        {spots: [2], delay: 22, types: 1},\r\n                        {spots: [9], delay: 23, types: 1},\r\n                        {spots: [3,10], delay: 27, types: 1},\r\n                    ]\r\n                },\r\n                {\r\n                    delay: 30,\r\n                    cats:  [\r\n                            {spots: [4, 5, 6], delay: 0, types: 0},\r\n                            {spots: [4, 5, 6], delay: 1.3, types: 0},\r\n                            {spots: [4, 5, 6], delay: 2.6, types: 0},\r\n                            {spots: [2, 8, 5], delay: 6, types: 0},\r\n                            {spots: [1], delay: 13, types: 0},\r\n                            {spots: [9], delay: 16, types: 0},\r\n                    ],\r\n                    enemies: [\r\n                            {spots: [9], delay: 3, types: 1},\r\n                            {spots: [3], delay: 8, types: 1, bonuses: [0]},\r\n                            {spots: [11], delay: 11, types: 0},\r\n                            {spots: [12], delay: 14, types: 0},\r\n                            {spots: [13], delay: 17, types: 0},\r\n                    ],\r\n                },\r\n                {\r\n                    delay: 50,\r\n                    cats:  [\r\n                            {spots: [1,5,0], delay: 0.5, types: 0, bonuses: [,1,]},\r\n                            {spots: [4,5,6], delay: 2.5, types: 0}\r\n                    ],\r\n                    enemies: [\r\n                            {spots: [3,7], delay: 0, types: 1},\r\n                            {spots: [2,8], delay: 0.5, types: 1},\r\n                            {spots: [10,0], delay: 5, types: 1, bonuses: [0,]},\r\n                            {spots: [9,1], delay: 5.5, types: 1},\r\n                            {spots: [7,3], delay: 6.5, types: 1, bonuses: [,0]},\r\n                            {spots: [13], delay: 7, types: 0},\r\n                    ],\r\n                }\r\n            ]\r\n\r\n        },\r\n        {\r\n            id: 0,\r\n            waves:[\r\n                {\r\n                    delay: 0,\r\n                    randoms: {\r\n                        catsAmount: 20,\r\n                        cats:  [\r\n                            {\r\n                                weight: 0.4,\r\n                                spots: [0,1,2,3,7,8,9,10], \r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 0.5, max: 3}, \r\n                                type: 0,\r\n                                bonuses: {0: 0.05, 1: 0.02},\r\n                            },\r\n                            {\r\n                                weight: 0.6,\r\n                                spots: [4,5,6], \r\n                                amount: {min: 2, max: 3},\r\n                                freq: {min: 1, max: 2}, \r\n                                type: 0\r\n                            }\r\n                        ],\r\n                        enemies: [\r\n                            {\r\n                                weight: 0.95,\r\n                                spots: [0,1,2,3,4,5,6,7,8,9,10],\r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 2, max: 7}, \r\n                                type: 1,\r\n                                bonuses: {0: 0.1, 1: 0.2},\r\n                            },\r\n                            {\r\n                                weight: 0.05,\r\n                                spots: [0,1,9,10],\r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 2, max: 7}, \r\n                                type: 3,\r\n                                bonuses: {0: 1},\r\n                            }\r\n                        ],\r\n                    },\r\n                    cats:  [],\r\n                    enemies: [],\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 1,\r\n            waves:[\r\n                {\r\n                    delay: 0,\r\n                    randoms: {\r\n                        catsAmount: 5000,\r\n                        cats:  [\r\n                            {\r\n                                weight: 0.3,\r\n                                spots: [0,1,2,3,7,8,9,10], \r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 0.5, max: 3}, \r\n                                type: 0,\r\n                                bonuses: {0: 0.05, 1: 0.02},\r\n                            },\r\n                            {\r\n                                weight: 0.5,\r\n                                spots: [4,5,6], \r\n                                amount: {min: 2, max: 3},\r\n                                freq: {min: 1, max: 2}, \r\n                                type: 0\r\n                            },\r\n                            {\r\n                                weight: 0.2,\r\n                                spots: [0,1,2,3,7,8,9,10], \r\n                                amount: {min: 1, max: 1},\r\n                                freq: {min: 2, max: 6}, \r\n                                type: 1,\r\n                                bonuses: {0: 0.1},\r\n                            },\r\n                        ],\r\n                        enemies: [\r\n                            {\r\n                                weight: 0.3,\r\n                                spots: [11,12,13,14],\r\n                                amount: {min: 1, max: 1},\r\n                                freq: {min: 3, max: 8}, \r\n                                type: 0\r\n                            },\r\n                            {\r\n                                weight: 0.55,\r\n                                spots: [0,1,2,3,4,5,6,7,8,9,10],\r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 2, max: 5}, \r\n                                type: 1,\r\n                                bonuses: {0: 0.1, 1: 0.2},\r\n                            },\r\n                            {\r\n                                weight: 0.1,\r\n                                spots: [0,1,9,10,15,17],\r\n                                amount: {min: 1, max: 1},\r\n                                freq: {min: 5, max: 13}, \r\n                                type: 2\r\n                            },\r\n                            {\r\n                                weight: 0.05,\r\n                                spots: [0,1,9,10],\r\n                                amount: {min: 1, max: 2},\r\n                                freq: {min: 2, max: 7}, \r\n                                type: 3,\r\n                                bonuses: {0: 1},\r\n                            }\r\n                        ],\r\n                    },\r\n                    cats:  [],\r\n                    enemies: [],\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n\r\n    public static reset() {\r\n        this.currentLevel = 0;\r\n    }\r\n    public static nextLevel() {\r\n        this.currentLevel++\r\n        return this.currentLevel;\r\n    }\r\n    public static getLevel(id: number = Levels.currentLevel): ILevelData {\r\n        if (id < 0 || id >= this.levels.length) return undefined;\r\n        this.currentLevel = id;\r\n        return this.levels[id];\r\n    }\r\n}","import { IPointData } from \"pixi.js\";\r\nimport { HEIGHT, WIDTH } from \"../..\";\r\nimport { ViewComponent } from \"../../core/view-component\";\r\nimport { clearTickerTimeout, setTimeoutsArray } from \"../../utils/intervals\";\r\nimport { IImpulseData, IMovingData, ISpawner, RandomSpotsData, SpotDelayType } from \"../interfaces/game-interfaces\";\r\n\r\nexport type SpawnObjectData = {type: number, pos: IPointData, moveData: IMovingData};\r\nexport abstract class AbstractSpawner implements ISpawner {\r\n    protected data: (SpotDelayType | RandomSpotsData)[];\r\n    protected spawnsDelayTicker: any;\r\n    constructor(data?: (SpotDelayType | RandomSpotsData)[]) {\r\n        this.data = data;\r\n    }\r\n    public init(...params) {\r\n        if (this.data?.length > 0 && (this.data[0] as SpotDelayType).delay >= 0) {\r\n            const data = this.data as SpotDelayType[];\r\n            this.spawnsDelayTicker = setTimeoutsArray((spawnId: number)=> {\r\n                this.spawn(spawnId);\r\n            }, data.map((d)=>d.delay));\r\n        }\r\n    }\r\n    public destroy() {\r\n        clearTickerTimeout(this.spawnsDelayTicker);\r\n        this.data = null;\r\n    }\r\n    protected getIndexRandomData(data: RandomSpotsData[]): number {\r\n        const r = Math.random();\r\n        let s = 0;\r\n        for (let i = 0; i < data.length; i++) {\r\n            s += data[i].weight;\r\n            if (r < s) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    protected getSpawnPosition(pointId: number): IPointData {\r\n        const p = {x: 0, y: 0};\r\n        const startY = 100;\r\n        const startX = 200;\r\n        const h = (HEIGHT - 200 - startY) / 4;\r\n        const w = (WIDTH - startX * 2) / 2;\r\n        switch(pointId) {\r\n            case 0:\r\n                p.x = 0;\r\n                p.y = startY + h * 3;\r\n                break;\r\n            case 1:\r\n                p.x = 0;\r\n                p.y = startY + h * 2;\r\n                break;\r\n            case 2:\r\n                p.x = -50;\r\n                p.y = startY + h;\r\n                break;\r\n            case 3:\r\n                p.x = 0;\r\n                p.y = startY;\r\n                break;\r\n            case 4:\r\n                p.x = startX;\r\n                p.y = -80;\r\n                break;\r\n            case 5:\r\n                p.x = startX + w;\r\n                p.y = -80;\r\n                break;\r\n            case 6:\r\n                p.x = startX + w * 2;\r\n                p.y = -80;\r\n                break;\r\n            case 7:\r\n                p.x = WIDTH;\r\n                p.y = startY;\r\n                break;\r\n            case 8:\r\n                p.x = WIDTH + 50;\r\n                p.y = startY + h;\r\n                break;\r\n            case 9:\r\n                p.x = WIDTH;\r\n                p.y = startY + h * 2;\r\n                break;\r\n            case 10:\r\n                p.x = WIDTH;\r\n                p.y = startY + h * 3;\r\n                break;\r\n            case 11:\r\n                p.x = 50;\r\n                p.y = -80;\r\n                break;\r\n            case 12:\r\n                p.x = startX + w * 0.5;\r\n                p.y = -80;\r\n                break;\r\n            case 13:\r\n                p.x = startX + w * 1.5;\r\n                p.y = -80;\r\n                break;\r\n            case 14:\r\n                p.x = startX + w * 2.5;\r\n                p.y = -80;\r\n                break;\r\n            case 15:\r\n                p.x = startX;\r\n                p.y = HEIGHT;\r\n                break;\r\n            case 16:\r\n                p.x = startX + w;\r\n                p.y = HEIGHT;\r\n                break;\r\n            case 17:\r\n                p.x = startX + w * 2;\r\n                p.y = HEIGHT;\r\n                break;\r\n        }\r\n        return p;\r\n    }\r\n    protected getStartImpulse(pointId: number): IImpulseData {\r\n        const p = {damping: 0, forceVector: {x: 0, y: 0}};\r\n        switch(pointId) {\r\n            case 0: \r\n            case 1: \r\n            case 2: \r\n            case 3:\r\n                p.damping = 0.2;\r\n                p.forceVector.x = 10;\r\n                break;\r\n            case 4: \r\n            case 5: \r\n            case 6: \r\n                //p.forceVector.y = 5;\r\n                break;\r\n            case 7: \r\n            case 8: \r\n            case 9: \r\n            case 10:\r\n                p.damping = 0.2;\r\n                p.forceVector.x = -10;\r\n                break;\r\n        }\r\n        return p;\r\n    }\r\n    protected abstract getView(type: number): ViewComponent;\r\n    protected abstract spawn(id: number): void;\r\n}","import { Entity } from \"../../core/entity\";\r\nimport { CatComponent } from \"../components/cat-component\";\r\nimport { IMovingData, SpotDelayType } from \"../interfaces/game-interfaces\";\r\nimport { SinkingComponent } from \"../components/sinking-component\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { AbstractSpawner } from \"./abstract-spawner\";\r\nimport { Cat0ViewComponent } from \"../components/views/cat0-view-component\";\r\nimport { ImpulseComponent } from \"../components/impulse-component\";\r\nimport { pools } from \"../wetcats\";\r\nimport { Cat1ViewComponent } from \"../components/views/cat1-view-component\";\r\nexport class CatsSpawner extends AbstractSpawner {\r\n    protected spawn(id: number) {\r\n        const data = this.data as SpotDelayType[];\r\n        this.makeSpawn(data[id]);\r\n    }\r\n    protected makeSpawn(spotDelayType: SpotDelayType) {\r\n        //const bonusesTypes = data.bonuses[id];\r\n        const amount = spotDelayType.spots.length;\r\n        for (var i = 0; i < amount; i++) {\r\n            const e = Entity.create();\r\n            e.mainView.position.copyFrom(this.getSpawnPosition(spotDelayType.spots[i]));\r\n            const type = typeof(spotDelayType.types) !== \"number\" ? spotDelayType.types[i] : spotDelayType.types;\r\n            const view = this.getView(type);\r\n            const cat = pools.obtain(CatComponent);\r\n            e.addComponent(view.init());\r\n            e.addComponent(cat.init(view, spotDelayType.bonuses?.at(i)));\r\n            const movingData = this.getMovingData(spotDelayType.spots[i], type);\r\n            e.addComponent(pools.obtain(SinkingComponent).init(movingData, cat));\r\n            const bounds = pools.obtain(BoundComponent).init(OverlapTypes.CATS, view, cat);\r\n            e.addComponent(bounds);\r\n            if (movingData.startImpulse.damping !== 0) {\r\n                e.addComponent(pools.obtain(ImpulseComponent).init(movingData.startImpulse));\r\n            }\r\n        }\r\n    }\r\n    protected getView(type: number) {\r\n        switch (type) {\r\n            case 0:\r\n                return pools.obtain(Cat0ViewComponent);\r\n                break;\r\n            case 1:\r\n                return pools.obtain(Cat1ViewComponent);\r\n                break;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getMovingData(pointId: number, type: number): IMovingData {\r\n        const direction = (type === 0) ? {x: 0, y: 3} : {x: 0, y: 5};\r\n        return {\r\n                startImpulse: this.getStartImpulse(pointId),\r\n                direction,\r\n                clearCondition: (pos)=> { return pos.y < -90; },\r\n                triggerCondition: (pos)=> { return pos.y > 1100; },\r\n        }\r\n    }\r\n}","import { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { RandomSpotsData, SpotDelayType } from \"../interfaces/game-interfaces\";\r\nimport { CatsSpawner } from \"./cats-spawner\";\r\n\r\nexport class CatsRandomSpawner extends CatsSpawner {\r\n    private activeTypeIndex: number;\r\n    private amount: number;\r\n    public init(amount: number) {\r\n        this.amount = amount;\r\n        this.spawn();\r\n    }\r\n    protected spawn(): void {\r\n        const data = this.data as RandomSpotsData[];\r\n        this.activeTypeIndex = this.getIndexRandomData(data);\r\n        if (this.amount > 0) {\r\n            this.makeSpawn(this.getRandomSpotType());\r\n        }\r\n        if (this.amount > 0) {\r\n            this.createNextSpawn();\r\n        }\r\n    }\r\n    private getRandomSpotType(): SpotDelayType {\r\n        const data = this.data as RandomSpotsData[];\r\n        const activeType = data[this.activeTypeIndex];\r\n\r\n        const s: SpotDelayType = {spots: [], delay: 0, types: activeType.type};\r\n        const amount = Math.min(this.amount, Math.floor(Math.random() * (activeType.amount.max - activeType.amount.min) + activeType.amount.min));\r\n        this.amount -= amount;\r\n        const allSpots = [...activeType.spots];\r\n        const bonusId = this.calculateBonus(activeType.bonuses);\r\n        let id = -1;\r\n        if (bonusId !== -1) {\r\n            id = Math.floor(Math.random()*amount);\r\n            s.bonuses = [];\r\n        }\r\n        for (let i = 0; i < amount; i++) {\r\n            const e = allSpots.splice(Math.floor(Math.random()*allSpots.length), 1)[0];\r\n            s.spots.push(e);\r\n            if (i === id) {\r\n                s.bonuses[i] = bonusId;\r\n            }\r\n        }\r\n        return s;\r\n    }\r\n    private calculateBonus(bonuses: {[key:number]:number}): number {\r\n        if (bonuses) {\r\n            let sum = 0;\r\n            const r = Math.random();\r\n            for (let i in bonuses) {\r\n                sum += bonuses[i];\r\n                if (r <= sum) return +i;\r\n              }\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    private createNextSpawn() {\r\n        const data = this.data as RandomSpotsData[];\r\n        const {min, max} = data[this.activeTypeIndex].freq;\r\n        this.spawnsDelayTicker = setTickerTimeout(()=> {\r\n            this.spawn();\r\n        }, (Math.random()*(max - min) + min)*1000);\r\n    }\r\n}","import { IPointData } from \"@pixi/math\";\r\nimport { HEIGHT, WIDTH } from \"../..\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport { EnemyComponent } from \"../components/enemy-component\";\r\nimport { ImpulseComponent } from \"../components/impulse-component\";\r\nimport { JellyComponent } from \"../components/jelly-component\";\r\nimport { SinkingComponent } from \"../components/sinking-component\";\r\nimport { Enemy0ViewComponent } from \"../components/views/enemy0-view-component\";\r\nimport { SimpleFishViewComponent } from \"../components/views/simple-fish-view-component\";\r\nimport { JellyViewComponent } from \"../components/views/jelly-view-component\";\r\nimport { EnemyTypeData, IImpulseData, IMovingData, IOverlapTrigger, SpotDelayType } from \"../interfaces/game-interfaces\";\r\nimport { OverlapTypes } from \"../systems/overlap-system\";\r\nimport { AbstractSpawner } from \"./abstract-spawner\";\r\nimport { pools } from \"../wetcats\";\r\nimport { SimpleFriendViewComponent } from \"../components/views/simple-friend-view-component\";\r\n\r\nenum ENEMY_TYPE {\r\n    ANCHOR = 0,\r\n    FISH,\r\n    JELLY,\r\n    FRIEND\r\n}\r\nexport class EnemiesSpawner extends AbstractSpawner {\r\n    protected spawn(id: number) {\r\n        const data = this.data as SpotDelayType[];\r\n        this.makeSpawn(data[id]);\r\n    }\r\n    protected makeSpawn(spotDelayType: SpotDelayType) {\r\n        const amount = spotDelayType.spots.length;\r\n        for (var i = 0; i < amount; i++) {\r\n            const e = Entity.create();\r\n            e.mainView.position.copyFrom(this.getSpawnPosition(spotDelayType.spots[i]));\r\n            const type = (typeof(spotDelayType.types) !== \"number\" ? spotDelayType.types[i] : spotDelayType.types) as ENEMY_TYPE;\r\n            const view = this.getView(type);\r\n            const enemy = pools.obtain(EnemyComponent);\r\n            e.addComponent(enemy.init(this.getTypeData(type), spotDelayType.bonuses?.at(i)));\r\n            e.addComponent(view.init());\r\n            const movingData = this.getMovingData(type, spotDelayType.spots[i]);\r\n            view.view.scale.set((movingData.direction.x < 0) ? -1 : 1, 1);\r\n            const sinking = this.getSinkComponent(type);\r\n            if (sinking instanceof JellyComponent) {\r\n                view.view.rotation = Math.atan2(movingData.direction.y, movingData.direction.x) + Math.PI * 0.5;\r\n            }\r\n            e.addComponent(sinking.init(movingData));\r\n            e.addComponent(pools.obtain(BoundComponent).init(OverlapTypes.ENEMIES, view, enemy));\r\n            if (movingData.startImpulse.damping !== 0) {\r\n                e.addComponent(pools.obtain(ImpulseComponent).init(movingData.startImpulse));\r\n            }\r\n        }\r\n    }\r\n    private getSinkComponent(type: ENEMY_TYPE): SinkingComponent {\r\n        if (type === ENEMY_TYPE.JELLY) {\r\n            return pools.obtain(JellyComponent);\r\n        }\r\n        return pools.obtain(SinkingComponent);\r\n    }\r\n    private getTypeData(type: ENEMY_TYPE): EnemyTypeData {\r\n        const r: EnemyTypeData = {type, bubbled: false, impulsed: true, changeDirection: false, killPlayer: true};\r\n        if (type === ENEMY_TYPE.FISH || type === ENEMY_TYPE.FRIEND) {\r\n            r.bubbled = true;\r\n            r.changeDirection = true;\r\n        } else if (type === ENEMY_TYPE.ANCHOR) {\r\n            r.impulsed = false;\r\n        } else if (type === ENEMY_TYPE.JELLY) r.killPlayer = false;\r\n        return r;\r\n    }\r\n    protected getStartImpulse(pointId: number): IImpulseData {\r\n        const p = {damping: 0, forceVector: {x: 0, y: 0}};\r\n        switch(pointId) {\r\n            case 0: \r\n            case 1: \r\n            case 2: \r\n            case 3:\r\n                p.damping = 0.2;\r\n                p.forceVector.x = 5;\r\n                break;\r\n            case 4: \r\n            case 5: \r\n            case 6: \r\n                //p.forceVector.y = 5;\r\n                break;\r\n            case 7: \r\n            case 8: \r\n            case 9: \r\n            case 10:\r\n                p.damping = 0.2;\r\n                p.forceVector.x = -5;\r\n                break;\r\n        }\r\n        return p;\r\n    }\r\n    private getMovingData(type: ENEMY_TYPE, pointId: number): IMovingData {\r\n        const startImpulse = this.getStartImpulse(pointId);\r\n        const direction = this.getDirection(type, pointId);\r\n        const clearCondition = this.getClearCondition(type, direction);\r\n        return {\r\n                startImpulse,\r\n                direction,\r\n                clearCondition,\r\n        }\r\n    }\r\n    private getClearCondition(type: ENEMY_TYPE, direction: IPointData): (pos: IPointData)=>boolean {\r\n        switch(type) {\r\n            case ENEMY_TYPE.ANCHOR:\r\n                return (pos)=>{ return (direction.y > 0) ? pos.y > HEIGHT : pos.y < 0 }\r\n                break;\r\n            case ENEMY_TYPE.FISH:\r\n            case ENEMY_TYPE.FRIEND:\r\n                return (pos)=>{ return (direction.x < 0) ? pos.x < 0 : pos.x > WIDTH }\r\n                break;\r\n            case ENEMY_TYPE.JELLY:\r\n                return (pos)=>{ return ((direction.x < 0) ? pos.x < -100 : pos.x > WIDTH + 100) || pos.y < -100 }\r\n                break;\r\n        }\r\n    }\r\n    private getDirection(type: ENEMY_TYPE, pointId: number): IPointData {\r\n        const p = {x: 0, y: 0};\r\n        switch(type) {\r\n            case ENEMY_TYPE.ANCHOR:\r\n                p.y = 10;\r\n                break;\r\n            case ENEMY_TYPE.FISH:\r\n            case ENEMY_TYPE.FRIEND:\r\n                const scaleX = (pointId > 6) ? -1 : 1;\r\n                p.x = 4 * scaleX;\r\n                break;\r\n            case ENEMY_TYPE.JELLY:\r\n                p.x = 0;\r\n                p.y = -3;\r\n                switch(pointId) {\r\n                    case 0:\r\n                        p.x = 2;\r\n                        p.y = -2;\r\n                        break;\r\n                    case 1:\r\n                        p.x = 2;\r\n                        p.y = -1;\r\n                        break;\r\n                    case 9:\r\n                        p.x = -2;\r\n                        p.y = -2;\r\n                        break;\r\n                    case 10:\r\n                        p.x = -2;\r\n                        p.y = -1;\r\n                        break;\r\n                }\r\n                \r\n                break;\r\n        }\r\n        return p;\r\n    }\r\n    \r\n    protected getView(type: ENEMY_TYPE) {\r\n        switch (type) {\r\n            case ENEMY_TYPE.ANCHOR:\r\n                return pools.obtain(Enemy0ViewComponent);\r\n                break;\r\n            case ENEMY_TYPE.FISH:\r\n                return pools.obtain(SimpleFishViewComponent);\r\n                break;\r\n            case ENEMY_TYPE.JELLY:\r\n                return pools.obtain(JellyViewComponent);\r\n                break;\r\n            case ENEMY_TYPE.FRIEND:\r\n                return pools.obtain(SimpleFriendViewComponent);\r\n                break;\r\n        }\r\n        return undefined;\r\n    }\r\n}","import { ViewComponent } from \"../../core/view-component\";\r\nimport { setTickerTimeout } from \"../../utils/intervals\";\r\nimport { RandomSpotsData, SpotDelayType } from \"../interfaces/game-interfaces\";\r\nimport { AbstractSpawner } from \"./abstract-spawner\";\r\nimport { EnemiesSpawner } from \"./enemies-spawner\";\r\n\r\nexport class EnemiesRandomSpawner extends EnemiesSpawner {\r\n    private activeTypeIndex: number;\r\n    override init() {\r\n        this.spawn();\r\n    }\r\n    protected spawn(): void {\r\n        const data = this.data as RandomSpotsData[];\r\n        this.activeTypeIndex = this.getIndexRandomData(data);\r\n        this.makeSpawn(this.getRandomSpotType());\r\n        this.createNextSpawn();\r\n    }\r\n    private getRandomSpotType() {\r\n        const data = this.data as RandomSpotsData[];\r\n        const activeType = data[this.activeTypeIndex];\r\n        \r\n        const s: SpotDelayType = {spots: [], delay: 0, types: activeType.type};\r\n        const amount = Math.floor(Math.random() * (activeType.amount.max - activeType.amount.min) + activeType.amount.min);\r\n        const allSpots = [...activeType.spots];\r\n        const bonusId = this.calculateBonus(activeType.bonuses);\r\n        let id = -1;\r\n        if (bonusId !== -1 && bonusId !== undefined) {\r\n            id = Math.floor(Math.random()*amount);\r\n            s.bonuses = [];\r\n        }\r\n        for (let i = 0; i < amount; i++) {\r\n            const e = allSpots.splice(Math.floor(Math.random()*allSpots.length), 1)[0];\r\n            s.spots.push(e);\r\n            if (i === id) {\r\n                console.log(\"this enemy has bonus!\", bonusId);\r\n                s.bonuses[i] = bonusId;\r\n            }\r\n        }\r\n        return s;\r\n    }\r\n    private calculateBonus(bonuses: {[key:number]:number}): number {\r\n        if (bonuses) {\r\n            let sum = 0;\r\n            const r = Math.random();\r\n            for (let i in bonuses) {\r\n                sum += bonuses[i];\r\n                if (r <= sum) return +i;\r\n              }\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    private createNextSpawn() {\r\n        const data = this.data as RandomSpotsData[];\r\n        const {min, max} = data[this.activeTypeIndex].freq;\r\n        this.spawnsDelayTicker = setTickerTimeout(()=> {\r\n            this.spawn();\r\n        }, (Math.random()*(max - min) + min)*1000);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { pools } from \"../wetcats\";\r\nimport { ScoreUIComponent } from \"./score-ui-component\";\r\n\r\nexport class LevelUI {\r\n    private container: Container;\r\n    constructor(container: Container) {\r\n        this.container = container;\r\n        this.init();\r\n    }\r\n    public destroy() {\r\n        this.container = null;\r\n    }\r\n    private init() {\r\n        const e = Entity.create();\r\n        this.container.addChild(e.mainView);\r\n        const score = pools.obtain(ScoreUIComponent);\r\n        e.addComponent(score.init());\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { gameRunners, topScore } from \"../..\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { System } from \"../../core/system\";\r\nimport { clearTickerTimeout, setTimeoutsArray } from \"../../utils/intervals\";\r\nimport { BackViewComponent } from \"../components/views/back-view-component\";\r\nimport { ILevelData, ISpawner, WaveData } from \"../interfaces/game-interfaces\";\r\nimport { Levels } from \"../levels\";\r\nimport { AbstractSpawner } from \"../spawners/abstract-spawner\";\r\nimport { CatsRandomSpawner } from \"../spawners/cats-random-spawner\";\r\nimport { CatsSpawner } from \"../spawners/cats-spawner\";\r\nimport { EnemiesRandomSpawner } from \"../spawners/enemies-random-spawner\";\r\nimport { EnemiesSpawner } from \"../spawners/enemies-spawner\";\r\nimport { LevelUI } from \"../ui/level-ui\";\r\nimport { pools } from \"../wetcats\";\r\n\r\nexport class LevelSystem extends System<null> {\r\n    private data: ILevelData;\r\n    private totalSaved: number;\r\n    private saved: number;\r\n    private spawners: ISpawner[];\r\n    private level?: number;\r\n    private uiContainer: Container;\r\n    private ui: LevelUI;\r\n    private waveDelayTicker: any;\r\n    private catsAmount: number;\r\n    constructor(uiContainer: Container, level?: number) {\r\n        super();\r\n        this.uiContainer=uiContainer;\r\n        this.level = level;\r\n    }\r\n    public init() {\r\n        this.data = Levels.getLevel(this.level);\r\n        if (!this.data) {\r\n            Levels.reset();\r\n            gameRunners.gameOver.emit();\r\n        } else {\r\n            this.saved = 0;\r\n            this.totalSaved = 0;\r\n            this.spawners = [];\r\n            this.createBack();\r\n            this.createLevelUI();\r\n            gameRunners.levelStart.emit();\r\n        }\r\n        \r\n    }\r\n    public levelStart() {\r\n        this.catsAmount = 0;\r\n        this.data.waves.forEach((d: WaveData)=> {\r\n            this.catsAmount += d.cats.flat(1).map(c=>c.spots).flat(1).length;\r\n            this.catsAmount += (d.randoms) ? d.randoms.catsAmount : 0;\r\n        });\r\n        console.log(\"need to save\", this.catsAmount);\r\n        gameRunners.waveStart.emit();\r\n    }\r\n    public waveStart() {\r\n        this.waveDelayTicker = setTimeoutsArray((waveId: number)=> {\r\n            const waveData = this.data.waves[waveId];\r\n            this.createCatSpawner(waveData);\r\n            this.createEnemySpawner(waveData);\r\n        }, this.data.waves.map((d)=>d.delay));\r\n    }\r\n    public createBack() {\r\n        const e = Entity.create();\r\n        const view = pools.obtain(BackViewComponent);\r\n        e.addComponent(view.init());\r\n    }\r\n    public levelCompleted() {\r\n        this.level = Levels.nextLevel();\r\n        for (const s of this.spawners) {\r\n            s.destroy();\r\n            gameRunners.update.remove(s);\r\n            gameRunners.levelCompleted.remove(s);\r\n        }\r\n        this.spawners = [];\r\n        window.setTimeout(()=>{\r\n            this.startLevel();\r\n        }, 1000);\r\n        //this.clear();\r\n    }\r\n    public gameOver() {\r\n        this.saveHighScore();\r\n        this.clear();\r\n    }\r\n    private saveHighScore() {\r\n        console.log(this.totalSaved > topScore.score)\r\n        if (this.totalSaved > topScore.score) {\r\n            topScore.score = this.totalSaved;\r\n        }\r\n    }\r\n    private startLevel() {\r\n        this.saved = 0;\r\n        this.data = Levels.getLevel(this.level);\r\n        if (!this.data) {\r\n            Levels.reset();\r\n            this.saveHighScore();\r\n            gameRunners.gameOver.emit();\r\n        } else {\r\n            gameRunners.levelStart.emit();\r\n        }\r\n    }\r\n    private clear() {\r\n        for (const s of this.spawners) {\r\n            s.destroy();\r\n        }\r\n        clearTickerTimeout(this.waveDelayTicker);\r\n        this.waveDelayTicker = null;\r\n        this.ui.destroy();\r\n        this.ui = null;\r\n        this.spawners = null;\r\n        this.data = null;\r\n        Levels.reset();\r\n    }\r\n    private createLevelUI() {\r\n        this.ui = new LevelUI(this.uiContainer);\r\n    }\r\n    private createCatSpawner(waveData: WaveData) {\r\n        let s: AbstractSpawner;\r\n        if (waveData.randoms) {\r\n            s = new CatsRandomSpawner(waveData.randoms.cats);\r\n            (s as CatsRandomSpawner).init(waveData.randoms.catsAmount);\r\n        } else {\r\n            s = new CatsSpawner(waveData.cats);\r\n            s.init();\r\n        }\r\n        gameRunners.update.add(s);\r\n        gameRunners.levelCompleted.add(s);\r\n        \r\n        this.spawners.push(s);\r\n    }\r\n    private createEnemySpawner(waveData: WaveData) {\r\n        let s: AbstractSpawner;\r\n        if (waveData.randoms) {\r\n            s = new EnemiesRandomSpawner(waveData.randoms.enemies);\r\n        } else {\r\n            s = new EnemiesSpawner(waveData.enemies);\r\n        }\r\n        gameRunners.update.add(s);\r\n        gameRunners.levelCompleted.add(s);\r\n        s.init();\r\n        this.spawners.push(s);\r\n    }\r\n    protected catSaved() {\r\n        this.saved++;\r\n        this.totalSaved++;\r\n        if (this.saved === this.catsAmount) {\r\n            console.log(\"level completed\");\r\n            gameRunners.levelCompleted.emit();\r\n        }\r\n    }\r\n    protected isCorrectType(component: null): boolean {\r\n        return false;\r\n    }\r\n    \r\n}","import { WIDTH } from \"../..\";\r\nimport { System } from \"../../core/system\";\r\nimport { CatComponent } from \"../components/cat-component\";\r\nimport { ImpulseComponent } from \"../components/impulse-component\";\r\nimport { pools } from \"../wetcats\";\r\n\r\nexport class CatsSystem extends System<CatComponent> {\r\n    public init() {\r\n        //\r\n    }\r\n    protected isCorrectType(component: CatComponent): boolean {\r\n        return component instanceof CatComponent;\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity()?.mainView;\r\n            if (viewComp) {\r\n                if (viewComp.position.x < 0) {\r\n                    viewComp.position.x = 0;\r\n                    comp.getEntity().addComponent(pools.obtain(ImpulseComponent).init({damping: 0.5, forceVector: {x: 5, y: 0}}));\r\n                } else if (viewComp.position.x > WIDTH) {\r\n                    viewComp.position.x = WIDTH;\r\n                    comp.getEntity().addComponent(pools.obtain(ImpulseComponent).init({damping: 0.5, forceVector: {x: -5, y: 0}}));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { gameRunners } from \"../..\";\r\nimport { System } from \"../../core/system\";\r\nimport { EnemyComponent } from \"../components/enemy-component\";\r\n\r\nexport class EnemiesSystem extends System<EnemyComponent> {\r\n    public init() {\r\n        //\r\n    }\r\n    protected isCorrectType(component: EnemyComponent): boolean {\r\n        return component instanceof EnemyComponent;\r\n    }\r\n    /*protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity()?.mainView;\r\n            if (viewComp) {\r\n                viewComp.position.x += comp.data.direction.x * comp.data.speed * delta;\r\n                viewComp.position.y += comp.data.direction.y * comp.data.speed * delta;\r\n                if (viewComp.position.y < -110) {\r\n                    const cat = comp.getEntity()?.getComponent(CatComponent);\r\n                    if (cat) {\r\n                        gameRunners.catSaved.emit();\r\n                    }\r\n                    comp.getEntity()?.clear();\r\n                }\r\n            }\r\n            \r\n        }\r\n    }*/\r\n    \r\n}","import { System } from \"../../core/system\";\r\nimport { ImpulseComponent } from \"../components/impulse-component\";\r\n\r\nexport class ImpulseSystem extends System<ImpulseComponent> {\r\n    public init() {\r\n        //\r\n    }\r\n    protected isCorrectType(component: ImpulseComponent): boolean {\r\n        return component instanceof ImpulseComponent;\r\n    }\r\n    protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity()?.mainView;\r\n            if (viewComp) {\r\n                const {forceVector} = comp.updatedDataAndGet();\r\n                if (forceVector.x === 0 && forceVector.y === 0) {\r\n                    comp.getEntity()?.removeComponent(comp);\r\n                } else {\r\n                    viewComp.position.x += forceVector.x * delta;\r\n                    viewComp.position.y += forceVector.y * delta;\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import { System } from \"../../core/system\";\r\nimport { ScoreUIComponent } from \"../ui/score-ui-component\";\r\nexport class LevelUISystem extends System<ScoreUIComponent> {\r\n    private score: number;\r\n    public init() {\r\n        this.score = 0;\r\n    }\r\n    protected catSaved(amount: number) {\r\n        this.score += amount;\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            comp.setScore(this.score);\r\n        }\r\n    }\r\n    protected isCorrectType(component: ScoreUIComponent): boolean {\r\n        return component instanceof ScoreUIComponent;\r\n    }\r\n    \r\n}","import { HEIGHT } from \"../..\";\r\nimport { Entity } from \"../../core/entity\";\r\nimport { System } from \"../../core/system\";\r\nimport { BonusComponent } from \"../components/bonus-component\";\r\nimport { BoundComponent } from \"../components/bound-component\";\r\nimport { SinkingComponent } from \"../components/sinking-component\";\r\nimport { Bonus0ViewComponent } from \"../components/views/bonus0-view-component\";\r\nimport { Bonus1ViewComponent } from \"../components/views/bonus1-view-component\";\r\nimport { IMovingData } from \"../interfaces/game-interfaces\";\r\nimport { pools } from \"../wetcats\";\r\nimport { OverlapTypes } from \"./overlap-system\";\r\n\r\nexport class BonusSystem extends System<BonusComponent> {\r\n    public init() {\r\n       //\r\n    }\r\n    protected isCorrectType(component: BonusComponent): boolean {\r\n        return component instanceof BonusComponent;\r\n    }\r\n    protected bonusCreate(posX: number, id: number) {\r\n        const e = Entity.create();\r\n        e.mainView.position.set(posX, 0);\r\n        const bonus = pools.obtain(BonusComponent);\r\n        const view = this.getView(id);\r\n        e.addComponent(view.init());\r\n        e.addComponent(bonus.init(id));\r\n        e.addComponent(pools.obtain(BoundComponent).init(OverlapTypes.BONUSES, view, bonus));\r\n        e.addComponent(pools.obtain(SinkingComponent).init(this.getMovingData()));\r\n    }\r\n    private getView(id: number) {\r\n        switch(id) {\r\n            case 0:\r\n                return pools.obtain(Bonus0ViewComponent);\r\n                break;\r\n            case 1:\r\n                return pools.obtain(Bonus1ViewComponent);\r\n                break;\r\n        }\r\n    }\r\n    private getMovingData(): IMovingData {\r\n        return {\r\n                startImpulse: {damping: 1, forceVector: {x: 0, y: 0}},\r\n                direction: {x: 0, y: 6},\r\n                clearCondition: (pos)=> { return pos.y > HEIGHT; },\r\n        }\r\n    }\r\n    /*protected update(delta: number) {\r\n        if (!this.components) return;\r\n        for(const [comp, value] of this.components) {\r\n            if (!comp.enabled) continue;\r\n            const viewComp = comp.getEntity().mainView;\r\n            const xx = viewComp.position.x + Math.sin(comp.moveAngle) * 15 * delta;\r\n            const yy = viewComp.position.y + Math.cos(comp.moveAngle) * 15 * delta;\r\n            viewComp.position.set(xx, yy);\r\n            if (xx < 15 || xx > WIDTH - 15) {\r\n                comp.changeDirection();\r\n            } else if (yy < 0 || xx > HEIGHT) {\r\n                comp.getEntity()?.clear();\r\n            }\r\n        }\r\n    }*/\r\n    \r\n}","import { Container } from \"@pixi/display\";\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Runner } from \"@pixi/runner\";\r\nimport { Ticker } from \"@pixi/ticker\";\r\nimport { gameRunners, HEIGHT, WIDTH } from \"..\";\r\nimport { SinkingSystem } from \"./systems/sinking-system\";\r\nimport { FloatUpSystem } from \"./systems/float-up-system\";\r\nimport { ViewSystem } from \"./systems/view-system\";\r\nimport { BubbleSystem } from \"./systems/bubble-system\";\r\nimport { PlayerSystem } from \"./systems/player-system\";\r\nimport { OverlapSystem, OverlapTypes } from \"./systems/overlap-system\";\r\nimport { LevelSystem } from \"./systems/level-system\";\r\nimport { CatsSystem } from \"./systems/cats-system\";\r\nimport { EnemiesSystem } from \"./systems/enemies-system\";\r\nimport { Entity } from \"../core/entity\";\r\nimport { ImpulseSystem } from \"./systems/impulse-system\";\r\nimport { LevelUISystem } from \"./systems/level-ui-system\";\r\nimport { PlayerComponent } from \"./components/player-component\";\r\nimport { PlayerViewComponent } from \"./components/views/player-view-component\";\r\nimport { BoundComponent } from \"./components/bound-component\";\r\nimport { BonusSystem } from \"./systems/bonus-system\";\r\nimport { pools } from \"./wetcats\";\r\nimport { BaseState } from \"../states/BaseState\";\r\n\r\nexport class Game extends BaseState {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public create(): void {\r\n        gameRunners.init = new Runner(\"init\");\r\n        gameRunners.levelStart = new Runner(\"levelStart\");\r\n        gameRunners.waveStart = new Runner(\"waveStart\");\r\n        gameRunners.componentAdded = new Runner(\"componentAdded\");\r\n        gameRunners.componentRemoved = new Runner(\"componentRemoved\");\r\n        gameRunners.entityAdded = new Runner(\"entityAdded\");\r\n        gameRunners.entityRemoved = new Runner(\"entityRemoved\");\r\n        gameRunners.mouseMoving = new Runner(\"mouseMoving\");\r\n        gameRunners.createBubble = new Runner(\"createBubble\");\r\n        gameRunners.catSaved = new Runner(\"catSaved\");\r\n        gameRunners.levelCompleted = new Runner(\"levelCompleted\");\r\n        gameRunners.waveCompleted = new Runner(\"waveCompleted\");\r\n        gameRunners.update = new Runner(\"update\");\r\n        gameRunners.bonusCreate = new Runner(\"bonusCreate\");\r\n        gameRunners.applyBonus = new Runner(\"applyBonus\");\r\n        gameRunners.createFakeBubble = new Runner(\"createFakeBubble\");\r\n        gameRunners.gameOver = new Runner(\"gameOver\");\r\n\r\n        const gameContainer = new Container();\r\n        this.addChild(gameContainer);\r\n        const playerContainer = new Container();\r\n        this.addChild(playerContainer);\r\n        const uiContainer = new Container();\r\n        this.addChild(uiContainer);\r\n\r\n        this.addSystem((new PlayerSystem(gameContainer)));\r\n        this.addSystem((new ViewSystem(gameContainer)));\r\n        this.addSystem((new CatsSystem()));\r\n        this.addSystem((new EnemiesSystem()));\r\n        this.addSystem((new SinkingSystem()));\r\n        this.addSystem((new FloatUpSystem()));\r\n        this.addSystem((new BubbleSystem()));\r\n        this.addSystem((new OverlapSystem()));\r\n        this.addSystem((new ImpulseSystem()));\r\n        this.addSystem((new LevelSystem(uiContainer)));\r\n        this.addSystem((new LevelUISystem()));\r\n        this.addSystem((new BonusSystem()));\r\n\r\n        const e = Entity.create();\r\n        e.mainView.position.set(WIDTH * 0.5, HEIGHT);\r\n        e.mainView.rotation = Math.PI;\r\n        const p = pools.obtain(PlayerComponent);\r\n        const view = pools.obtain(PlayerViewComponent);\r\n        e.addComponent(p.init());\r\n        e.addComponent(view.init());\r\n        e.addComponent(pools.obtain(BoundComponent).init(OverlapTypes.PLAYER, view, p))\r\n        playerContainer.addChild(e.mainView);\r\n\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        Ticker.shared.add(this.update,this);\r\n        gameRunners.init.emit();\r\n    }\r\n    public close(): void {\r\n        this.clear();\r\n    }\r\n    public clear() {\r\n        Ticker.shared.remove(this.update,this);\r\n        \r\n        /*Entity.clearAll();\r\n        for (const key in this.thisRunners) {\r\n            gameRunners[key].removeAll();\r\n            this.thisRunners[key].removeAll();\r\n            delete this.thisRunners[key];\r\n            delete gameRunners[key];\r\n        }*/\r\n    }\r\n    private update(delta: number) {\r\n        gameRunners.update.emit(delta);\r\n    }\r\n    private addSystem(system: any) {\r\n        for (const key in gameRunners) {\r\n            const runner: Runner = gameRunners[key];\r\n            runner.add(system);\r\n        }\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\nimport { InteractionEvent } from \"@pixi/interaction\";\r\nimport { Text } from \"@pixi/text\";\r\nimport { HEIGHT, topScore, WIDTH } from \".\";\r\nimport { BaseState } from \"./states/BaseState\";\r\nimport { Game } from \"./wetcats/game\";\r\nimport { stateManager } from \"./wetcats/wetcats\";\r\n\r\nexport class SplashView extends BaseState {\r\n    public create(): void {\r\n        this.interactive = true;\r\n        const g = new Graphics();\r\n        g.beginFill(0x111111, 1);\r\n        g.drawRect(0,0,WIDTH,HEIGHT);\r\n        g.endFill();\r\n        this.addChild(g);\r\n\r\n        const score = new Text(\"Highscore: \" + topScore.score.toString(), {fill: \"#FFFFFF\", fontSize: \"30px\"});\r\n        score.position.set(WIDTH*0.5, HEIGHT*0.5 - 200);\r\n        score.anchor.set(0.5, 0.5);\r\n        this.addChild(score);\r\n\r\n        const txt = new Text(\"Wet Cats\", {fill: \"#FFFFFF\", fontSize: \"60px\"});\r\n        txt.position.set(WIDTH*0.5, HEIGHT*0.5);\r\n        txt.anchor.set(0.5, 0.5);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(\"press anywhere to start...\", {fill: \"#FFFFFF\", fontSize: \"30px\"});\r\n        txt1.position.set(WIDTH*0.5, HEIGHT*0.5 + 100);\r\n        txt1.anchor.set(0.5, 0.5);\r\n        this.addChild(txt1);\r\n    }\r\n    public start(...params: any): void {\r\n        this.on(\"pointerdown\", this.onStageClicked, this);\r\n    }\r\n    public close(): void {\r\n        this.off(\"pointerdown\");\r\n    }\r\n    private onStageClicked(event: InteractionEvent) {\r\n        stateManager.start(Game);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\nimport { Text } from \"@pixi/text\";\r\nimport { HEIGHT, WIDTH } from \".\";\r\nimport { BaseState } from \"./states/BaseState\";\r\n\r\nexport class PreloaderView extends BaseState {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public create(): void {\r\n        const g = new Graphics();\r\n        g.beginFill(0x111111, 1);\r\n        g.drawRect(0,0,WIDTH,HEIGHT);\r\n        g.endFill();\r\n        this.addChild(g);\r\n\r\n        const txt1 = new Text(\"Loading...\", {fill: \"#FFFFFF\", fontSize: \"30px\"});\r\n        txt1.position.set(WIDTH*0.5, HEIGHT*0.5);\r\n        txt1.anchor.set(0.5, 0.5);\r\n        this.addChild(txt1);\r\n        this.visible = false;\r\n    }\r\n    public start(...params: any): void {\r\n        this.visible = true;\r\n    }\r\n    public close(): void {\r\n        this.destroy({children: true});\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Loader, LoaderResource } from \"@pixi/loaders\";\r\nimport { WIDTH } from \"..\";\r\nimport { Game } from \"./game\";\r\nimport { SplashView } from \"../splash-view\";\r\nimport { PreloaderView } from \"../preloader-view\";\r\nimport { PoolManager } from \"./pooling\";\r\nimport { StateManager } from \"../states/StateManager\";\r\n\r\nexport const pools = new PoolManager();\r\nexport let stateManager: StateManager;\r\nexport let resources: {\r\n    [key: string]: LoaderResource;\r\n};\r\nexport default class WetCats {\r\n    public gameContainer: Container;\r\n    constructor() {\r\n        this.gameContainer = new Container();\r\n        this.createAndStart();\r\n    }\r\n    private async createAndStart() {\r\n        stateManager = new StateManager(this.gameContainer);\r\n        stateManager.add(new PreloaderView());\r\n        stateManager.start(PreloaderView);\r\n        await this.loadAssets();\r\n        stateManager.add(new SplashView());\r\n        stateManager.add(new Game());\r\n\r\n        stateManager.start(SplashView);\r\n    }\r\n    public resize(width: number, height: number) {\r\n        this.gameContainer.height = height;\r\n        this.gameContainer.scale.x = this.gameContainer.scale.y;\r\n        this.gameContainer.position.set(width*0.5-WIDTH*0.5*this.gameContainer.scale.x, 0);\r\n    }\r\n    private async loadAssets() {\r\n        return new Promise<void>((resolve) => {\r\n            const loader = new Loader();\r\n            const loadOptions = { crossOrigin: true };\r\n            loader.baseUrl = \"assets/\";\r\n            loader.add(\"back\", \"images/back0.jpg\", loadOptions);\r\n            loader.add(\"cat\", \"spines/cat_skeleton.json\", loadOptions);\r\n            loader.add(\"bubble\", \"spines/bubble.json\", loadOptions);\r\n            loader.add(\"enemy0\", \"spines/enemy0.json\", loadOptions);\r\n            loader.add(\"fish0\", \"spines/fish0.json\", loadOptions);\r\n            loader.add(\"jelly\", \"spines/jelly.json\", loadOptions);\r\n\r\n            loader.onProgress.add((l)=> {\r\n                \r\n            });\r\n            loader.load((l, r) => {\r\n                resources = r;\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n}","import { Application } from \"@pixi/app\";\r\nimport { Runner } from \"@pixi/runner\";\r\nimport WetCats from \"./wetcats/wetcats\";\r\n\r\nimport {SpineParser} from '@pixi-spine/loader-3.8';\r\nexport {SpineParser};\r\nexport * from '@pixi-spine/runtime-3.8';\r\nexport * from '@pixi-spine/base';\r\n\r\nSpineParser.registerLoaderPlugin();\r\n//import {PixiStatsPlugin} from \"@armathai/pixi-stats\";\r\nwindow.onload = async () => {\r\n    start();\r\n}\r\nexport const WIDTH = 720;\r\nexport const HEIGHT = 1280;\r\nexport const topScore = {score: 0};\r\nexport let gameRunners: { [key: string]: Runner } = {};\r\nconst options = {\r\n    width: WIDTH,\r\n    height: HEIGHT,\r\n    autoDensity: true,\r\n    resolution: Math.min(Math.floor(window.devicePixelRatio), 3),\r\n};\r\nfunction start() {\r\n    const app = new Application(options);\r\n    app.ticker.maxFPS = 60;\r\n    document.body.appendChild(app.view);\r\n    app.view.style.left = \"0%\";\r\n    app.view.style.top = \"0%\";\r\n    app.view.style.width = \"100%\";\r\n    app.view.style.height = \"100%\";\r\n    \r\n    const game = new WetCats();\r\n    app.stage.addChild(game.gameContainer);\r\n    const calculateCanvasSize = () => {\r\n        return {width: innerWidth, height: innerHeight};\r\n    }\r\n    const resize = ()=> {\r\n        const {width, height} = calculateCanvasSize();\r\n        app.renderer.resize(width, height);\r\n        game.resize(width, height);\r\n    }\r\n    window.addEventListener(\"resize\", resize);\r\n    resize();\r\n    \r\n}\r\n\r\nwindow.onfocus = () => {\r\n    //usually play music\r\n};\r\n\r\nwindow.onblur = () => {\r\n    //usually stop music\r\n}\r\n\r\n/*const s = new PixiStatsPlugin(app);\r\ndocument.body.appendChild( s.stats.dom );\r\napp.ticker.add(s.stats.update.bind(s.stats));*/"],"sourceRoot":""}