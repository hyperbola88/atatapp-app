{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/BonusPopup.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","material","undefined","BaseGame","options","autoDensity","resolution","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","BaseState","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","btn","normalState","downState","normalTexture","downTexture","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","rainbowType","stepsAmount","createBody","DYNAMIC","_kinematic","filters","GlowFilter","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","increase","steps","v","fromBoom","max","sameColorNeighbors","k","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","a","NextBlocksTimer","bar","seconds","isFrozen","EBonus","BoomMeter","NineSlicePlane","initialWidth","barMask","mask","current","min","wasEnd","BonusChooser","bell","AnimatedSprite","animationSpeed","align","bonus","Rainbow","Freeze","Kill","gotoAndStop","Message","blocks","clear","nextLines","lines","xx","f","addBlock","GameViewState","pad","topBack","menuBtn","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","lineStyle","moveTo","lineTo","nextTimer","boomMeter","bonusChooser","padRect","Rectangle","gameplayStart","activeBonus","None","random3BodyPos","powerups","isTransition","nextType","isActivePowerup","level","generateLineBlocks","tick","maxY","moving","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","maximum","addActiveBlock","onClick","onTapStart","Ticker","shared","update","getRandomBonus","setActiveBonus","clearActiveBlocks","freeze","getRandomType","block","boom","len","All","floor","random","missle","copyFrom","Expo","createExplosion","explodePoints","nextBlock","activeBlock","stopBonuses","bottomOpenWall","animateAndDestroy","moveBox","staticBox","mousePressed","addLineBlocks","drawMouse","wasGameOver","goal","rPos","velocity","BottomPoint","goalType","createMoveWalls","generateNewBlocks","startCountDeath","setProgress","moveBalls","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","atan2","cos","yy","sin","abs","lp","contains","switchBlockes","setLines","onGameOver","createBottomExit","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","remove","Logo","explosion","face","logo","Elastic","easeOut","Bounce","playBtn","onPlayClicked","stop","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","activeState","updateBoomMeter","big","small","middle","fireMissle","wasRainbow","hitTest","startLoading","loader","onProgress","onError","url","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","log","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.432f30ae19a912205adb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([199,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    private txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static rainbowType = 250;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        if (type === CircleBlock.rainbowType) {\r\n            this.stepsAmount = 10;\r\n        }\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom() {\r\n        this.increase(this.stepsAmount-this.steps, true);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type < 20;\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        if (this.busy || !this.body) return;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.bar = new Sprite(Texture.WHITE);\r\n        this.bar.width = 700;\r\n        this.bar.height = 50;\r\n        this.addChild(this.bar);\r\n        this.bar.anchor.set(0.5,0.5);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.bar.width = 700*p;\r\n    }\r\n    public freeze(seconds: number) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: NineSlicePlane;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 420;\r\n    private barMask: Sprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),30,25,30,25);\r\n        back.width = this.initialWidth;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 30,25,30,25);\r\n        this.bar.width = this.initialWidth;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public update(amount: number): boolean {\r\n        if (amount === 0) {\r\n            this.current = 0;\r\n        } else if (amount < 3) {\r\n            amount = 0;\r\n        } else {\r\n            this.current += amount;\r\n            this.current = Math.min(this.current, this.max);\r\n        }\r\n        const wasEnd = this.current >= this.max;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * (this.current / this.max), duration: 0.2});\r\n        if (wasEnd) {\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Text, Texture } from \"pixi.js\";\r\nexport enum EBonus {\r\n    None = 0,\r\n    Rainbow,\r\n    Kill,\r\n    Freeze,\r\n    All\r\n}\r\nexport class BonusChooser extends Container {\r\n    public bonus: EBonus;\r\n    private bell: AnimatedSprite;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n\r\n        this.txt = new Text(\"\",{fontSize: 25, fill: 0x000000, align: \"right\"});\r\n        this.txt.anchor.set(1, 0.5);\r\n        this.txt.position.set(-55, 7);\r\n        this.addChild(this.txt);\r\n    }\r\n    public async show(bonus: EBonus) {\r\n        this.bonus = bonus;\r\n        this.visible = true;\r\n        let n = \"\";\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                n = \"Rainbow\";\r\n                break;\r\n            case EBonus.Freeze:\r\n                n = \"Freezer\";\r\n                break;\r\n            case EBonus.Kill:\r\n                n = \"Killer\";\r\n                break;\r\n        }\r\n        this.bell.play();\r\n        this.txt.text = n;\r\n        this.delay(2).then(()=> {\r\n            this.txt.text = \"\";\r\n            this.bell.gotoAndStop(0);\r\n        });\r\n        await this.delay(2);\r\n        //this.hide();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 70 + 70;\r\n        this.startX = -300;\r\n        this.startY = this.back.height * 0.5 + 20;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { BonusChooser, EBonus } from \"./game/BonusPopup\";\r\nimport { Message } from \"./game/Message\";\r\n\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private level: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private random3BodyPos: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private bonusChooser: BonusChooser;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n\r\n    public create(): void {\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(top);\r\n\r\n        const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);\r\n\r\n        const menuBtn = new Sprite(Texture.from(\"pause_button.png\"));\r\n        menuBtn.anchor.set(0.5);\r\n        menuBtn.position.set(-250, topBack.height * 0.5);\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-390, 900);\r\n        this.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(-265, 900);\r\n        this.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Message();\r\n        this.addChild(this.previewBlocks);\r\n\r\n        const line = new Graphics();\r\n        line.lineStyle(4, 0x000000, 0.3);\r\n        line.moveTo(-400, 500);\r\n        line.lineTo(400, 500);\r\n        this.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.rotation = Math.PI / 2;\r\n        this.nextTimer.position.set(-400, 0);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(-170, -667);\r\n\r\n        this.bonusChooser = new BonusChooser();\r\n        this.bonusChooser.position.set(270,-648);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.activeBonus = EBonus.None;\r\n        this.random3BodyPos = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.level = 4;\r\n        this.generateLineBlocks(this.level - 3);\r\n        this.tick = 0;\r\n        this.maxY=0;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addChild(this.nextTimer);\r\n        this.boomMeter.maximum = 25;\r\n        this.addChild(this.boomMeter);\r\n        this.addActiveBlock();\r\n\r\n        this.addChild(this.bonusChooser);\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public async updateBoomMeter(amount: number) {\r\n        if (this.isTransition) return;\r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            gameSettings.paused = true;\r\n            const bonus = this.getRandomBonus();\r\n            await this.bonusChooser.show(bonus);\r\n            this.setActiveBonus(this.bonusChooser.bonus);\r\n            gameSettings.paused = false;\r\n        }\r\n    }\r\n    private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                this.clearActiveBlocks();\r\n                this.addActiveBlock();\r\n                break;\r\n            case EBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break;\r\n            case EBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const len = EBonus.All - 2;\r\n        return Math.floor(Math.random() * len) + 2;\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        amount = Math.min(amount, this.random3BodyPos.length);\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.random3BodyPos[i];\r\n            if (!pos) continue;\r\n            const missle = new Sprite(Texture.from(`rocket1.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.5, 0.5);\r\n            missle.position.copyFrom(position);\r\n            this.addChild(missle);\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: 0.5, ease: Expo.easeIn, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        gsap.to(this.previewBlocks, {y: -600, duration: 1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks(this.level - 3);\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        const rPos = [];\r\n        this.random3BodyPos = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                rPos.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n        });\r\n        let l = Math.min(3, rPos.length);\r\n        if (l > 0) {\r\n            while (l > 0) {\r\n                const i = Math.floor(Math.random()*rPos.length);\r\n                this.random3BodyPos.push(rPos[i]);\r\n                rPos.splice(i, 1);\r\n                l--;\r\n            }\r\n        }\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        if (this.isTransition && !wasEnd) {\r\n            this.nextTimer.clear();\r\n            this.boomMeter.update(0);\r\n            this.tick = 0;\r\n            this.level+=1;\r\n            if (this.level > 7) {\r\n                this.level = 7;\r\n            }\r\n            this.createMoveWalls();\r\n            this.addChild(this.nextTimer);\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks(this.level - 3);\r\n                this.addActiveBlock();\r\n            });\r\n            this.addChild(this.bonusChooser);\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=1;\r\n            const p = this.tick%((this.level-3)*700);  \r\n            this.nextTimer.setProgress(1 - p/((this.level-3)*700));\r\n            if (p === 0) {\r\n                this.moveBalls();\r\n            }\r\n        }\r\n    }\r\n    private async startPowerup(id: number) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        //this.nextBlock.scale.set(0.7);\r\n        this.pad.addChild(this.nextBlock);\r\n    }\r\n    private getRandomType() {\r\n        if (this.activeBonus === EBonus.Rainbow) return CircleBlock.rainbowType;\r\n        //const rainbowChance = Math.random() < 0.15;\r\n        //if (rainbowChance) return CircleBlock.rainbowType;\r\n        return Math.floor(Math.random() * (this.nextLines.length + 3)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n       /* if (this.nextType === CircleBlock.rainbowType) {\r\n            this.activeBonus = true;\r\n        }*/\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.padRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks(lines: number) {\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.level) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        \r\n        for (let i = 0; i < 70; i++) {\r\n            const type = Math.floor(Math.random() * this.level) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new TextedButton(\"PLAY\", 100, 0x000000, 0xFFFFFF);\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else {\r\n            (stateManager.activeState as GameViewState).updateBoomMeter(1);\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const big = unusedBodies.length >= 5;\r\n    const small = unusedBodies.length === 2;\r\n    const middle = unusedBodies.length >= 3;\r\n    const amount = (small) ? 1 : (middle ? 2 : (big ? 3 : 0));\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (!state || !state.updateBoomMeter) return; \r\n    if (amount > 0) {\r\n      const body = unusedBodies[Math.floor(Math.random()*unusedBodies.length)];\r\n      if (body) {\r\n        const block = (body as any).userData as CircleBlock;\r\n        state.fireMissle(amount, block.position);\r\n      }\r\n    }\r\n    if (unusedBodies.length > 0) {\r\n      state.updateBoomMeter((amount > 0) ? unusedBodies.length + 1 : 1);\r\n    }\r\n    let wasRainbow = false;\r\n    unusedBodies.forEach((body) => {\r\n      const block = (body as any).userData as CircleBlock;\r\n      if (block && block.type === CircleBlock.rainbowType && block.steps > 3) {\r\n        wasRainbow = true;\r\n      }\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType) {\r\n          block.boom();\r\n        }\r\n      }\r\n    });\r\n    explodePoints = [];\r\n\r\n    if (wasRainbow) {\r\n      world.bodies.forEach((body)=> {\r\n        const block = (body as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.correctType()) {\r\n          state.createExplosion(block.position);\r\n          block.boom();\r\n        }\r\n      });\r\n      state.stopBonuses();\r\n    }\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    /*if (gameSettings.allQuests) {\r\n          const d = new Date();\r\n          gameSettings.dateString = `${d.getFullYear()}${d.getMonth()+1}${d.getDate()}`;\r\n          const level = gameSettings.allQuests.all.find((a)=>a.date === gameSettings.dateString);\r\n          gameSettings.quest = level || undefined;\r\n        }*/\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}