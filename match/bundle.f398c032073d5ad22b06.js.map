{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","material","undefined","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","clean","busy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","a","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","icon","amount","onPressed","_id","id","NextBlocksTimer","NineSlicePlane","initialWidth","bar","barMask","mask","bell","AnimatedSprite","animationSpeed","gotoAndStop","isFrozen","seconds","BoomMeter","barBorder","barShine","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","Text","fontSize","fill","fontWeight","align","clear","nextLines","text","lines","xx","f","addBlock","BonusIntroLetter","fontFamily","BaseBonus","Rectangle","letters","getLetters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","floor","toString","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","random","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","LevelFinished","popup","popupBack","title","stars","star","okBut","conditions","callback","showed","round","Bounce","easeOut","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","getTexture","bonuses","temp","LevelStart","texts","usingTexts","getNewText","wheelbox","words","split","Expo","tween","EBonus","EObstacle","PausePopup","xBut","exit","GameViewState","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","preview2","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","activeBonus","None","randomBodiesPositions","nextType","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","unFreeze","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","mousePressed","nextBlock","removeChildren","children","MapState","startPosition","fireMissle","addScore","playBolts","update","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","atan2","time","addToBoomMeter","abs","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","clearActiveBlocks","stopBonuses","animateAndDestroy","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","KINEMATIC","velocity","BottomPoint","goalType","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","moveBalls","boom","log","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","startRocket","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","cos","sin","lp","switchBlockes","setLines","startAmount","createObstacle","onGameOver","createBottomExit","obstacle","Static","Random","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","parseInt","calculateStars","repeat","content","Logo","explosion","face","logo","Elastic","playBtn","onPlayClicked","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","instB","changePosition","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.f398c032073d5ad22b06.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([201,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    material: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.amount = 1;\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        this.amount = 1;\r\n        this.btn.alpha = 1;\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    private async onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            if (this.amount === 0) {\r\n                this.btn.alpha = 0.6;\r\n                this.icon.visible = true;\r\n            }\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: NineSlicePlane;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 600;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private bell: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),6,4,6,4);\r\n        back.width = this.initialWidth;\r\n        back.height = 15;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        this.bar.width = this.initialWidth;\r\n        this.bar.height = 15;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.bell.position.set(440,21);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n        this.bell.visible=false;\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        if (p === 1) {\r\n            this.bell.play();\r\n            gsap.delayedCall(2, ()=> {\r\n                this.bell.gotoAndStop(0);\r\n            });\r\n        }\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        const letters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < letters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const letters = this.getLetters();\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < letters.length; i++) {\r\n            l++;\r\n            if (letters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(letters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            for (let i = 0; i < letters.length; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = letters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (letters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (letters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    protected getLetters(): string[] {\r\n        return [\"S\", \"U\", \"P\", \"E\", \"R\", \" \", \"P\", \"U\", \"P\", \"E\", \"R\", \" \", \"B\", \"O\", \"O\", \"M\"];\r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.clean();\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n        gsap.to(this.back, {alpha: 0.3, duration: 0.3});\r\n        gsap.to(this.tutorial.scale, {x: s.x, y: s.y, duration: 0.3});\r\n        gsap.to(this.txt.scale, {x: 1, y: 1, duration: 0.3});\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { TextedButton } from \"../../../core/ui/TextedButton\";\r\nimport { calculateStars } from \"../../Game\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private stars: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        const title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -340;\r\n        this.popup.addChild(title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n    }\r\n    public show(score: number, conditions: number[], callback: ()=>void) {\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n    }\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        //this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n        \r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 - 100;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 120, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            }\r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, getStorageData, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Sprite;\r\n    private preview2: Sprite;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.preview.anchor.set(0.5, 1);\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.height = 1200;\r\n        this.preview.visible = false;\r\n\r\n        this.preview2 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.preview2.anchor.set(0.5, 1);\r\n        this.gameContainer.addChild(this.preview2);\r\n        this.preview2.height = 600;\r\n        this.preview2.alpha = 0.8;\r\n        this.preview2.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-300, -610);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 4 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n\r\n        setSlowMo(false);\r\n        this.boltsActive = false;\r\n        this.nextTimer.clear();\r\n        this.boomMeter.reset(true);\r\n        this.levelStart.clear();\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.activeBonus = EBonus.None;\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        this.preview.visible = false;\r\n        this.preview2.visible = false;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.nextLines = [];\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        this.fxContainer.removeChildren();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n        const l = this.gameContainer.children.length;\r\n        for (let i = l - 1; i >= 0; i--) {\r\n            const c = this.gameContainer.children[i];\r\n            if ((c as any).createBody) {\r\n                this.gameContainer.removeChild(c);\r\n            }\r\n        }\r\n        gsap.globalTimeline.clear();\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MapState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS() {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.5;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n            this.preview2.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.levelFinished.show(this.score, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            });\r\n            this.nextTimer.freeze();\r\n            this.obstacles.forEach((o)=> {\r\n                o.clean();\r\n            });\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                amount += ((body as any).userData as CircleBlock).boom(false); \r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\", this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType() {\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.rotation = angle + Math.PI/2;\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            let d = len;\r\n            if (xx < -boundX || xx > boundX) {\r\n                d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview2.visible = true;\r\n                this.preview2.position.set(xx, yy);\r\n                this.preview2.rotation = -angle - Math.PI/2;\r\n            } else {\r\n                this.preview2.visible = false;\r\n            }\r\n            this.preview.height = d;\r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        //this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n        this.preview2.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n            });\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.gameContainer.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"TODO List\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            \r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good task to do today.\";\r\n            } else {\r\n                text = \"The task is done: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        console.log((instanceA as any).rocket, instanceB.type, instanceB.correctType(), (instanceB as any).rocket, instanceA.type, instanceA.correctType());\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              (instanceB.type === 251) ? (instanceB as any).changePosition() : (instanceA as any).changePosition();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}