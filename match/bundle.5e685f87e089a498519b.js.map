{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","checkPlaying","Math","floor","random","playing","toString","play","console","error","stop","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","interpolatedPosition","position","rotateView","interpolatedAngle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","AdType","DummySocial","score","txt","success","language","gameKey","secretKey","sendAdEvent","EGAAdAction","Show","EGAAdType","Interstitial","Promise","resolve","RewardedVideo","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","reject","log","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","showInter","showReward","finishLoading","gameplayStart","gameplayStop","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","angle","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","getTexture","getTexture2","savedType","kinematic","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","delayedCall","playRandom","cos","sin","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","sendEvent","Date","getTime","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","startTime","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","onStart","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","time","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStartTime","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","levelStarted","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","sendStartLevelEvent","maximum","addActiveBlock","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","delta","MenuState","pauseTime","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","getLevelTime","idealTime","sendFinishLevelEvent","EGAProgressionStatus","Complete","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","customs","sendProgressionEvent","Start","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","bonusBalls","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","skullsArr","includes","playArgue","createGoalBlock","createBottomExit","addBeginSkulls","circle","setPermanentSkull","onGameOver","obstacle","Static","Random","Fail","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdError","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","status","addProgressionEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","RewardReceived","category","label","addDesignEvent","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,k3BCtJF,IAsFM0C,EAAS,IAtFtB,yB,4FAAA,qI,UAAA,O,EAAA,G,EAAA,mBAMI,SAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,IAAM,GACXD,KAAKE,OAAS,GACdF,KAAKG,aAAc,EACnBH,KAAKI,YAAa,IAX1B,qBA4BI,WACI,OAAOJ,KAAKI,YA7BpB,IAaI,SAAqBlC,GAAY,MAC7B8B,KAAKI,WAAalC,EAClB,UAAA8B,KAAKE,OAAL,sBAAsBG,KAAKnC,KAfnC,sBAyBI,WACI,OAAO8B,KAAKG,aA1BpB,IAiBI,SAAsBjC,GAElB,IAAK,IAAMN,KADXoC,KAAKG,YAAcjC,EACH8B,KAAKC,IACbD,KAAKC,IAAIrC,IACToC,KAAKC,IAAIrC,GAAGyC,KAAKnC,KArBjC,iBAgCI,SAAWG,EAAciC,GAAmE,WACxF,IAAIN,KAAKC,IAAI5B,GAAb,CACA,IAAK2B,KAAKD,KACN,MAAM,IAAIQ,MAAM,yBAEpB,IAAMC,EAAgB,CAAC,MAAO,OAAOC,KAAI,SAAC3B,GACtC,gBAAU,EAAKiB,KAAf,YAAuB1B,EAAvB,YAA+BS,MAG7BZ,EAAI,IAAIwC,OAAK,CACfF,MACAG,SAAUL,aAAF,EAAEA,EAAUK,SACpBC,KAAMN,aAAF,EAAEA,EAAUM,KAChBC,QAAQP,aAAA,EAAAA,EAAUO,SAAU,IAGnB,UAATxC,EACA2B,KAAKC,IAAI5B,GAAQH,EAEjB8B,KAAKE,OAAO7B,GAAQH,KAnDhC,wBAsDI,SAAkBG,EAAcyC,GAG5B,IAH0E,IAA9BC,IAA8B,yDACpEpC,EAAIqC,KAAKC,MAAMD,KAAKE,SAASJ,GAC/BK,GAAU,EACL7E,EAAI,EAAGA,EAAIwE,EAAQxE,IACxB,GAAI0D,KAAKC,IAAI5B,EAAO/B,EAAE8E,YAAYD,UAAW,CACzCA,GAAU,EACV,MAGHA,GAAYJ,GACbf,KAAKqB,KAAKhD,EAAOM,EAAEyC,cAhE/B,kBAmEI,SAAY/C,GAA6C,IAA/B0C,EAA+B,wDAChDf,KAAKC,IAAI5B,GAKT2B,KAAKC,IAAI5B,GAAM8C,WAAcJ,GAC9Bf,KAAKC,IAAI5B,GAAMgD,OALfC,QAAQC,MAAM,wBArE1B,kBA6EI,SAAYlD,GACH2B,KAAKC,IAAI5B,GAKd2B,KAAKC,IAAI5B,GAAMmD,OAJXF,QAAQC,MAAM,2B,8EA/E1B,M,ubCEO,IAAME,EAAb,WAII,WAAYC,I,4FAAkB,sFAC1B1B,KAAK0B,MAAQA,EACb1B,KAAK2B,OAAS,IAAIC,I,YAN1B,S,EAAA,G,EAAA,wBAQI,WACI,OAAO5B,KAAK6B,eATpB,iBAWI,SAAgCC,GAC5B9B,KAAK2B,OAAOI,IAAsBD,EAAME,YAAuCF,GAC/EA,EAAM3C,WAbd,mBAeI,SAAkChB,GAC9B,IAAM2D,EAAS9B,KAAK2B,OAAOjD,IAAIP,GAC/B,IAAI2D,EASA,MAAM,IAAIvB,MAAJ,mBAAsBpC,IARvB6B,KAAK6B,eACN7B,KAAK6B,aAAaI,QAClBjC,KAAK0B,MAAMQ,YAAYlC,KAAK6B,eAHzB,2BAFsCM,EAEtC,iCAFsCA,EAEtC,kBAKPL,EAAMM,MAAMD,GACZnC,KAAK6B,aAAeC,EACpB9B,KAAK0B,MAAMW,SAASrC,KAAK6B,gBAxBrC,sB,EAAA,yBA6BI,2IAAwBM,EAAxB,yBAAwBA,EAAxB,WACUL,EAAQ9B,KAAK6B,cACd7B,KAAK6B,aAFd,gCAGc7B,KAAK6B,aAAaI,QAHhC,OAIQjC,KAAK0B,MAAMQ,YAAYlC,KAAK6B,cAJpC,OAMIlC,OAAO2C,YAAW,WACdR,EAAMM,MAAMD,GACZ,EAAKN,aAAeC,EACpB,EAAKJ,MAAMW,SAAS,EAAKR,gBAC3B,KAVN,+CA7BJ,E,8KAAA,gD,8EAAA,K,s2CCEO,ICiBIU,EAEAC,EDnBEC,EAAb,a,qRAAA,U,MAAA,OAEI,WAAYC,EAAeC,GAAgB,M,mGAAA,SACvC,e,EADuC,K,OAAA,G,EAAA,Y,wFAEvC,IAAMC,EAAOC,IAAOC,KAAKC,KAAQC,OAFM,OAGvCJ,EAAKK,OAAOlB,IAAI,IAChBa,EAAKM,KAAO,EACZN,EAAKO,MAAO,GACZP,EAAKF,MAAc,EAANA,EACbE,EAAKD,OAAgB,EAAPA,EACdC,EAAKQ,aAAc,EACnB,EAAKf,SAASO,GAEd,EAAKS,OAASR,IAAOC,KAAK,wBAC1B,EAAKO,OAAOJ,OAAOlB,IAAI,GAAI,IAC3B,EAAKM,SAAS,EAAKgB,QAboB,EAF/C,O,EAAA,G,EAAA,mBAiBI,WACIrD,KAAKsD,SAAU,EACftD,KAAKuD,WAnBb,kBAqBI,WACIvD,KAAKsD,SAAU,EACfE,IAAKC,aAAazD,KAAKqD,UAvB/B,oBAyBI,WAAiB,WACbrD,KAAKqD,OAAOK,SAAW,EACvBF,IAAKG,GAAG3D,KAAKqD,OAAQ,CAACK,SAAkB,EAAR1C,KAAK4C,GAAMC,SAAU,EAAGC,KAAMC,IAAOC,SAAUC,WAAY,WACvF,EAAKV,iB,8EA5BjB,GAAkCW,K,gTCUlCC,IAAYC,eAAeC,KAC3BC,IAAOF,eAAeG,KACtBD,IAAOF,eAAeI,KAQf,IAeIC,EAGPC,EAlBOC,EAA0B,GAC1BC,EAAe,CACtBC,SAAS,EACTC,QAAQ,EACRC,MAAO,EACPC,WAAY,EACZC,cAAe,EACfC,eAAgB,EAChBC,OAAQ,GACRC,eAAWC,EACXC,SAAU,IAAIC,WACdC,eAAgB,IAAID,WACpBE,mBAAoB,IAAIF,WACxBG,QAAQ,GAiBUC,EAAtB,WACI,WAAYjD,EAAeC,GAAgB,Y,4FAAA,SACvC,IAAMiD,EAA+B,CACjClD,MAAOA,EACPC,OAAQA,EACRkD,aAAa,EACbC,WAAY,EACZC,gBAAiB,UAEnBnB,EAAaK,cAAgBvC,EAC7BkC,EAAaM,eAAiBvC,EAC9BH,EAAM,IAAI2B,IAAYyB,GACtBI,SAASC,KAAKC,YAAY1D,EAAI2D,MAC9B7F,WAAS8F,kCAAmC,EAC5C5D,EAAI2D,KAAKE,MAAMC,KAAO,KACtB9D,EAAI2D,KAAKE,MAAME,IAAM,KACrB/D,EAAI2D,KAAKE,MAAM3D,MAAQ,OACvBF,EAAI2D,KAAKE,MAAM1D,OAAS,OACVH,EAAIgE,SAASC,QAAQC,YACnClE,EAAId,MAAM0B,aAAc,EACxBZ,EAAImE,OAAOC,OAAS,GACpB,IAAMlF,EAAQ,IAAIwC,IAClB1B,EAAId,MAAMW,SAASX,GACnBa,EAAQ,IAAIsE,IAAGC,MAAM,CAACC,QAAQ,CAAC,GAAI,MACnC/G,KAAKgH,sBACL,IAAM1B,EAAW,IAAIC,WACfE,EAAqB,IAAIF,WACzBC,EAAiB,IAAID,WAC3BX,EAAaU,SAAWA,EACxBV,EAAaY,eAAiBA,EAC9BZ,EAAaa,mBAAqBA,EAClClD,EAAM0E,mBAAmB,IAAIC,kBAAgB5B,EAAUA,EAAU,CAAC6B,YAAa,EAAGC,UAAWC,WAASC,kBAAkB,KACxH/E,EAAM0E,mBAAmB,IAAIC,kBAAgBzB,EAAoBD,EAAgB,CAAC2B,YAAa,EAAGC,UAAWC,WAASC,kBAAkB,KACxI/E,EAAMgF,iBAAkB,EACxB/E,EAAImE,OAAOa,KAAI,WACb,IAAI5C,EAAaE,OAAjB,CACA,IAAM2C,EAAO,GAAK7C,EAAac,OAAS,IAAM,IAC9CnD,EAAMkF,KAAKA,EAAM,GAAQ,GACzBlF,EAAMmF,OAAOC,SAAQ,SAAC1B,GACpB,IAAM5C,EAAyB4C,EAAa2B,SAC5C,GAAIvE,GAAUA,EAAOwE,UAAW,CAC9B,IAAMC,EAAK7B,EAAK8B,qBAChB1E,EAAO2E,SAASjG,IAxDN,GAwDU+F,EAAG,GAxDb,GAwD8BA,EAAG,IACtCzE,EAAe4E,WACjB5E,EAAe4E,WAAWhC,EAAKiC,mBAEhC7E,EAAOK,SAAWuC,EAAKiC,sBAI7B,EAAKC,YAAYV,OAEnBzH,KAAKoC,MAAMI,EAAKd,IAChBgD,EAAU,IAAIjC,EAAaC,EAAOC,IAC1ByF,OACR1G,EAAMW,SAASqC,G,YAvDzB,S,EAAA,G,EAAA,0BA2DI,SAAsB+C,GAClB,IAAMtF,EAASnC,KAAKqI,eAAeZ,GACnCzH,KAAKsI,oBACLtI,KAAKuI,gBAAgBpG,KA9D7B,+BAgEI,WACEwC,EAAagD,SAAQ,SAAC1B,GAAD,OAAU1D,EAAMiG,WAAWvC,MAChDtB,EAAe,KAlErB,oB,EAAA,yBAoEI,WAAoBnC,EAAkBd,GAAtC,qGACU+G,EAAQ,IAAIvE,IAClBxC,EAAMW,SAASoG,GACTC,EAAO,IAAIxE,IACjBxC,EAAMW,SAASqG,GACfjE,EAAe,IAAIhD,EAAaiH,GALpC,SAMU1I,KAAK2I,OANf,OAOU/F,EAAOC,IAAOC,KAAKC,UAAQD,KAAK,cACtC2F,EAAMpG,SAASO,GAEf5C,KAAK4I,eAECC,EAAsB,WAC1B,MAAO,CAAEnG,MAAOoG,WAAYnG,OAAQoG,cAEhCC,EAAS,WACb,MAA0BH,IAAlBnG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACfH,EAAIgE,SAASwC,OAAOtG,EAAOC,GAS3BiC,EAAaI,WAAarC,EAC1B+B,EAAQ/B,OAASA,EACjB+B,EAAQK,MAAMkE,EAAIvE,EAAQK,MAAMmE,EAEhC,IAAMnE,EAAQpC,EAASiC,EAAaM,eACpCN,EAAaG,MAAQA,EACrB2D,EAAK3D,MAAMhD,IAAIgD,EAAOA,GAEtB0D,EAAM1D,MAAMhD,IAAIgD,EAAOA,GACvB0D,EAAMT,SAASjG,IACL,GAARW,EAA4B,GAAd+F,EAAM/F,MACX,GAATC,EAA8B,GAAf8F,EAAM9F,QAGvB+F,EAAKV,SAASjG,IACZ0G,EAAMT,SAASiB,EAAkB,GAAdR,EAAM/F,MACzB+F,EAAMT,SAASkB,EAAmB,GAAfT,EAAM9F,QAE3B+B,EAAQsD,SAASjG,IACf0G,EAAMT,SAASiB,EAAkB,GAAdR,EAAM/F,MACzB+F,EAAMT,SAASkB,EAAmB,GAAfT,EAAM9F,SAG7BhD,OAAOwJ,iBAAiB,SAAUH,GAClCA,IAlDJ,gDApEJ,E,8KAAA,mD,8EAAA,K,keCpDO,ICUKI,EDVCC,EAAb,yB,4FAAA,S,UAAA,2B,EAAA,G,EAAA,gCACE,SAAyBC,MAD3B,+BAIE,WACE,OAAO,IALX,gCAOI,WACI,OAAO,IARf,6BAUE,WACE,OAAO,IAXX,+BAaE,WACE,OAAO,IAdX,2BAgBE,cAhBF,0BAmBE,cAnBF,0DAsBE,kKAtBF,yEAyBE,cAzBF,wBA4BE,SAAkBC,MA5BpB,0BA+BE,cA/BF,yDAkCE,kKAlCF,0EAqCE,SAAuB9J,MArCzB,mCAwCE,cAxCF,sDA2CE,sHACS,IADT,2CA3CF,yEA8CE,cA9CF,0DAiDE,WAA4BL,EAAaN,GAAzC,qJAjDF,0GAoDE,WAA4BM,EAAaN,GAAzC,yGACSA,GADT,2CApDF,oGAuDE,WAAsBA,GAAtB,qJAvDF,kGA0DE,sHACS,GADT,2CA1DF,6FA6DE,sHACS,CACL0K,SAAS,EACTC,SAAU,KACVC,QAAS,mCACTC,UAAW,6CALf,2CA7DF,kGAqEE,oGACEC,GAAYC,GAAYC,KAAMC,GAAUC,cAD1C,kBAES,IAAIC,SAAc,SAACC,GACxB,IAAMvL,EAAIqC,KAAKE,SAAW,GAC1BvB,OAAO2C,YAAW,WAChB4H,MACCvL,EAAI,IAAO,OANlB,2CArEF,mGA8EE,oGACEiL,GACEC,GAAYC,KACZC,GAAUI,eAHd,kBAKS,IAAIF,SAAiB,SAACC,GAC3BvK,OAAO2C,YAAW,WAChB4H,GAAQ,KACP,SARP,2CA9EF,sEAyFE,WACE,MAAO,Q,8EA1FX,K,sUCUYd,O,iCAAAA,I,gCAAAA,M,KAkDZ,IAOIgB,EAPEC,EAAkB,WACpB,IACI,OAAOC,aACT,MAAOC,GACL,SAIJC,GAAqB,EACZC,EAAU,4CAAG,sHACf,IAAIR,SAAiB,SAACC,EAASQ,GAQlCN,EAAW,IAAIf,EAEf/H,QAAQqJ,IAAIP,GACRA,GACAA,EAASQ,OAAOC,MAAK,SAACC,GAElBZ,EAAQY,MAFZ,OAGS,SAACnM,GACNoM,GAAU,CAAC,MAAQ,eACnBL,WAlBU,2CAAH,qDAqCVM,EAAc,4CAAG,WAAM5L,EAAaN,GAAnB,6FACX,QAAf,EAAAuL,WAAA,SAAmBY,QAAQ7L,EAAKN,GADN,SAEpBsL,EAASY,eAAe5L,EAAKN,GAFT,2CAAH,wDAIdoM,EAAc,4CAAG,WAAM9L,EAAaN,GAAnB,wGACZsL,EAASc,eAAe9L,EAAKN,GADjB,cACtBlB,EADsB,UAEhBkB,IACNlB,GAAmB,QAAf,EAAAyM,WAAA,eAAmBc,QAAQ/L,KAAQN,GAHjB,kBAKnBlB,GALmB,2CAAH,wDAoCdwN,GAAO,4CAAG,WAAMC,GAAN,0FACf1M,GAAI,EFzGN+F,GACFA,EAAQ4G,OE0GFlL,EAAaN,EAAOyL,UACpBC,EAAa1L,EAAO0L,WAC1B1L,EAAOyL,WAAY,EACnBzL,EAAO0L,YAAa,EAND,KAOXH,EAPW,cAQVjC,EAAOY,aARG,SAYVZ,EAAOe,cAZG,oCASLC,EAASqB,YATJ,eAUX9M,GAAI,EAVO,8CAaDyL,EAASsB,aAbR,eAaX/M,EAbW,2CAgBnB6L,GAAY,EFnHV9F,GACFA,EAAQ0D,OEoHRtI,EAAOyL,UAAYnL,EACnBN,EAAO0L,WAAaA,EAnBD,kBAoBZ7M,GApBY,4CAAH,sDA+BPgN,GAAa,4CAAG,sHAClBvB,EAASuB,iBADS,2CAAH,qDAyBbC,GAAgB,WACzBxB,EAASwB,iBAEAC,GAAe,WACxBzB,EAASyB,gB,q0CC/MN,IAAeC,GAAtB,a,sRAAA,U,MAAA,QACI,aAAc,O,4FAAA,sBADlB,O,EAAA,E,qFAAA,CAAwC5H,K,8wDCGjC,ICCK6H,GDDCC,GAAb,a,sRAAA,U,MAAA,QAOI,WAAYC,EAAqBC,GAAmB,a,4FAAA,eAChD,gBADgD,8EAJtB,GAIsB,iDAEhD,EAAKC,cAAiC,KAAhBF,EAAsBlJ,KAAQC,MAAQD,KAAQD,KAAKmJ,GACzE,EAAKG,YAA+B,KAAhBH,EAAsBlJ,KAAQC,MAAQD,KAAQD,KAAKoJ,GACvE,EAAKG,IAAMxJ,IAAOC,KAAK,EAAKqJ,eAC5B,EAAKE,IAAIpJ,OAAOlB,IAAI,GAAI,IACxB,EAAKM,SAAS,EAAKgK,KAEnB,EAAKC,GAAG,cAAe,EAAKC,aAAalN,KAAlB,QAClBiN,GAAG,YAAa,EAAKE,WAAWnN,KAAhB,QAChBiN,GAAG,mBAAoB,EAAKE,WAAWnN,KAAhB,QACvBiN,GAAG,aAAc,EAAKG,YAAYpN,KAAjB,QAEtB,EAAKqN,UAAW,EAbgC,EAPxD,O,EAAA,G,EAAA,qBAkCI,WACI,OAAO1M,KAAK2M,YAnCpB,IAsBI,SAAoB7N,GAChBkB,KAAK2M,WAAa7N,EACdkB,KAAK2M,YACL3M,KAAKoD,aAAc,EACnBpD,KAAK4M,YAAa,EAClB5M,KAAKqM,IAAIlJ,MAAQ,KAEjBnD,KAAKoD,aAAc,EACnBpD,KAAK4M,YAAa,EAClB5M,KAAKqM,IAAIlJ,MAAQ,KA/B7B,yBAqCI,WACQnD,KAAK2M,YAGL3M,KAAK6M,SAGT7M,KAAKqM,IAAIS,QAAU9M,KAAKmM,iBA5ChC,0BA+CI,SAAuBY,GACf/M,KAAK2M,aAGT7M,EAAOuB,KAAK,SACZrB,KAAK6M,QAAS,EACd7M,KAAKqM,IAAIS,QAAU9M,KAAKoM,eArDhC,wBAuDI,WACQpM,KAAK2M,aAGT3M,KAAK6M,QAAS,EACd7M,KAAKqM,IAAIS,QAAU9M,KAAKmM,iBA5DhC,qBA8DI,SAAiBvG,GACb5F,KAAKgN,IAAI,eACJA,IAAI,aACJA,IAAI,oBACJA,IAAI,cACT,6CAAcpH,Q,gFAnEtB,GAA4B1B,K,68CCChB6H,O,WAAAA,I,MAEA/K,KAAKiM,IAAI,EAAE,I,QAFXlB,I,MAGA/K,KAAKiM,IAAI,EAAE,I,QAHXlB,I,MAIA/K,KAAKiM,IAAI,EAAE,I,QAJXlB,I,UAKI/K,KAAKiM,IAAI,EAAE,I,aALflB,Q,KAOL,IAAemB,GAAtB,a,sRAAA,U,MAAA,QAMI,WAAY7B,GAAc,a,4FAAA,eACtB,gBADsB,wFAEtB,EAAKA,KAAOA,EACZ,EAAKlF,KAAO,EAAKgH,aACjB,EAAKhH,KAAKlD,OAAOlB,IAAI,GAAK,IAC1B,EAAKM,SAAS,EAAK8D,MALG,EAN9B,O,EAAA,G,EAAA,yBAaI,SAAkBiH,GAAmC,IAAlBC,EAAkB,uDAAH,EAC9CrN,KAAKmG,KAAKhD,MAAQ,EAClB,IAAMmK,EAAwB,CAACtN,KAAKgI,SAASiB,ELa3B,GKb2CjJ,KAAKgI,SAASkB,ELazD,IKZlBlJ,KAAKuN,MAAQvN,KAAKwN,cAClBxN,KAAKiG,KAAO,IAAIwH,OAAK,CAACpC,KAAM+B,EAAUpF,SAAUsF,EAAKD,OAAMK,QAAS,EAAGC,eAAgB,IACvF3N,KAAKiG,KAAK2H,SAAS5N,KAAKuN,OACxBhL,EAAMsL,QAAQ7N,KAAKiG,MAClBjG,KAAKiG,KAAa2B,SAAW5H,OApBtC,mBAsBI,WAAiC,IAApB1D,EAAoB,wDAC7B0D,KAAK8N,YAAYxR,GACjB0D,KAAK+N,QAAU/N,KAAK+N,OAAO7L,YAAYlC,QAxB/C,oBA0BI,WACI,OAAO,IA3Bf,yBA6BI,WAAqD,IAA9BgO,EAA8B,wDAC7ChO,KAAKiG,OACD+H,EACAzL,EAAMiG,WAAWxI,KAAKiG,MAEtBtB,EAAa7H,KAAKkD,KAAKiG,MAE3BjG,KAAKiG,UAAOZ,KApCxB,yBAuCI,WACI,OAAqB,IAAdrF,KAAKqL,OAAerL,KAAKqL,KAAO,IAAMrL,KAAKqL,OAAS4C,GAAYC,sBAAwBlO,KAAKqL,OAAS4C,GAAYE,sBAAwBnO,KAAKqL,OAAS4C,GAAYG,YAAcpO,KAAKqL,OAAS4C,GAAYI,e,gFAxC3N,GAA4CnK,K,62DCJrC,IAAM+J,GAAb,a,sRAAA,U,MAAA,QA6BI,WAAYhF,EAAWC,EAAWmC,GAAsC,MAAxBlM,IAAwB,iFACpE,cAAMkM,IAD8D,qBAbjB,IAAIzJ,KAaa,iBAZzD,GAYyD,uBAVhD,GAUgD,+CAPnD,GAOmD,sBANnD,GAMmD,uBALnD,GAKmD,2BAJ/C,GAI+C,iBAHzD,GAGyD,+BAEpE,EAAK0M,eAAiBjD,IAAS4C,EAAYG,WAE3C,EAAKpG,SAASjG,IAAIkH,EAAEC,GAChB/J,GACA,EAAKoP,WAAWd,OAAKe,SAEzB,EAAKC,MAAQ,EAAKC,cAClB,EAAKD,MAAMxL,OAAOlB,IAAI,GAAK,IAC3B,EAAKM,SAAS,EAAKoM,OAViD,EA7B5E,O,EAAA,G,EAAA,yBAyCI,SAAkBE,GACd3O,KAAKmG,KAAKzC,SAAWiL,IA1C7B,qBA4CI,WACI,OAAO3O,KAAK4O,YA7CpB,IA+CI,SAAqB9D,GACjB9K,KAAK4O,WAAa9D,IAhD1B,wBAkDI,SAAoBsC,GAAqC,MAAhBC,EAAgB,uDAAT,EAC5C,gDAAiBD,EAAUC,GAC3BrN,KAAK6O,YAAc,IAAIC,SAAO,CAACC,QAAS/O,KAAKgP,YAAc,GNpBzC,KMqBlBhP,KAAK6O,YAAYI,QAAS,EAC1BjP,KAAK6O,YAAYvJ,SAAWV,EAAaU,SACxCtF,KAAK6O,YAAoB7S,MAAO,EACjC,UAAAgE,KAAKiG,YAAL,SAAW2H,SAAS5N,KAAK6O,eAxDjC,2BA0DI,WACS7O,KAAKiG,OACVjG,KAAKiG,KAAKiJ,aAAe,EACzBlP,KAAKiG,KAAKoH,KAAO,EACjBrN,KAAKiG,KAAKkJ,uBACVnP,KAAKuN,MAAMjI,SAAWV,EAAaU,YA/D3C,+BAiEI,WAA2B,WACvBtF,KAAKoP,YACL5L,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKI,WAAY,WAC7D,EAAKoL,WAET7L,IAAKG,GAAG3D,KAAKyO,MAAM1J,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,KACjD7D,KAAK8N,gBAvEb,uBAyEI,WACItK,IAAKC,aAAazD,KAAKmG,KAAKpB,OAC5BvB,IAAKC,aAAazD,KAAKyO,MAAM1J,SA3ErC,mBA6EI,WACI/E,KAAKsP,MAAO,EACZ,8CA/ER,gCAiFI,WACQtP,KAAKqL,OAAS4C,EAAYG,YAAepO,KAAKsO,iBAC9CtO,KAAKuP,YAAc,GACM,IAArBvP,KAAKuP,YACLvP,KAAKwP,iBArFrB,qBA0FI,WACI,OAAOxP,KAAKqL,OAAS4C,EAAYG,aA3FzC,+BA6FI,WACItO,EAAOuB,KAAK,cACZrB,KAAKsO,gBAAiB,EACtBtO,KAAKqL,KAAO4C,EAAYG,WACxBpO,KAAKmG,KAAK2G,QAAU9M,KAAKyP,aACzBzP,KAAKyO,MAAM3B,QAAU9M,KAAK0P,gBAlGlC,sBAoGI,WACI5P,EAAOuB,KAAK,cACZrB,KAAK2P,UAAY3P,KAAKqL,KACtBrL,KAAKuP,WAAa,EAClBvP,KAAK4P,WAAY,EACb5P,KAAKiG,OAAMjG,KAAKiG,KAAKiJ,aAAe,GACxClP,KAAKqL,KAAO4C,EAAYG,WACxBpO,KAAKmG,KAAK2G,QAAU9M,KAAKyP,aACzBzP,KAAKyO,MAAM3B,QAAU9M,KAAK0P,gBA5GlC,yBA8GI,WACI1P,KAAKqL,KAAOrL,KAAK2P,UACjB3P,KAAK2P,WAAa,EAClB3P,KAAKmG,KAAK2G,QAAU9M,KAAKyP,aACzBzP,KAAKyO,MAAM3B,QAAU9M,KAAK0P,cAC1B1P,KAAKyO,MAAMnL,SAAU,IAnH7B,qBAqHI,WAAiB,WACTtD,KAAKsP,OACTtP,KAAKqL,KAAO4C,EAAY4B,UACxB7P,KAAKmG,KAAK2G,QAAU/J,UAAQD,KAAK,YACjC9C,KAAKyO,MAAMnL,SAAU,EACrBtD,KAAKoP,YACLpP,KAAKsP,MAAO,EACZ9L,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,GAAKC,EAAG,GAAKrF,SAAU,EAAGiM,SAAU,WAC7D,EAAKC,iBAETvM,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,IAAKC,EAAG,IAAK8G,MAAO,EAAGnM,SAAU,GAAKiM,SAAU,WACzE,EAAKC,eACN9L,WAAY,WACX,IAAMgM,EAAYC,GAAeC,SACjC,EAAK9N,SAAS4N,GACdA,EAAUG,UAAUvF,MAAK,WACrBqF,GAAeG,QAAQJ,MAE3B,EAAKK,0BAvIjB,kBA0II,WAAsC,IAA1BC,IAA0B,yDAClC,OAAOvQ,KAAKwQ,SAASxQ,KAAKyQ,YAAYzQ,KAAK0Q,MAAOH,KA3I1D,uBA6II,WACI,OAAO,KA9If,wBAgJI,WACI,OAAOxN,UAAQD,KAAR,UAAgB9C,KAAKqL,KAArB,WAjJf,yBAmJI,WACI,OAAOtI,UAAQD,KAAR,UAAgB9C,KAAKqL,KAArB,YApJf,wBAsJI,WACI,IAAMsF,EAAI,IAAI9N,SAAO7C,KAAKyP,cAE1B,OADAkB,EAAE5L,MAAMhD,IAAI,GAAI,IACT4O,IAzJf,yBA2JI,WACI,IAAMA,EAAI,IAAI9N,SAAO7C,KAAK0P,eAE1B,OADAiB,EAAE5L,MAAMhD,IAAI,GAAI,IACT4O,IA9Jf,yBAgKI,WACI,IAAMpD,EAAQ,IAAIuB,SAAO,CAACC,OAAQ/O,KAAKgP,YNjIrB,KMqIlB,OADAzB,EAAMjI,SAAWV,EAAaU,SACvBiI,IArKf,sBAwKI,SAAgB3P,GAA8C,WAAnC2S,EAAmC,wDAC1D,GAAIvQ,KAAKsP,OAAStP,KAAKiG,KAAM,OAAO,EACpC,IAAI2K,EAAa,EACjB5Q,KAAKsP,MAAO,EACZ,IAAMuB,EAAW7Q,KAAK0Q,MAGtB,GAFA9S,GAAKoD,KAAK8P,IAAI,EAAG9Q,KAAK+Q,mBAAmBC,KAAO,GAChDhR,KAAK0Q,OAAS9S,EACVoC,KAAK0Q,OAAS1Q,KAAKyQ,YAAa,CAahC,GAZIF,IACAK,EAAa,GAEjB5Q,KAAKoP,YACLpP,KAAK+Q,mBAAmBpJ,SAAQ,SAACrI,EAAE2R,GAC/B,GAAIA,IAAM,EAAM,CACZ,IAAMC,EAAID,EAAET,SAAS,EAAKC,YAAYQ,EAAEP,MAAOH,GAC3CA,IACAK,GAAcM,OAItBL,EAAW,EACXrN,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKI,WAAY,WAC7D,EAAKoL,WAET7L,IAAKG,GAAG3D,KAAKyO,MAAM1J,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,KACjDL,IAAK2N,YAA0B,GAAdnQ,KAAKE,UAAc,WAChCpB,EAAO0B,KAAK,cACZ1B,EAAO0B,KAAK,cACZ1B,EAAO0B,KAAK,cACZ1B,EAAOsR,WAAW,YAAa,UAGhC,CACH,IAAIrC,EAAS/O,KAAKmG,KAAKzD,MAAQ,EAC3BwO,EAAI,EACRpR,EAAOuB,KAAK,gBACZmC,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKiM,SAAU,WAC3D,EAAK3J,KAAK6B,SAASjG,IAAIf,KAAKqQ,IAAIH,GAAGnC,EAAQ/N,KAAKsQ,IAAIJ,GAAGnC,GACvDmC,GAAKlQ,KAAK4C,GAAG,GACbmL,GAAU,GACX9K,WAAY,WACX,EAAKoL,WAETrP,KAAKyO,MAAM1J,MAAMhD,IAAI,EAAE,GAE3B/B,KAAK8N,YAAYyC,OACd,CACHzQ,EAAOuB,KAAK,aACZ,IAAM/E,EAAI2R,EAAYsD,aAAevR,KAAK0Q,MAC1ClN,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG3M,EAAG4M,EAAG5M,EAAGuH,SAAU,GAAKiM,SAAU,WAC3D,EAAKC,eACN9L,WAAY,WACX,EAAKqL,MAAO,KAEhB9L,IAAKG,GAAG3D,KAAKyO,MAAM1J,MAAO,CAACkE,EAAG3M,EAAG4M,EAAG5M,EAAGuH,SAAU,KAErD,OAAO+M,IAhOf,yBAkOI,WAAsB,QACjB5Q,KAAKuN,MAAiBwB,OAAS/O,KAAKgP,YAAcf,EAAYsD,aAAevR,KAAKmG,KAAKpB,MAAMkE,ENnM5E,GMoMlBjJ,KAAKuN,MAAMiE,uBACVxR,KAAK6O,YAAuBE,QAAU/O,KAAKgP,YAAc,GAAKf,EAAYsD,aAAevR,KAAKmG,KAAKpB,MAAMkE,ENrMxF,GMsMlBjJ,KAAK6O,YAAY2C,uBACjB,UAAAxR,KAAKiG,YAAL,SAAWuL,uBACX,UAAAxR,KAAKiG,YAAL,SAAWkJ,4B,gFAxOnB,GAAiCjC,I,GAApBe,G,aACkB,G,GADlBA,G,cAEmB,K,GAFnBA,G,kBAGuB,I,GAHvBA,G,YAKiB,K,GALjBA,G,WAMgB,K,GANhBA,G,uBAO4B,K,GAP5BA,G,uBAQ4B,K,GAR5BA,G,YASiB,K,GATjBA,G,aAUkB,K,GAVlBA,G,eAWoB,K,GAXpBA,G,WAYgB,K,GAZhBA,G,eAcuB,I,i1CCf7B,IAAMwD,GAAb,a,sRAAA,U,MAAA,QACI,WAAYxI,EAAWC,EAAWxG,EAAeC,EAAgB+O,GAAa,a,4FAAA,UAC1E,cAAM,IACD1J,SAASjG,IAAIkH,EAAEC,GACpB,EAAK/C,KAAKzD,MAAQA,EAClB,EAAKyD,KAAKxD,OAASA,EACnB,EAAK4L,WAAWd,OAAKkE,QACjB,EAAK1L,OACL,EAAKA,KAAKoH,KAAO,EACjB,EAAKpH,KAAK0I,MAAQiD,KAAaF,GARuC,EADlF,O,EAAA,G,EAAA,0BAYI,WAII,OAHU,IAAIG,MAAI,CAACnP,MAAO1C,KAAKmG,KAAKzD,MPoBlB,GOpBoCC,OAAQ3C,KAAKmG,KAAKxD,OPoBtD,OOjC1B,wBAkBI,WACI,IAAMwD,EAAO,IAAItD,IAAOE,UAAQC,OAKhC,OAJAmD,EAAKlD,OAAOlB,IAAI,IAChBoE,EAAKjD,KAAO,EACZiD,EAAK7C,SAAU,EACf6C,EAAKhD,MAAQ,EACNgD,IAxBf,wBA0BI,WACI,OAAO,IA3Bf,yBA6BI,WACI,OAAO,IA9Bf,+BAgCI,WAA2B,WACvB3C,IAAKC,aAAazD,KAAKmG,KAAKpB,OAC5BvB,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKI,WAAY,WAC7D,EAAKoL,WAETrP,KAAK8N,mB,gFArCb,GAAiCZ,I,6jDCF1B,IAAM4E,GAAb,a,sRAAA,U,QAAA,UAKI,aAAc,a,4FAAA,eACV,cAAM,MADI,2FAEV,EAAKvD,WAAWd,OAAKe,SACrB,EAAKuD,QAHK,EALlB,O,EAAA,G,EAAA,0BAUI,WACI,IAAMnU,EAAI,IAAIiU,MAAI,CAACnP,MAAO,EAAkBC,OAAQ,IAEpD,OADA/E,EAAEqR,QAAS,EACJrR,IAbf,wBAeI,WACI,OAAO,IAAIiF,SAAOE,UAAQD,KAAR,yBAhB1B,sB,EAAA,yBAkBI,WAAqBkP,EAAgBC,EAAgBC,EAAcC,GAAnE,oHACW,IAAIlI,SAAc,SAACtL,GACtB,EAAK2E,SAAU,EACf,EAAK0O,OAASA,EACd,EAAKC,OAASA,EACd,EAAKC,KAAOA,EACZ,EAAKC,KAAOA,EACZ,EAAKnK,SAASjG,IAAIiQ,EAAQC,GACtBD,IAAWE,IAAM,EAAK/L,KAAKwI,MAAQ,IACvC,IAAM/Q,EAAI,CAACqL,EAAG,EAAK+I,OAAQ9I,EAAG,EAAK+I,QACnC,EAAKhM,KAAM+B,SAAW,CAACpK,EAAEqL,EROX,GQPyBrL,EAAEsL,ERO3B,IQNd1F,IAAKG,GAAG/F,EAAG,CAACqL,EAAG,EAAKiJ,KAAMhJ,EAAG,EAAKiJ,KAAMtO,SAAU,EAAGC,KAAMsO,IAAMC,OAAQpO,WAAY,WACjF,EAAK8N,QACLpT,KACDmR,SAAU,WACT,EAAK7J,KAAM+B,SAAW,CAACpK,EAAEqL,EREf,GQF6BrL,EAAEsL,ERE/B,WQjBtB,0CAlBJ,E,gLAAA,uEAqCI,WACIlJ,KAAKiG,KAAMiJ,aAAe,EAC1BlP,KAAKsD,SAAU,EACftD,KAAKiG,KAAM+B,SAAW,EAAC,IAAkB,S,gFAxCjD,GAAmCkF,I,qpDCD5B,IAAMoF,GAAb,a,sRAAA,U,MAAA,QAEI,WAAYrJ,EAAWC,GAAW,M,MAAA,O,4FAAA,SAC9B,cAAMD,EAAGC,EAAG+E,GAAYsE,WAAW,G,EADL,M,OAAA,G,EAAA,W,wFAAA,EAFtC,O,EAAA,G,EAAA,gCAKI,WACIzS,EAAO0B,KAAK,gBACRxB,KAAKgQ,QACLhQ,KAAKgQ,MAAMwC,OACXxS,KAAKgQ,WAAQ3K,KATzB,6BAYI,WAAyB,WACjBrF,KAAKgQ,QACTlQ,EAAOuB,KAAK,gBAAgB,GAC5BrB,KAAKgQ,MAAQxM,IAAK2N,YAAY,GAAG,WAC7B,EAAKnB,WAAQ3K,EACb,EAAKoN,KAAK,kBAjBtB,yBAoBI,SAAqBzE,GACjBhO,KAAK0S,oBACL1S,KAAKgN,IAAI,YACT,iDAAkBgB,KAvB1B,sBAyBI,WACI,+CACAhO,KAAKmG,KAAK2G,QAAU/J,UAAQD,KAAR,YACpB9C,KAAKyO,MAAM3B,QAAU/J,UAAQD,KAAR,eA5B7B,wBA8BI,WACI,OAAO,IAAID,SAAO7C,KAAKyP,gBA/B/B,yBAiCI,WACI,OAAO,IAAI5M,SAAO7C,KAAK0P,iBAlC/B,wBAoCI,WACI,OAAO3M,UAAQD,KAAR,cArCf,yBAuCI,WACI,OAAOC,UAAQD,KAAR,eAxCf,uBA0CI,WACI,OAAO,KA3Cf,oBA6CI,WACI,OAAO,O,gFA9Cf,GAA+BmL,I,mwDCExB,IAAM0E,GAAb,a,sRAAA,U,MAAA,YAMI,aAAc,a,4FAAA,eACV,cAAM,GAAI,KADA,uFAEV,EAAK7R,OAAS,EAEd,EAAKyI,IAAM,IAAIqJ,OAAK,EAAK9R,OAAOM,WAAY,CAACyR,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,EAAUC,MAAO,WACtI,EAAKzJ,IAAItG,OAAOlB,IAAI,GAAK,IACzB,EAAKwH,IAAIN,EAAI,GACb,EAAKM,IAAIL,EAAI,GACb,EAAK7G,SAAS,EAAKkH,KAGnB,EAAK0J,KAAOpQ,SAAOC,KAAKC,UAAQD,KAAK,kBACrC,EAAKmQ,KAAKhK,EAAI,GACd,EAAKgK,KAAK/J,EAAI,GACd,EAAK7G,SAAS,EAAK4Q,MACnB,EAAKA,KAAK3P,SAAU,EAEpB,EAAKgJ,GAAG,aAAa,WACjB,EAAK4G,eAlBC,EANlB,O,EAAA,E,EAAA,eA2BI,WACI,OAAOlT,KAAKmT,MA5BpB,oDA8BI,WAAsBC,EAAenH,EAAsBC,GAA3D,6FACIlM,KAAKmT,IAAMC,EACXpT,KAAKmM,cAAgBF,EACrBjM,KAAKoM,YAAcF,EACnBlM,KAAKqM,IAAIS,QAAU9M,KAAKmM,cAExBnM,KAAKiT,KAAK3P,SAAU,EANxB,SAO4B4H,EAAeyH,EAAcU,aAAarT,KAAKoT,SAAK/N,GAPhF,eAQwBA,KADhBiO,EAPR,gCASQA,EAAc,IATtB,UAUctI,EAAe2H,EAAcU,aAAarT,KAAKoT,IAAKE,GAVlE,QAYItT,KAAKc,OAASyS,SAASD,GACvBtT,KAAKuJ,IAAIiK,KAAOF,EAChBtT,KAAKyT,YAELzT,KAAK+E,MAAMhD,IAAI,GAAK,IAhBxB,iDA9BJ,yEAmDI,WACwB,IAAhB/B,KAAKc,QACLd,KAAKqM,IAAIlJ,MAAQ,GACjBnD,KAAKiT,KAAK3P,SAAU,EACpBtD,KAAKuJ,IAAIjG,SAAU,IAEnBtD,KAAKqM,IAAIlJ,MAAQ,EACjBnD,KAAKiT,KAAK3P,SAAU,EACpBtD,KAAKuJ,IAAIjG,SAAU,GAEvBtD,KAAKuJ,IAAIiK,KAAOxT,KAAKc,OAAOM,aA7DpC,sDA+DI,sGACIsS,GAAU,OAAQ,UAAW,WACzB1T,KAAKc,OAAS,GAFtB,gBAGQd,KAAKc,SACLkK,EAAe2H,EAAcU,aAAarT,KAAKoT,IAAKpT,KAAKc,OAAOM,YAChEpB,KAAKyT,YACLzT,KAAKyS,KAAK,WAAYzS,KAAKoT,IANnC,8BAQchR,GAAQ,IAAIuR,MAAOC,UACzBhP,EAAaE,QAAS,EAT9B,UAU4BsG,GAAQhC,EAAOe,eAV3C,eAYQvF,EAAaE,QAAS,EAElB9E,KAAKyS,KAAK,WAAYzS,KAAKoT,IAAI,IAAIO,MAAOC,UAAYxR,GAdlE,iDA/DJ,8C,EAAA,2BAgDI,SAA2BgR,GACvB,MAAO,WAAaA,EAAGhS,c,mFAjD/B,GAAmC4K,I,m8CCJ5B,IAAM6H,GAAb,a,sRAAA,U,MAAA,QAUI,aAAc,a,4FAAA,eACV,gBADU,iEAPiB,KAOjB,kKAEV,EAAKjR,KAAOC,SAAOC,KAAKC,UAAQD,KAAK,gBACrC,EAAKT,SAAS,EAAKO,MACnB,EAAKkR,WAAajR,SAAOC,KAAKC,UAAQD,KAAK,uBAC3C,EAAKgR,WAAWxQ,SAAU,EAC1B,EAAKjB,SAAS,EAAKyR,YAEnB,EAAKC,IAAMlR,SAAOC,KAAKC,UAAQD,KAAK,gBACpC,EAAKT,SAAS,EAAK0R,KAEnB,EAAKC,QAAU,IAAInR,SAAOE,UAAQC,OAClC,EAAKgR,QAAQ/K,EAAI,GACjB,EAAK+K,QAAQtR,MAAQ,EACrB,EAAKsR,QAAQrR,OAAS,EAAKoR,IAAIpR,OAC/B,EAAKN,SAAS,EAAK2R,SACnB,EAAKD,IAAIE,KAAO,EAAKD,QAErB,EAAKE,UAAYrR,SAAOC,KAAKC,UAAQD,KAAK,gBAC1C,EAAKoR,UAAUjR,OAAOlB,IAAI,GAAK,IAC/B,EAAKmS,UAAUjL,EAAI,IACnB,EAAKiL,UAAUhL,EAAsB,GAAlB,EAAK6K,IAAIpR,OAC5B,EAAKN,SAAS,EAAK6R,WACnB,EAAKA,UAAU5Q,SAAU,EAEzB,EAAK6Q,OAAS,IAAItR,SAAOE,UAAQD,KAAK,uBACtC,EAAKqR,OAAO7Q,SAAU,EACtB,EAAKjB,SAAS,EAAK8R,QA3BT,EAVlB,O,EAAA,G,EAAA,0BAuCI,SAAmB1U,GACfO,KAAKgU,QAAQtR,MAAQ1C,KAAKoU,aAAe3U,EACzCO,KAAKkU,UAAU5Q,QAAU7D,EAAI,KAAQA,EAAI,IACzCO,KAAKkU,UAAUjL,EAAIjJ,KAAKgU,QAAQ/K,EAAIjJ,KAAKoU,aAAe3U,IA1ChE,sBA4CI,WAAkB,WACdO,KAAKqU,UAAW,EAChB7Q,IAAKC,aAAazD,KAAKmU,QACvB3Q,IAAKG,GAAG3D,KAAK8T,WAAY,CAAC3Q,MAAO,EAAGU,SAAU,KAC9CL,IAAKG,GAAG3D,KAAK4C,KAAM,CAACO,MAAO,EAAGU,SAAU,KACxCL,IAAKG,GAAG3D,KAAKmU,OAAQ,CAAChR,MAAO,EAAGU,SAAU,GAAKI,WAAY,WACvD,EAAKkQ,OAAO7Q,SAAU,EACtB,EAAKwQ,WAAWxQ,SAAU,OAnDtC,oBAsDI,WAAoC,WAAtBgR,EAAsB,wDAAH,EAC7BtU,KAAKqU,UAAW,EAChBrU,KAAKmU,OAAO7Q,SAAU,EACtBtD,KAAKmU,OAAOhR,MAAQ,EACpBnD,KAAK8T,WAAWxQ,SAAU,EAC1BtD,KAAK8T,WAAW3Q,MAAQ,EACxBK,IAAKC,aAAazD,KAAKmU,QACvB3Q,IAAKC,aAAazD,KAAK8T,YACvBtQ,IAAKC,aAAazD,KAAK4C,MACvBY,IAAKG,GAAG3D,KAAKmU,OAAQ,CAAChR,MAAO,EAAGU,SAAU,KAC1CL,IAAKG,GAAG3D,KAAK8T,WAAY,CAAC3Q,MAAO,EAAGU,SAAU,KAC9CL,IAAKG,GAAG3D,KAAK4C,KAAM,CAACO,MAAO,EAAGU,SAAU,KACpC7D,KAAKgQ,OACLhQ,KAAKgQ,MAAMwC,QAEE,IAAb8B,IACJtU,KAAKgQ,MAAQxM,IAAK2N,YAAYmD,GAAS,WACnC,EAAKC,iBAvEjB,mBA0EI,WACQvU,KAAKgQ,QACLhQ,KAAKgQ,MAAMwC,OACXxS,KAAKgQ,WAAQ3K,GAEjB7B,IAAKC,aAAazD,KAAKmU,QACvBnU,KAAKmU,OAAO7Q,SAAU,EACtBtD,KAAK8T,WAAWxQ,SAAU,EAC1BtD,KAAK4C,KAAKO,MAAQ,EAClBnD,KAAKqU,UAAW,O,gFAnFxB,GAAqCnQ,a,m8CCA9B,IAAMsQ,GAAb,a,sRAAA,U,MAAA,QAQI,aAAc,O,4FAAA,eACV,gBADU,wFAJiB,KAIjB,oFAEV,IAAM5R,EAAOC,SAAOC,KAAKC,UAAQD,KAAK,sBAF5B,OAGV,EAAKT,SAASO,GAEd,EAAKmR,IAAMlR,SAAOC,KAAKC,UAAQD,KAAK,qBACpC,EAAKT,SAAS,EAAK0R,KAEnB,EAAKC,QAAU,IAAInR,SAAOE,UAAQC,OAClC,EAAKgR,QAAQtR,MAAQ,EACrB,EAAKsR,QAAQrR,OAAS,EAAKoR,IAAIpR,OAC/B,EAAKqR,QAAQ/K,EAAI,GACjB,EAAK5G,SAAS,EAAK2R,SAEnB,EAAKE,UAAYrR,SAAOC,KAAKC,UAAQD,KAAK,uBAC1C,EAAKoR,UAAUjR,OAAOlB,IAAI,GAAK,IAC/B,EAAKmS,UAAUhL,EAAsB,GAAlB,EAAK6K,IAAIpR,OAC5B,EAAKN,SAAS,EAAK6R,WACnB,EAAKA,UAAU5Q,SAAU,EAEzB,EAAKmR,SAAW,IAAIC,iBAAe,CAAC3R,UAAQD,KAAK,yBAA0BC,UAAQD,KAAK,yBAA0BC,UAAQD,KAAK,yBAA0BC,UAAQD,KAAK,2BACtK,EAAKT,SAAS,EAAKoS,UACnB,EAAKA,SAASE,eAAiB,GAC/B,EAAKF,SAASnR,SAAU,EAExB,EAAKyQ,IAAIE,KAAO,EAAKD,QAErB,EAAKY,QAAU,EACf,EAAK9D,IAAM,GA5BD,EARlB,O,EAAA,G,EAAA,oBAsCI,SAAmB5S,GACf8B,KAAK8Q,IAAM5S,IAvCnB,mBAyCI,SAAa2W,GACTrR,IAAKC,aAAazD,KAAKgU,SACvBhU,KAAK4U,QAAU,EACXC,EACA7U,KAAKgU,QAAQtR,MAAQ,EAErBc,IAAKG,GAAG3D,KAAKgU,QAAS,CAACtR,MAAO,EAAGmB,SAAU,KAG/C7D,KAAKkU,UAAU5Q,SAAU,IAlDjC,oBAoDI,SAAcxC,GAAyB,WACnCd,KAAK4U,SAAW9T,EAChBd,KAAK4U,QAAU5T,KAAK8T,IAAI9U,KAAK4U,QAAS5U,KAAK8Q,KAC3C9Q,KAAKyU,SAASnR,SAAU,EACxBtD,KAAKyU,SAASM,YAAY,GAC1B,IAAMC,EAAShV,KAAK4U,SAAW5U,KAAK8Q,IAC9BrR,EAAIO,KAAK4U,QAAU5U,KAAK8Q,IAiB9B,OAhBA9Q,KAAKkU,UAAU5Q,QAAU7D,EAAI,KAAQA,EAAI,GACzC+D,IAAKC,aAAazD,KAAKgU,SACvBxQ,IAAKG,GAAG3D,KAAKgU,QAAS,CAACtR,MAAO1C,KAAKoU,aAAe3U,EAAGoE,SAAU,KAC/DL,IAAKG,GAAG3D,KAAKkU,UAAW,CAACjL,EAAGjJ,KAAKgU,QAAQ/K,EAAIjJ,KAAKoU,aAAe3U,EAAGoE,SAAU,GAAKI,WAAY,WAC3F,EAAKwQ,SAASnR,SAAU,EACxB,EAAKmR,SAASjT,UAEdwT,IACAhV,KAAKyU,SAASnR,SAAU,EACxBtD,KAAKyU,SAASjT,OACdxB,KAAK4U,QAAU,EACfpR,IAAKG,GAAG3D,KAAKgU,QAAS,CAACtR,MAAO,EAAGsN,MAAO,GAAKnM,SAAU,KACvDL,IAAKG,GAAG3D,KAAKkU,UAAW,CAACjL,EAAGjJ,KAAKgU,QAAQ/K,EAAGpF,SAAU,GAAKiM,SAAU,WACjE,EAAKoE,UAAU5Q,QAAU7D,EAAI,KAAQA,EAAI,OAG1CuV,O,gFA3Ef,GAA+B9Q,a,m8CCCxB,IAAM+Q,GAAb,a,sRAAA,U,MAAA,QAOI,aAAc,a,4FAAA,eACV,gBADU,oHAEV,EAAKC,OAAS,GACd,EAAKtS,KAAO,IAAIuS,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IACzE,EAAKF,KAAKF,MAAqC,IAA7BkC,EAAaK,cAC/B,EAAKrC,KAAKD,OAAS,IACnB,EAAKC,KAAKoF,SAASjG,IAAuB,IAAlB,EAAKa,KAAKF,MAAa,GAC/C,EAAKL,SAAS,EAAKO,MAEnB,EAAK2G,IAAM,IAAIqJ,OAAK,gBAAgB,CAACE,SAAU,GAAIC,KAAM,EAAUqC,WAAY,OAAQpC,MAAO,SAC9F,EAAKzJ,IAAItG,OAAOlB,IAAI,EAAG,IACvB,EAAKwH,IAAIvB,SAASjG,IAAuB,IAAlB,EAAKa,KAAKF,MAAc,GAAI,IACnD,EAAKL,SAAS,EAAKkH,KACnB,EAAK8L,QAbK,EAPlB,O,EAAA,G,EAAA,uBAsBI,SAAgBC,GACZtV,KAAKuJ,IAAIiK,KAAO,SAAWyB,EAAQM,QAAQvU,KAAKC,MAAMD,KAAKE,SAAS+T,EAAQM,QAAQ/Y,SACpF,IAAMgZ,EAAQF,EAAU9Y,OACxBwD,KAAK4C,KAAKD,OAAiB,GAAR6S,EAAa,GAChCxV,KAAKgS,QAAU,IACfhS,KAAKiS,OAAS,GAEd,IAAK,IAAIzU,EAAI,EAAGA,EAAIgY,EAAOhY,IAAK,CAE5B,IADA,IAAIiY,EAAKzV,KAAKgS,OACL1V,EAAI,EAAGA,EAAIgZ,EAAU9X,GAAGhB,OAAQF,IAAK,CAC1C,IAAMoZ,EAAI,IAAIzH,GAAYwH,EAAGzV,KAAKiS,OAAOqD,EAAU9X,GAAGlB,IAAG,GACzD0D,KAAK2V,SAASD,GACdD,GAAM,GAEVzV,KAAKiS,QAAQ,MApCzB,sBAuCI,SAAgByD,GACZ1V,KAAKkV,OAAOpY,KAAK4Y,GACjB1V,KAAKqC,SAASqT,GACdA,EAAEpS,SAAU,IA1CpB,kBA4CI,WACItD,KAAKkV,OAAOvN,SAAQ,SAAC+N,GACjBA,EAAEpS,SAAU,OA9CxB,mBAiDI,WAAe,WACXtD,KAAKkV,OAAOvN,SAAQ,SAAC+N,GACjB,EAAKxT,YAAYwT,MAErB1V,KAAKkV,OAAS,Q,gFArDtB,GAA6BhR,a,60CAAhB+Q,G,UAMgB,CAAC,MAAO,MAAO,OAAQ,WAAY,aAAc,oBAAqB,UAAW,gBAAiB,OAAQ,MAAO,MAAO,QAAS,OAAQ,UAAW,SAAU,cCRpL,IAAMW,GAAb,a,sRAAA,U,MAAA,QAEI,aAAc,M,mGAAA,SACV,e,EADU,M,OAAA,G,EAAA,S,wFAEV,IAAMhT,EAAO,IAAIC,SAAOE,UAAQD,KAAK,sBAF3B,OAGVF,EAAKK,OAAOlB,IAAI,GAAK,IACrB,EAAKM,SAASO,GAEd,EAAK2G,IAAM,IAAIqJ,OAAK,GAAI,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,EAAUC,MAAO,SAAUoC,WAAY,SACxI,EAAK7L,IAAItG,OAAOlB,IAAI,GAAK,IACzB,EAAKM,SAAS,EAAKkH,KART,EAFlB,O,EAAA,G,EAAA,mBAYI,SAAkBtL,GAEd+B,KAAKuJ,IAAIiK,KAAOvV,O,gFAdxB,GAAsCiG,a,6jDCK/B,IAAe2R,GAAtB,a,sRAAA,U,QAAA,UAMI,WAAYC,GAAgB,O,4FAAA,eACxB,gBADwB,QALC,IAAIC,aAKL,gHAExB,EAAKnT,KAAOC,SAAOC,KAAKC,UAAQC,OAChC,EAAKJ,KAAKK,OAAOlB,IAAI,GAAI,IACzB,EAAKa,KAAKF,MAAQkC,EAAaK,cAC/B,EAAKrC,KAAKD,OAASiC,EAAaM,eAChC,EAAK7C,SAAS,EAAKO,MACnB,EAAKoT,cAAgB,EAAKC,WAAWH,GACrC,EAAKI,QAAU,GACf,IAAK,IAAI5Z,EAAI,EAAGA,EAAI,EAAK0Z,cAAcxZ,OAAQF,IAAK,CAChD,IAAM6Z,EAAO,IAAIP,GACjBO,EAAK7S,SAAU,EACf,EAAKjB,SAAS8T,GACd,EAAKD,QAAQpZ,KAAKqZ,GAbE,SANhC,O,EAAA,G,EAAA,qB,EAAA,yBAsBI,WAAmBC,GAAnB,iGAMI,IALApW,KAAKoW,SAAWA,EAChBpW,KAAKsD,SAAU,EACftD,KAAK4C,KAAKO,MAAQ,EACZkT,EAAoB,GACtBpY,EAAI,EACC3B,EAAI,EAAGA,EAAI0D,KAAKgW,cAAcxZ,OAAQF,IAC3C2B,IAC8B,MAA1B+B,KAAKgW,cAAc1Z,KACnB+Z,EAAQvZ,KAAKmB,GACbA,EAAI,GAVhB,OAa2B,IAAnBoY,EAAQ7Z,OACR6Z,EAAQvZ,KAAKkD,KAAKgW,cAAcxZ,QAEhC6Z,EAAQvZ,KAAKmB,GAhBrB,kBAkBW,IAAIgM,SAAc,SAACC,GAGtBpK,EAAOuB,KAAK,cACZmC,IAAKG,GAAG,EAAKf,KAAM,CAACO,MAAO,GAAKU,SAAU,IAW1C,IAVA,IAAIyS,EAAU,EACV3H,GAAS,GACT4H,EAAgBF,EAAQC,GACxBE,EAAS,IAAMD,EAAgB,GAC/BE,EARU,IAQEF,EACZtN,EAAO,IAAFwN,EACLC,EAAKD,GAAKF,EAAgB,GAC1BrN,GAAK,IACHyN,EAA4B,GAC5BC,EAAK,EAAKZ,cAAcxZ,OACrBF,EAAI,EAAGA,EAAIsa,EAAIta,IAAK,CACzB,IAAM6Z,EAAO,EAAKD,QAAQW,MACtBV,IACAQ,EAAM7Z,KAAKqZ,GACXA,EAAK7S,SAAU,EACf6S,EAAKW,OAAS,EAAKd,cAAc1Z,GACjC6Z,EAAKnO,SAASjG,KAAK,IAAK,KACxBoU,EAAKpR,MAAMhD,IAAI,GAAK,IACpBoU,EAAKxH,MAAQA,EAAQ,GACrBnL,IAAKG,GAAGwS,EAAM,CAACxH,QAAO1F,IAAGC,IAAG8G,MAAS,GAAF1T,EAAOuH,SAAU,KACpDL,IAAKG,GAAGwS,EAAKpR,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAS,GAAF1T,EAAOuH,SAAU,KAC3B,MAA1B,EAAKmS,cAAc1Z,IACnBga,IACA3H,GAAS,GAET6H,EAAS,KADTD,EAAgBF,EAAQC,IACO,GAE/BrN,EAAO,KADPwN,EA9BE,IA8BUF,GAEZrN,GA/BE,IAgCFwN,EAAKD,GAAKF,EAAgB,KAE1B5H,GAAS6H,EACTvN,GAAKyN,IAIjBlT,IAAKG,GAAG,EAAKf,KAAM,CAACO,MAAO,EAAG6M,MAAO,IAAKnM,SAAU,KACpDL,IAAK2N,YAAY,EAAkC,IAA7B,EAAK6E,cAAcxZ,OAAO,IAAQ,WACpD,EAAK4T,QAAQuG,GAAO9L,MAAK,WACrBX,cA9DhB,+CAtBJ,E,gLAAA,iEA0FI,WACIlK,KAAKoW,cAAW/Q,EAChB7B,IAAKC,aAAazD,KAAK4C,W,gFA5F/B,GAAwCsB,a,62DCDjC,IAAM6S,GAAb,a,sRAAA,U,MAAA,wKAEyC,IAFzC,S,EAAA,E,EAAA,6BA6CI,SAA8BjB,GAC1B,GAAc,IAAVA,EAAa,MAAO,GACnBiB,EAAiBC,WAoBlBD,EAAiBC,SAAW,IAAIpV,IAnBlB,CACV,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,aACA,cACA,aACA,qBACA,gBACA,mBACA,uBACA,iBACA,cAGE+F,SAAQ,SAAC5I,GACX,IAAMzC,EAAKyC,EAAEvC,QAAU,GAAM,EAAKuC,EAAEvC,QAAU,GAAK,EAAI,EACnDya,EAAgB,GAChBF,EAAiBC,SAAStY,IAAIpC,KAC9B2a,EAAMF,EAAiBC,SAAStY,IAAIpC,IAExC2a,EAAIna,KAAKiC,GACTgY,EAAiBC,SAASjV,IAAIzF,EAAG2a,MAErC3V,QAAQqJ,IAAIoM,EAAiBC,WAEjC,IAAMC,EAAMF,EAAiBC,SAAStY,IAAIoX,GAC1C,OAAOmB,EAAIjW,KAAKC,MAAMD,KAAKE,SAAS+V,EAAIza,SAAS0a,MAAM,Q,EAhF/D,wBAGI,WACI,GAAIlX,KAAKmX,OAAO3a,OAAS,EAAG,CAExB,IADA,IAAMya,EAAmB,GAChB3a,EAAI,EAAGA,EAAI0D,KAAKmX,OAAO3a,OAAQF,IAAK,CACzC,IAAM8a,EAAQpX,KAAKmX,OAAO7a,GAC1B2a,EAAIna,KAAK,IAAIiZ,YAAUqB,EAAM,GAAK,EAAGA,EAAM,GAAK,EAAG,EAAG,IAG1D,OADApX,KAAKmX,OAAS,GACPF,KAXnB,mBAeI,WACIjX,KAAKmX,OAAS,GACd,8CAjBR,wBAmBI,SAAqBrB,GACjB,OAAOiB,EAAiBM,eAAevB,KApB/C,qBAsBI,SAAkBa,GAA0C,WAExD,OADA3W,KAAKmX,OAAS,GACP,IAAIlN,SAAc,SAACC,GACtB,GAAI,EAAKkM,SAAU,CACf,IADe,eACN9Z,GACL,IAAMgb,EAAe,EAAKlB,WAC1B,IAAKkB,EACD,iBAEA9T,IAAKG,GAAGgT,EAAMra,GAAGyI,MAAO,CAACkE,EAAE,EAAGC,EAAE,EAAGrF,SAAU,KAC7CL,IAAKG,GAAGgT,EAAMra,GAAI,CAAC2M,EhBGjB,GgBHoBqO,EAAa,GAAiBpO,EhBGlD,GgBHqDoO,EAAa,GAAiBzT,SAAU,GAAKI,WAAY,WAC5G,EAAKkT,OAAOra,KAAKwa,OAPpBhb,EAAI,EAAGA,EAAIqa,EAAMna,OAAQF,IAAK,EAA9BA,GAWTkH,IAAK2N,YAAY,KAAM,WACnBjH,YAGJA,Y,gFAzChB,GAAsC2L,I,s8CAAzBkB,G,mBCHN,IAAMQ,GAAb,a,sRAAA,U,MAAA,QAGI,aAAc,O,4FAAA,eACV,gBADU,kDAEV,IAAM3U,EAAOC,SAAOC,KAAKC,UAAQD,KAAK,oBAF5B,OAGV,EAAKT,SAASO,GACd,EAAK4U,YAAc,EACnB,EAAKC,SAAW,IAAI7E,OAAK,EAAK8E,eAAe,GAAI,CAAC7E,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,SAAUC,MAAO,SAAU2E,cAAe,EAAGvC,WAAY,SACnL,EAAKqC,SAASxU,OAAOlB,IAAI,GAAK,IAC9B,EAAK0V,SAASzP,SAASjG,IAAe,GAAXa,EAAKF,MAAuB,GAAZE,EAAKD,QAChD,EAAKN,SAAS,EAAKoV,UART,EAHlB,O,EAAA,G,EAAA,kBAaI,SAAiB7Z,GAAW,WAClB6B,EAAI,CAAC6J,MAAOtJ,KAAKwX,aACvBxX,KAAKyX,SAASjE,KAAOxT,KAAK0X,eAAe1X,KAAKwX,aAC9ChU,IAAKG,GAAGlE,EAAG,CAAC6J,MAAO1L,EAAGiG,SAAU,GAAKC,KAAMC,IAAOC,SAAU8L,SAAU,WAClE,EAAK2H,SAASjE,KAAO,EAAKkE,eAAe1W,KAAKC,MAAMxB,EAAE6J,WAE1DtJ,KAAKwX,YAAc5Z,IAnB3B,4BAqBI,SAAuBA,GAInB,IAHA,IACImB,EAAInB,EAAEwD,WACJwW,EAFS,EAEO7Y,EAAEvC,OACfF,EAAI,EAAGA,EAAIsb,EAAMtb,IACtByC,EAAI,IAAMA,EAEd,OAAOA,O,gFA5Bf,GAAgCmF,a,q0CCDzB,IAAM2T,GAAb,a,sRAAA,U,MAAA,QACI,aAAc,O,4FAAA,qBACJ,mBAAmB,oBAFjC,O,EAAA,E,qFAAA,CAAgC7L,I,m8CCIzB,IAAM8L,GAAb,a,sRAAA,U,MAAA,QAGI,aAAc,a,4FAAA,eACV,cAAM,IADI,wCAEV,EAAKC,MAAQlV,SAAOC,KAAKC,UAAQD,KAAK,kBACtC,EAAKiV,MAAMpV,OAAS,IACpB,EAAKoV,MAAMrU,SAAW1C,KAAK4C,GAAK,EAChC,EAAKmU,MAAM5U,MAAQ,EACnB,EAAK4U,MAAM9U,OAAOlB,IAAI,GAAI,IAC1B,EAAKM,SAAS,EAAK0V,OACnB,EAAKA,MAAMzU,SAAU,EARX,EAHlB,O,EAAA,G,EAAA,wBAaI,WACI,GAAItD,KAAKgY,KACL,MAAO,CAAChY,KAAKgY,QAfzB,wBAmBI,WACI,MAAO,CAAC,IAAK,OApBrB,qBAsBI,SAAkBrB,GAA0C,WACxD,OAAO,IAAI1M,SAAc,SAACC,GACtB,QAAsB7E,IAAlB,EAAK+Q,UAA2C,IAAjBO,EAAMna,OAAc,CACnD,IAAMyb,EAAK,EAAK7B,WAChB5S,IAAKG,GAAGgT,EAAM,GAAI,CAAC1N,GAAI,IAAK0F,MAAO,EAAGzF,EnBS5B,GmBT+B+O,EAAiBpU,SAAU,KACpEL,IAAKG,GAAGgT,EAAM,GAAI,CAAC1N,EAAG,IAAK0F,MAAO,EAAGzF,EnBQ3B,GmBR8B+O,EAAiBpU,SAAU,KACnEL,IAAK2N,YAAY,IAAK,WAClB,EAAK4G,MAAMzU,SAAU,EACrB,EAAKyU,MAAM7O,EnBKL,GmBLS+O,EACf,EAAKD,KAAO,IAAIjC,aAAW,EAAGkC,EAAG,GAAK,GAAI,GAC1CzU,IAAKG,GAAG,EAAKoU,MAAO,CAAC5U,MAAO,EAAGU,SAAU,KACzCL,IAAK2N,YAAY,IAAK,WAClB,EAAK6G,UAAO3S,EACZ7B,IAAKG,GAAGgT,EAAM,GAAI,CAACxT,MAAO,EAAGU,SAAU,KACvCL,IAAKG,GAAGgT,EAAM,GAAI,CAACxT,MAAO,EAAGU,SAAU,KACvCL,IAAKG,GAAG,EAAKoU,MAAO,CAAC5U,MAAO,EAAGU,SAAU,KACzCL,IAAK2N,YAAY,IAAK,WAClBjH,kBAKZA,Y,gFA5ChB,GAAuC2L,I,o6CCHhC,IAAeqC,GAAtB,a,sRAAA,U,MAAA,sE,EAAA,G,EAAA,yBACI,WACI,OAAO,O,gFAFf,GAA2CzG,I,q0CCIpC,IAAM0G,GAAb,a,sRAAA,U,MAAA,QACI,WAAY7K,GAAuB,a,4FAAA,UAC/B,cAAMA,EAAI,GAAIA,EAAI,GAAI,IAAK,IAAK,IAC3BnH,KAAKpB,MAAMhD,IAAI,EAAE,GACtB,EAAKsJ,KAAO4C,GAAYC,qBAHO,EADvC,O,EAAA,G,EAAA,yBAMI,WACI,IAAM/H,EAAO,IAAItD,SAAOE,UAAQD,KAAK,mBAErC,OADAqD,EAAKlD,OAAOlB,IAAI,IACToE,IATf,yBAWI,WACI,IAAMoH,EAAQ,IAAIsE,MAAI,CAACnP,MAAO1C,KAAKmG,KAAKzD,MrBsBtB,GqBtBwCC,OAAQ3C,KAAKmG,KAAKxD,OrBsB1D,KqBlBlB,OADC4K,EAAcvR,MAAO,EACfuR,O,gFAhBf,GAAoC2K,I,m8CCG7B,ICFKE,GDECC,GAAb,a,sRAAA,U,MAAA,QAKI,WAAY/K,EAAuBgL,GAAe,a,4FAAA,eAC9C,cAAMhL,EAAI,GAAIA,EAAI,GAAI,IAAK,IAAK,IADc,UAJxB,GAIwB,6EAE9C,EAAKjC,KAAO4C,GAAYE,qBACxB,EAAKmK,MAAQA,EACb,EAAK/O,IAAM,IAAIqJ,OAAK,EAAK0F,MAAMlX,WAAY,CAACyR,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,EAAUC,MAAO,WACrI,EAAKzJ,IAAItG,OAAOlB,IAAI,GAAI,IACxB,EAAKwH,IAAIL,EAAI,GACb,EAAK/C,KAAK9D,SAAS,EAAKkH,KACxB,EAAKpD,KAAKpB,MAAMhD,IAAI,EAAE,GAEtB,EAAKkO,UAAYC,GAAeC,SAChC,EAAKF,UAAU3M,SAAU,EACzB,EAAKjB,SAAS,EAAK4N,WAZ2B,EALtD,O,EAAA,G,EAAA,6BAmBI,WAAwB,WACpB,IAAIjQ,KAAKuY,OAAT,CACAvY,KAAKsY,QACL,IAAME,EAASxY,KAAKsY,OAAS,EAC7BtY,KAAKuY,QAAS,EACd,IAAM3a,EAAIoC,KAAKmG,KAAKpB,MAAMkE,EAC1BzF,IAAKG,GAAG3D,KAAKmG,KAAKpB,MAAO,CAACkE,EAAG,IAAMC,EAAG,IAAMrF,SAAU,GAAKiM,SAAU,WAAK,QACrE,EAAKvC,MAAc7K,MAAS,EAAK6K,MAAc5K,OAAS,IAAM,EAAKwD,KAAKpB,MAAMkE,EtBKjE,GsBJd,EAAKsE,MAAMiE,uBACX,YAAKvL,YAAL,SAAWuL,uBACX,YAAKvL,YAAL,SAAWkJ,wBACZlL,WAAY,WACX,GAAIuU,EACA,EAAK1K,cACL,EAAKmC,UAAU3M,SAAU,EACzB,EAAK2M,UAAUG,UAAUvF,MAAK,WAC1BqF,GAAeG,QAAQ,EAAKJ,WAC5B,EAAKZ,eAEN,CACH,EAAK9F,IAAIiK,KAAO,EAAK8E,MAAMlX,WAC3B,IAAMqX,EAAmB,EAAdzX,KAAKE,SAAa,IACvBwX,EAAoB,GAAd1X,KAAKE,SACb,EAAK+E,OAAM,EAAKA,KAAK+B,SAAW,CAACyQ,EAAIC,IACzClV,IAAKG,GAAG,EAAKwC,KAAKpB,MAAO,CAACkE,EAAGrL,EAAGsL,EAAGtL,EAAGiG,SAAU,GAAKiM,SAAU,WAAK,QAC/D,EAAKvC,MAAc7K,MAAS,EAAK6K,MAAc5K,OAAS,IAAM,EAAKwD,KAAKpB,MAAMkE,EtBbzE,GsBcN,EAAKsE,MAAMiE,uBACX,YAAKvL,YAAL,SAAWuL,uBACX,YAAKvL,YAAL,SAAWkJ,wBACZlL,WAAY,WACX,EAAKsU,QAAS,YAjDlC,wBAuDI,WACI,IAAMpS,EAAO,IAAItD,SAAOE,UAAQD,KAAK,mBAErC,OADAqD,EAAKlD,OAAOlB,IAAI,IACToE,IA1Df,yBA4DI,WACI,IAAMoH,EAAQ,IAAIsE,MAAI,CAACnP,MAAO1C,KAAKmG,KAAKzD,MtB9BtB,GsB8BwCC,OAAQ3C,KAAKmG,KAAKxD,OtB9B1D,KsBkClB,OADC4K,EAAcvR,MAAO,EACfuR,O,gFAjEf,GAAoC2K,I,y5ECFxBE,K,cAAAA,E,gBAAAA,E,cAAAA,E,kBAAAA,E,oBAAAA,E,kBAAAA,E,oBAAAA,E,sBAAAA,E,yBAAAA,E,cAAAA,E,kBAAAA,E,2BAAAA,Q,KAcL,IAAMO,GAAb,a,sRAAA,U,MAAA,QAOI,aAAc,a,4FAAA,eACV,gBADU,2JAEV,EAAKC,cAAgB,IAAIhX,IACzB,EAAKiX,QAAU,IAAIjX,IACnB,EAAKiX,QAAQ9W,IAAIqW,GAAUU,MAAO,2CAClC,EAAKD,QAAQ9W,IAAIqW,GAAUW,OAAQ,iEACnC,EAAKF,QAAQ9W,IAAIqW,GAAUY,MAAO,oCAClC,EAAKH,QAAQ9W,IAAIqW,GAAUa,QAAS,mCACpC,EAAKJ,QAAQ9W,IAAIqW,GAAUc,SAAU,mCACrC,EAAKL,QAAQ9W,IAAIqW,GAAUe,QAAS,2BACpC,EAAKN,QAAQ9W,IAAIqW,GAAUgB,SAAU,4BACrC,EAAKP,QAAQ9W,IAAIqW,GAAUiB,UAAW,qBACtC,EAAKR,QAAQ9W,IAAIqW,GAAUkB,eAAgB,+BAC3C,EAAKT,QAAQ9W,IAAIqW,GAAUmB,MAAO,0DAClC,EAAKV,QAAQ9W,IAAIqW,GAAUoB,QAAS,yCACpC,EAAKX,QAAQ9W,IAAIqW,GAAUqB,YAAa,uCAExC,EAAK7W,KAAOC,SAAOC,KAAKC,UAAQC,OAChC,EAAKJ,KAAKQ,aAAc,EACxB,EAAKR,KAAKF,MAAQkC,EAAaK,cAC/B,EAAKrC,KAAKD,OAASiC,EAAaM,eAChC,EAAK7C,SAAS,EAAKO,MACnB,EAAKA,KAAKoF,SAASjG,IAAqB,IAAhB,EAAKa,KAAKF,MAA6B,IAAjB,EAAKE,KAAKD,QACxD,EAAKC,KAAKM,KAAO,EACjB,EAAKN,KAAKO,MAAQ,GAElB,EAAKuW,SAAW,IAAIvE,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC7E,EAAKT,SAAS,EAAKqX,UAEnB,EAAKnQ,IAAM,IAAIqJ,OAAK,GAAI,CAACE,SAAU,GAAIsC,WAAY,OAAQrC,KAAM,SAAU4G,UAAU,EAAMC,cAAe,MAC1G,EAAKvX,SAAS,EAAKkH,KAEnB,EAAKjG,SAAU,EAhCL,EAPlB,O,EAAA,G,EAAA,2BAyCI,SAAoBvE,EAAcZ,GAAe,WAC7C6B,KAAK4Y,cAAc7W,IAAIhD,EAAGZ,GAC1B+M,EAAenM,EAAEqC,WAAW,KAAKyJ,MAAK,SAACjN,GACzB,MAANA,GACA,EAAKgb,cAAL,OAA0B7Z,QA7C1C,oBAkDI,WAAgB,Q,ioBAAA,CACQiB,KAAK4Y,eADb,IACZ,2BAAwC,qBAA5B7L,EAA4B,KAC9B1P,GAASc,EADqB,QAEpC,GAAId,EAAOmM,QAAS,CAChBxJ,KAAKsL,KAAKyB,EAAG1P,EAAOrB,MACpBgE,KAAK4Y,cAAL,OAA0B7L,GAC1B/B,EAAe+B,EAAE3L,WAAY,KAC7B,QAPI,iCAlDpB,oBA6DI,SAAciK,GACV,YAAwChG,IAAjCrF,KAAK4Y,cAAcla,IAAI2M,KA9DtC,kBAgEI,SAAaA,EAAiBrP,GAAY,WACtCgE,KAAK6Z,WAAY,IAAIlG,MAAOC,UAC5B,IAAMJ,EAAOxT,KAAK6Y,QAAQna,IAAI2M,GAC9B,GAAKmI,EAAL,CACAxT,KAAKuJ,IAAIiK,KAAOA,EAChBxT,KAAK0Z,SAAS3U,MAAMhD,IAAI,EAAE,GAC1B/B,KAAK0Z,SAASI,MAAM/X,IAAI/B,KAAKuJ,IAAI7G,MAAQ,GAAI1C,KAAKuJ,IAAI5G,OAAS,IAC/D3C,KAAK0Z,SAAShX,MAAQ1C,KAAKuJ,IAAI7G,MAAQ,GACvC1C,KAAK0Z,SAAS/W,OAAS3C,KAAKuJ,IAAI5G,OAAS,GACzC3C,KAAK0Z,SAAS3U,MAAMhD,IAAI,EAAE,GAC1B,IAAMnE,EAAI,CAACqL,EAAG,EAAGC,EAAG,GACdoE,EAAMtR,EAAKsR,IACXvI,EAAQ/I,EAAK+I,MACnBnH,EAAEqL,GAAKlE,EAAMkE,EACbrL,EAAEsL,GAAKnE,EAAMmE,EACblJ,KAAK0Z,SAAS1R,SAAS+R,SAASzM,GAChCtN,KAAKuJ,IAAIvB,SAAS+R,SAASzM,GACX,IAAZvI,EAAMkE,EACNjJ,KAAKuJ,IAAIN,GAAK,GAAKjJ,KAAKuJ,IAAI7G,MAE5B1C,KAAKuJ,IAAIN,GAAK,GAEF,IAAZlE,EAAMmE,EACNlJ,KAAKuJ,IAAIL,GAAK,GAAKlJ,KAAKuJ,IAAI5G,OAE5B3C,KAAKuJ,IAAIL,GAAK,GAElBlJ,KAAKuJ,IAAIxE,MAAMhD,IAAI,EAAE,GACrB/B,KAAK4C,KAAKO,MAAQ,EAElB,IAMM6W,EAAapc,EAAEqL,EAJPgR,GAKRC,EAAatc,EAAEsL,EALP+Q,GAOdna,EAAOuB,KAAK,eACZ,IAAM8Y,EAAWxa,OAAOya,aAAY,WAChC,EAAKxX,KAAKO,OANIkX,IAOd,EAAKX,SAAS3U,MAAMkE,GAAK+Q,EACzB,EAAKN,SAAS3U,MAAMmE,GAAKgR,EACzB,EAAK3Q,IAAIxE,MAAMkE,GANE,EANPgR,GAaV,EAAK1Q,IAAIxE,MAAMmE,GAPE,EANP+Q,GAcN,EAAKrX,KAAKO,OAbC,IAcXxD,OAAO2a,cAAcH,KAhBR,IAmBrBna,KAAKsD,SAAU,EACfiX,IAAU,GAAM,GAEhB5a,OAAO2C,YAAW,WACdiY,IAAU,GAAO,GACjB/W,IAAKgX,eAAeC,QACpB7V,EAAaE,QAAS,EACtB,EAAKlC,KAAK0J,GAAG,aAAa,SAACS,GACvBA,EAAE2N,kBACF3N,EAAE4N,SAAU,EACZ,EAAKvS,YAEV,QA9HX,kBAiII,WAAc,WACVxD,EAAaE,QAAS,EACtBtB,IAAKgX,eAAeI,SACpBpX,IAAKG,GAAG3D,KAAM,CAACmD,MAAO,EAAGU,SAAU,GAAKI,WAAY,WAChD,EAAKX,SAAU,EACf,EAAKH,MAAQ,KAEjBnD,KAAK4C,KAAKoK,IAAI,aACdhN,KAAKyS,KAAK,QAAQ,IAAIkB,MAAOC,UAAY5T,KAAK6Z,gB,gFAzItD,GAA8B3V,a,68CCjBvB,IAAM2W,GAAb,a,sRAAA,U,MAAA,QAMI,aAAc,O,4FAAA,eACV,gBADU,+FAEV,IAAMjY,EAAO,IAAIuS,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC1EF,EAAKM,KAAO,EACZN,EAAKF,MAAQ,IACbE,EAAKD,OAAS,IACdC,EAAKkX,MAAM/X,IAAI,IAAS,KACxB,EAAKM,SAASO,GACdA,EAAKsG,GAAK,GAEV,IAAMnK,EAAI,IAAI6T,OAAK,kBAAkB,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,SAAUC,MAAO,SAAUoC,WAAY,SACrJrW,EAAEkE,OAAOlB,IAAI,GAAI,IACjBhD,EAAEiJ,SAASjG,IAAI,GAAI,KACnB,EAAKM,SAAStD,GAEd,IAAM+b,EAAQ,IAAI3F,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC3EgY,EAAMhB,MAAM/X,IAAI,GAAI,IACpB+Y,EAAMpY,MAAQ,IACdoY,EAAMnY,OAAS,IACf,EAAKN,SAASyY,GAEd,IAAMC,EAAQ,IAAI5F,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC3EiY,EAAMjB,MAAM/X,IAAI,GAAI,IACpBgZ,EAAMrY,MAAQ,IACdqY,EAAMpY,OAAS,IACf,EAAKN,SAAS0Y,GAEdD,EAAM9S,SAASjG,KAAK,GAAI,GACxBgZ,EAAM/S,SAASjG,IAAI,GAAI,GAEvB,IAAMiZ,EAAQ,IAAI9W,YACZ+W,EAAQ,IAAI/W,YAClB,EAAK7B,SAAS2Y,GACd,EAAK3Y,SAAS4Y,GACdD,EAAMhT,SAASiB,GAAK,GACpBgS,EAAMjT,SAASiB,EAAI,GAEnB,IAAMiS,EAAQrY,SAAOC,KAAKC,UAAQC,OAClCkY,EAAMjY,OAAOlB,IAAI,EAAG,IACpBmZ,EAAMxY,MAAQ,IACdwY,EAAMvY,OAAS,IACf,EAAKN,SAAS6Y,GAEd,IAAMC,EAAQtY,SAAOC,KAAKC,UAAQC,OA3CxB,OA4CVmY,EAAMlY,OAAOlB,IAAI,EAAG,IACpBoZ,EAAMzY,MAAQ,IACdyY,EAAMxY,OAAS,IACf,EAAKN,SAAS8Y,GAEdD,EAAMlT,SAASiB,GAAK,IACpBkS,EAAMnT,SAASiB,EAAI,EACnB+R,EAAM/G,KAAOiH,EACbD,EAAMhH,KAAOkH,EAEb,EAAKC,OAASvY,SAAOC,KAAK+X,EAASQ,eACnC,EAAKD,OAAOnY,OAAOlB,IAAI,GAAK,IAC5B,EAAKqZ,OAAOrW,MAAMhD,IAAI,GAAK,IAC3BiZ,EAAM3Y,SAAS,EAAK+Y,QAEpB,EAAKE,OAASzY,SAAOC,KAAK+X,EAASQ,eACnC,EAAKC,OAAOrY,OAAOlB,IAAI,GAAK,IAC5B,EAAKuZ,OAAOvW,MAAMhD,IAAI,GAAK,IAC3BkZ,EAAM5Y,SAAS,EAAKiZ,QAEpB,EAAKC,OAAS1Y,SAAOC,KAAK+X,EAASQ,eACnC,EAAKE,OAAOtY,OAAOlB,IAAI,GAAK,IAC5B,EAAKwZ,OAAOxW,MAAMhD,IAAI,GAAK,IAC3BiZ,EAAM3Y,SAAS,EAAKkZ,QACpB,EAAKA,OAAOrS,EAAI,IAEhB,EAAKsS,OAAS3Y,SAAOC,KAAK+X,EAASQ,eACnC,EAAKG,OAAOvY,OAAOlB,IAAI,GAAK,IAC5B,EAAKyZ,OAAOzW,MAAMhD,IAAI,GAAK,IAC3BkZ,EAAM5Y,SAAS,EAAKmZ,QACpB,EAAKA,OAAOtS,EAAI,IA1EN,EANlB,O,EAAA,E,EAAA,8BAiHI,WACIlJ,KAAKyb,YAAc,IAAI7Z,IACvB5B,KAAKyb,YAAY1Z,IAAI2Z,GAAUC,SAAU5Y,UAAQD,KAAK,uBACtD9C,KAAKyb,YAAY1Z,IAAI2Z,GAAUE,KAAM7Y,UAAQD,KAAK,qBAClD9C,KAAKyb,YAAY1Z,IAAI2Z,GAAUG,OAAQ9Y,UAAQD,KAAK,yBArH5D,wBAuHI,SAAyBmO,GACrB,IAAMlS,EAAIiB,KAAKyb,YAAY/c,IAAIuS,GAC/B,OAAIlS,GAGGgE,UAAQ+Y,QA5HvB,yBA8HI,WACI,IAAMC,EAAOC,MAAMlZ,KAAK9C,KAAKyb,YAAYM,QACnC9K,EAAI8K,EAAK/a,KAAKC,MAAMD,KAAKE,SAAW6a,EAAKvf,SAC/C,OAAOwD,KAAKyP,WAAWwB,O,EAjI/B,oBAkFI,SAAagL,GAAsB,WAC/Bnc,EAAOuB,KAAK,iBACZmC,IAAKG,GAAG,CAACuN,EAAE,GAAI,CAACA,EAAG,EAAGrN,SAAU,EAAGiM,SAAU,WACzC,GAAI,EAAKsL,OAAOlS,GAAK,IAAK,CACtB,EAAKkS,OAAOtO,QAAU+N,EAASQ,cAC/B,EAAKC,OAAOxO,QAAU+N,EAASQ,cAC/B,IAAIa,EAAO,EAAKd,OAChB,EAAKA,OAAS,EAAKG,OACnB,EAAKA,OAASW,EAEdA,EAAO,EAAKZ,OACZ,EAAKA,OAAS,EAAKE,OACnB,EAAKA,OAASU,EAEd,EAAKd,OAAOlS,EAAI,EAChB,EAAKoS,OAAOpS,EAAI,EAEpB,EAAKkS,OAAOlS,GAAK,GACjB,EAAKoS,OAAOpS,GAAK,GACjB,EAAKqS,OAAOrS,EAAI,EAAKkS,OAAOlS,EAAI,IAChC,EAAKsS,OAAOtS,EAAI,EAAKoS,OAAOpS,EAAI,KACjCjF,WAAY,WACXnE,EAAO0B,KAAK,iBACZ,EAAK4Z,OAAOlS,EAAI,EAChB,EAAKoS,OAAOpS,EAAI,EAChB,EAAKsS,OAAOtS,EAAI,IAChB,EAAKqS,OAAOrS,EAAI,IAChB,EAAKkS,OAAOtO,QAAU+N,EAASpL,WAAWwM,EAAQ,IAClD,EAAKX,OAAOxO,QAAU+N,EAASpL,WAAWwM,EAAQ,Y,gFA9G9D,GAA8B/X,a,gkDAAjB2W,G,sBCMN,IAAMsB,GAAb,a,sRAAA,U,QAAA,UAWI,aAAc,O,4FAAA,eACV,gBADU,2RAsKiB,SAACC,GAC5B,EAAKC,QAAQC,OAAOF,EAAY,OArKhC,EAAKxZ,KAAOC,SAAOC,KAAKC,UAAQC,OAChC,EAAKJ,KAAKK,OAAOlB,IAAI,GAAK,IAC1B,EAAKa,KAAKF,MAAQkC,EAAaK,cAC/B,EAAKrC,KAAKD,OAASiC,EAAaM,eAChC,EAAKtC,KAAKM,KAAO,EACjB,EAAKN,KAAKO,MAAQ,EAClB,EAAKd,SAAS,EAAKO,MAEnB,IAAMwC,EAAY,IAAIlB,YACtB,EAAK7B,SAAS+C,GAEd,EAAKmX,MAAQ,IAAIrY,YACjB,EAAKqY,MAAMxX,MAAMhD,IAAI,EAAE,GACvB,EAAKM,SAAS,EAAKka,OAEnB,IAAMC,EAAY,IAAIrH,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC/E0Z,EAAU1C,MAAM/X,IAAI,IAAK,KACzBya,EAAU9Z,MAAQ,IAClB8Z,EAAU7Z,OAAS,IACnB,EAAK4Z,MAAMla,SAASma,GAEpB,EAAKC,MAAQ,IAAI7J,OAAK,aAAc,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,QAAUC,MAAO,SAAUoC,WAAY,SACpJ,EAAKqH,MAAMxZ,OAAOlB,IAAI,GAAK,IAC3B,EAAK0a,MAAMzU,SAASkB,GAAK,IACzB,EAAKqT,MAAMla,SAAS,EAAKoa,OAEzB,EAAKhF,SAAW,IAAI7E,OAAK,IAAK,CAACC,WAAY,uCAAwCC,SAAU,IAAKC,KAAM,EAAUC,MAAO,SAAU2E,cAAe,EAAGvC,WAAY,SACjK,EAAKqC,SAASxU,OAAOlB,IAAI,GAAK,IAC9B,EAAK0V,SAASvO,EAAI,GAClB,EAAKqT,MAAMla,SAAS,EAAKoV,UAEzB,EAAKiF,aAAe,IAAI9J,OAAK,gBAAiB,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,QAAUC,MAAO,WACxI,EAAK0J,aAAazZ,OAAOlB,IAAI,GAAK,IAClC,EAAKwa,MAAMla,SAAS,EAAKqa,cACzB,EAAKA,aAAapZ,SAAU,EAE5B,EAAKqZ,MAAQ,IAAIzY,YAEjB,IAAM0Y,EAAK,IAAI/Z,SAAOE,UAAQD,KAAK,aACnC8Z,EAAG3Z,OAAOlB,IAAI,GAAK,IACnB,EAAK4a,MAAMta,SAASua,GACpB,IAAMC,EAAK,IAAIha,SAAOE,UAAQD,KAAK,cACnC+Z,EAAG5Z,OAAOlB,IAAI,GAAK,IACnB,EAAK4a,MAAMta,SAASwa,GAEpB,EAAKF,MAAM5X,MAAMhD,IAAI,IAAK,KAC1B,EAAK4a,MAAM3U,SAASkB,GAAK,IACzB,EAAK7G,SAAS,EAAKsa,OAEnB,EAAKG,MAAQ,GAEb,IADA,IAAIrH,GAAM,IACDnZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMygB,EAAOla,SAAOC,KAAKC,UAAQD,KAAK,aACtCia,EAAK9Z,OAAOlB,IAAI,GAAK,IACrBgb,EAAK/U,SAASjG,IAAI0T,GAAK,KACvB,EAAK8G,MAAMla,SAAS0a,GACpB,EAAKD,MAAMhgB,KAAKigB,GAChBA,EAAKzZ,SAAU,EACfmS,GAAM,IAEV,EAAK8G,MAAMla,SAAS,EAAKya,MAAM,IAE/B,EAAKE,UAAY,IAAIna,SACrB,EAAKma,UAAU/Z,OAAOlB,IAAI,GAAK,IAC/B,EAAKib,UAAUjY,MAAMhD,IAAI,GAAK,IAC9B,EAAKib,UAAUhV,SAAS+R,SAAS,EAAK+C,MAAM,IAC5C,EAAKE,UAAU/T,GAAK,GACpB,EAAK+T,UAAU9T,GAAK,GACpB,EAAKqT,MAAMla,SAAS,EAAK2a,WACzB,EAAKA,UAAU1Z,SAAU,EAEzB,IAAM2Z,EAAQ,IAAIjR,GAAO,gBAAiB,iBAzEhC,OA0EViR,EAAM3Q,GAAG,aAAa,WAClB,EAAKlE,UAET6U,EAAMjV,SAASkB,EAAI,IACnB,EAAKqT,MAAMla,SAAS4a,GAEpB,EAAKZ,QAAU,IAAIa,KAAQ9X,EAAW,WAAYR,EAAaQ,WAhFrD,EAXlB,O,EAAA,G,EAAA,oB,EAAA,yBA6FI,WAAkB+X,EAAc7T,EAAe8T,EAAmBC,EAAsBC,EAAoBxH,EAAeyH,GAA3H,8GACIvd,KAAK0c,aAAapZ,SAAU,EAC5BtD,KAAK2c,MAAM3U,SAASkB,GAAK,IACzBlJ,KAAK2c,MAAMxZ,MAAQ,EACdga,IAAKC,EAAY,GACtB9b,QAAQqJ,IAAImL,EAAM1U,WAAYmc,EAAQH,GAEtCpd,KAAKyc,MAAMjJ,KAAQ2J,EAAO,aAAe,iBACnCK,EAAQD,IAAW7B,GAAU+B,KAAOF,EAAO,GAAK7B,GAAU+B,QAClD/B,GAAU+B,MAAQnU,EAAQ8T,GAAaC,EAAW,IATpE,kCAUkCnS,EAAe,cAAgB4K,EAAM1U,WAAY,KAVnF,WAUcsc,EAVd,OAWQpc,QAAQqJ,IAAI,KAAK+S,GACG,MAAhBA,EAZZ,wBAaY1d,KAAKgd,UAAU1Z,SAAU,EACzBtD,KAAKgd,UAAUjY,MAAMhD,IAAI,EAAG,GAC5B/B,KAAKgd,UAAUlQ,QAAU+N,GAASpL,WAAW+N,GAfzD,UAkBsCtS,EAAeyH,GAAcU,aAAamK,GAAQ,KAlBxF,eAkBkBlK,EAlBlB,OAmBkBxS,EAASyS,SAASD,GAnBpC,UAoBkBtI,EAAe2H,GAAcU,aAAamK,IAAS1c,EAAO,GAAGM,YApB/E,yBAqBkB4J,EAAe,cAAgB8K,EAAM1U,WAAY,KArBnE,QAwBI,IAAS9E,EAAI,EAAGA,EAAI0D,KAAK8c,MAAMtgB,OAAQF,KAC7BygB,EAAO/c,KAAK8c,MAAMxgB,IACnBgH,SAAU,EACfyZ,EAAKhY,MAAMhD,IAAI,EAAE,GAChBgb,EAAaY,QAAS,EAE3B3d,KAAKsd,SAAWA,EAChBtd,KAAKsD,SAAU,EACftD,KAAK4C,KAAKO,MAAQ,EAClBnD,KAAKuc,MAAMxX,MAAMhD,IAAI,EAAE,GACvBjC,EAAOuB,KAAK,eACZvB,EAAOuB,KAAK8b,EAAM,MAAQ,QAEpB5e,EAAI,CAACX,EAAG,GACdoC,KAAKyX,SAASjE,KAAO,IACf1D,EAAW,WACb,EAAK2H,SAASjE,KAAOxS,KAAK4c,MAAMrf,EAAEX,GAAGwD,WACrC,IAAK,IAAI9E,EAAI,EAAGA,EAAI+gB,EAAW7gB,OAAQF,IAAK,CACxC,IAAMygB,EAAO,EAAKD,MAAMxgB,GAExB,GAAIiC,EAAEX,GAAKyf,EAAW/gB,KAAQygB,EAAaY,OAAQ,CAC9CZ,EAAaY,QAAS,EACvB,IAAM/f,EAAW,IAANtB,EAAW,IAAM,EAC5BwD,EAAOuB,KAAK,kBACZmC,IAAKG,GAAGoZ,EAAKhY,MAAO,CAACkE,EAAGrL,EAAGsL,EAAGtL,EAAGiG,SAAU,GAAKC,KAAM+Z,IAAOC,UACzD,EAAKd,UAAU1Z,SAAiB,IAANhH,GAC1BkH,IAAKG,GAAG,EAAKqZ,UAAUjY,MAAO,CAACkE,EAAG,GAAKC,EAAG,GAAKrF,SAAU,GAAKC,KAAM+Z,IAAOC,aAK3Fta,IAAKG,GAAGpF,EAAG,CAACX,EAAG0L,EAAO0G,MAAO,EAAGnM,SAAU,EAAGka,QAAS,WAC9CZ,GAAKrd,EAAOuB,KAAK,kBACtByO,WAAU7L,WAAY,WACrBnE,EAAO0B,KAAK,iBACZjD,EAAEX,EAAI0L,EACF8T,EAAY,IACZ9T,GAAS8T,EACT,EAAKV,aAAapZ,SAAU,EAC5B,EAAKoZ,aAAa3X,MAAMhD,IAAI,EAAE,GAC9BjC,EAAOuB,KAAK,aACZmC,IAAKG,GAAG,EAAK+Y,aAAa3X,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKI,WAAY,WACrET,IAAKG,GAAGpF,EAAG,CAACX,EAAG0L,EAAOzF,SAAU,EAAGka,QAAS,WACxCje,EAAOuB,KAAK,kBACbyO,WAAU7L,WAAY,WACrBnE,EAAO0B,KAAK,2BAK5BgC,IAAKG,GAAG3D,KAAK4C,KAAM,CAACO,MAAO,GAAKU,SAAU,KAC1CL,IAAKG,GAAG3D,KAAKuc,MAAMxX,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,EAAGC,KAAM+Z,IAAOC,UAC7DX,IACA3Z,IAAKG,GAAG3D,KAAK2c,MAAO,CAACzT,GAAI,IAAK8G,MAAO,EAAGnM,SAAU,IAAKC,KAAM+Z,IAAOC,UACpEta,IAAK2N,YAAY,GAAG,WAChB,EAAKkL,QAAQ5J,MAAO,EACpBuL,SAAOC,OAAOzW,IAAI,EAAK0W,iBAhFnC,gDA7FJ,E,gLAAA,4EAoLI,WAAe,WACXpe,EAAO0B,KAAK,iBACZgC,IAAKG,GAAG3D,KAAK4C,KAAM,CAACO,MAAO,EAAGU,SAAU,KACxCL,IAAKG,GAAG3D,KAAK2c,MAAO,CAACxZ,MAAO,EAAGU,SAAU,KACzCL,IAAKG,GAAG3D,KAAKuc,MAAMxX,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,GAAKI,WAAY,WAC9D,EAAKoY,QAAQ5J,MAAO,EACpB,EAAK4J,QAAQ8B,UACbH,SAAOC,OAAOG,OAAO,EAAKF,aAC1B,EAAKlB,UAAU1Z,SAAU,EACzB,EAAKA,SAAU,EACf,EAAKga,mB,gFA9LjB,GAAmCpZ,a,qlFCJ5B,IAAMma,GAAb,a,sRAAA,U,QAAA,UAOI,aAAc,O,4FAAA,eACV,gBADU,uJAEV,EAAKzb,KAAOC,SAAOC,KAAKC,UAAQC,OAChC,EAAKJ,KAAKK,OAAOlB,IAAI,GAAK,IAC1B,EAAKa,KAAKF,MAAQkC,EAAaK,cAC/B,EAAKrC,KAAKD,OAASiC,EAAaM,eAChC,EAAKtC,KAAKO,MAAQ,EAClB,EAAKd,SAAS,EAAKO,MAEnB,EAAK0b,SAAW,IAAInJ,iBAAepS,UAAQD,KAAK,iBAAkB,GAAI,GAAI,GAAI,IAC9E,EAAKwb,SAAS5b,MAAQ,IACtB,EAAK4b,SAASnb,MAAQ,EACtB,EAAKd,SAAS,EAAKic,UAEnB,EAAKC,MAAQ,GACb,EAAKC,WAAa,GAClB,IAAK,IAAIliB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMyC,EAAI,EAAK0f,aACf,EAAKF,MAAMzhB,KAAKiC,GAlBV,OAqBV,EAAK2f,SAAW,IAAI7D,GACpB,EAAKxY,SAAS,EAAKqc,UAEnB,EAAKpb,SAAU,EAxBL,EAPlB,O,EAAA,G,EAAA,oB,EAAA,yBAiCI,WAAmBtH,EAAkBigB,GAArC,oHACW,IAAIhS,SAAc,SAACC,GACtBpK,EAAOuB,KAAK,eACZ,EAAKiC,SAAU,EACf,EAAKV,KAAKO,MAAQ,EAClB,EAAKmb,SAASnb,MAAQ,EACtB,EAAKub,SAAS1W,SAASkB,EAAI,IAC3B,IAAMyV,EAAe1C,IAAYP,GAAU+B,KACrCzN,EAAS2O,EAAgB,EAAI,IAEnCnb,IAAKG,GAAG,EAAKf,KAAM,CAACO,MAAO,GAAKU,SADd,KAElBL,IAAKG,GAAG,EAAK2a,SAAU,CAACnb,MAAO,EAAGU,SAFhB,KAMlB,IAHA,IAAM+a,EAAQ5iB,EAAKqC,KAAK6Y,MAAM,KAC1Be,GAAsB,GAAf2G,EAAMpiB,OAAe,EAAI,GAAK,IACnC+J,EAAM0R,EAbqB,WAcxB3b,GACL,IAAMma,EAAImI,EAAMtiB,GACZyC,OAAO,GAEPA,EADA,EAAKwf,MAAM/hB,OAAS,EAChB,EAAK+hB,MAAM1H,MAEX,EAAK4H,cAEXtb,MAAQ,EACVpE,EAAEuE,SAAU,EACZvE,EAAEyU,KAAOiD,EACT,EAAKpU,SAAStD,GACd,EAAKyf,WAAW1hB,KAAKiC,GAErBA,EAAEmK,EAAI+O,EACNlZ,EAAEkK,EAAI3M,EAAE,GAAM,IAAIyC,EAAE2D,MAAM,EAAM,IAAI3D,EAAE2D,MAAM,EAC5Cc,IAAKG,GAAG5E,EAAG,CAACkK,EAAG,EAAGpF,SAAU,GAAKC,KAAM+a,IAAKf,UAC5Cta,IAAKG,GAAG5E,EAAG,CAACoE,MAAO,EAAG6M,MAAOA,EAvBf,GAuBkCnM,SAAU,GAAKI,WAAY,WACvE,EAAKsa,MAAMzhB,KAAKiC,MAEpBkZ,GAAM,IApBD3b,EAAI,EAAGA,EAAIsiB,EAAMpiB,OAAQF,IAAK,EAA9BA,GAsBTkH,IAAKG,GAAG,EAAKf,KAAM,CAACO,MAAO,EAAG6M,MAAOA,EA5BnB,GA4BsCnM,SAAU,KAClEL,IAAKG,GAAG,EAAK2a,SAAU,CAACnb,MAAO,EAAG6M,MAAOA,EA7BvB,GA6B0CnM,SAAU,KAElE8a,IACA,EAAKD,SAASpb,SAAU,EACxB,EAAKob,SAASvb,MAAQ,EAEtBK,IAAKG,GAAG,EAAK+a,SAAU,CAACxV,EAAG+O,EAAK,IAAKjI,MAAO,GAAKnM,SAAU,GAAKC,KAAM+a,IAAKf,QAAS7Z,WAAY,WAC5F,EAAKya,SAAStc,MAAM6Z,MAExBzY,IAAKG,GAAG,EAAK+a,SAAU,CAACvb,MAAO,EAAG6M,MAAOA,EAtC3B,GAsC8CnM,SAAU,KACtEoU,GAAM,IAAM,EAAKyG,SAAS/b,OAAS,GAEvC,IAAMmc,EAAI9d,KAAK8P,IAAI,IAAKmH,EAAK1R,EAAM,KACnC,EAAK+X,SAASxE,MAAM/X,IAAI,IAAK+c,EAAI,GACjC,EAAKR,SAAS3b,OAASmc,EAEnB,EAAKR,SAASpV,EADdyV,EACkBpY,EAAM,GAAKuY,EAAI,GAEd,IAGvB,EAAKC,MAAQvb,IAAK2N,YAAYnB,GAAO,WACjC,EAAKwO,WAAa,GAClB,EAAKlb,SAAU,EACf,EAAKyb,WAAQ1Z,EACb6E,WA/DZ,0CAjCJ,E,gLAAA,mEAoGI,WACQlK,KAAK+e,QACL/e,KAAK+e,MAAMvM,OACXxS,KAAK+e,WAAQ1Z,GAEjB7B,IAAKC,aAAazD,KAAK0e,UACvBlb,IAAKC,aAAazD,KAAK4C,MANZ,WAOK5C,KAAKwe,YAPV,IAOX,2BAAiC,KAAtBzf,EAAsB,QAC7ByE,IAAKC,aAAa1E,GAClBiB,KAAKkC,YAAYnD,IATV,8BAWXiB,KAAKsD,SAAU,IA/GvB,wBAiHI,WACI,IAAMvE,EAAI,IAAI6T,OAAK,GAAG,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,QAAUC,MAAO,SAAUoC,WAAY,SAEtI,OADArW,EAAEkE,OAAOlB,IAAI,GAAI,IACVhD,O,gFApHf,GAAgCmF,a,m8CCDzB,IAAM8a,GAAb,a,sRAAA,U,MAAA,QAII,aAAc,O,4FAAA,eACV,gBADU,oEAEV,IAAMpc,EAAOC,SAAOC,KAAKC,UAAQC,OACjCJ,EAAKK,OAAOlB,IAAI,GAAK,IACrBa,EAAKF,MAAQkC,EAAaK,cAC1BrC,EAAKD,OAASiC,EAAaM,eAC3BtC,EAAKM,KAAO,EACZN,EAAKO,MAAQ,GACb,EAAKd,SAASO,GAEd,IAAM4Z,EAAY,IAAIrH,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC/E0Z,EAAU9Z,MAAQ,IAClB8Z,EAAU7Z,OAAS,IACnB6Z,EAAU1C,MAAM/X,IAAI,IAAK,KACzB,EAAKM,SAASma,GAEd,IAAMC,EAAQ,IAAI7J,OAAK,QAAS,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,QAAUC,MAAO,SAAUoC,WAAY,SAChJqH,EAAMxZ,OAAOlB,IAAI,GAAK,IACtB0a,EAAMzU,SAASkB,GAAK,IACpB,EAAK7G,SAASoa,GAEd,IAAMQ,EAAQ,IAAIjR,GAAO,gBAAiB,iBAC1CiR,EAAM3Q,GAAG,aAAa,SAACS,GACnBA,EAAE2N,kBACF3N,EAAE4N,SAAU,EACZ,EAAKvS,MAAK,MAEd6U,EAAMjV,SAASjG,KAAK,IAAK,KACzBkb,EAAMlY,MAAMhD,IAAI,GAAK,IACrB,EAAKM,SAAS4a,GAEd,IAAMgC,EAAO,IAAIjT,GAAO,eAAgB,gBA/B9B,OAgCViT,EAAK3S,GAAG,aAAa,SAACS,GAClBA,EAAE2N,kBACF3N,EAAE4N,SAAU,EACZ,EAAKvS,MAAK,MAEd6W,EAAKjX,SAASjG,IAAI,IAAK,KACvBkd,EAAKla,MAAMhD,IAAI,GAAK,IACpB,EAAKM,SAAS4c,GACd,EAAKhC,MAAQA,EACb,EAAKgC,KAAOA,EACZ,EAAK3b,SAAU,EA1CL,EAJlB,O,EAAA,G,EAAA,mBAgDI,SAAYga,GACRtd,KAAKsd,SAAWA,EAChBtd,KAAKmD,MAAQ,EACbnD,KAAKsD,SAAU,EACftD,KAAKid,MAAMvQ,UAAW,EACtB1M,KAAKif,KAAKvS,UAAW,EACrB5M,EAAOuB,KAAK,iBAtDpB,kBAwDI,SAAa6d,GACTlf,KAAKid,MAAMvQ,UAAW,EACtB1M,KAAKif,KAAKvS,UAAW,EACrB1M,KAAKsD,SAAU,EACXtD,KAAKsd,UAAUtd,KAAKsd,SAAS4B,GACjClf,KAAKsd,cAAWjY,O,gFA7DxB,GAAgCnB,a,m8CCHzB,IAAMib,GAAb,a,sRAAA,U,MAAA,QAGI,aAAc,a,4FAAA,eACV,gBADU,yCAEV,EAAKC,MAAQvc,SAAOC,KAAKC,UAAQD,KAAK,kBAEtC,EAAKsc,MAAMnc,OAAOlB,IAAI,GAAK,GAC3B,EAAKM,SAAS,EAAK+c,OACnB,EAAKA,MAAMzc,OAAS,KAEpB,EAAK0c,MAAQxc,SAAOC,KAAKC,UAAQD,KAAK,kBAEtC,EAAKuc,MAAMpc,OAAOlB,IAAI,GAAK,GAC3B,EAAKM,SAAS,EAAKgd,OACnB,EAAKA,MAAM1c,OAAS,IAZV,EAHlB,O,EAAA,G,EAAA,mBAqBI,SAAYlD,GACR,IAAM6f,EAAUC,GAAcC,YAIxB7Q,EAAO3N,KAAKye,MAAOhgB,EAAEyJ,EAAEoW,EAAU7f,EAAEwJ,GACzCjJ,KAAKof,MAAM1b,SAAWiL,EAAQ3N,KAAK4C,GAAG,EACtC,IAAI6R,EALQ,KAKCzU,KAAKqQ,IAAI1C,GAClBsJ,EAAKqH,EANG,KAMSte,KAAKsQ,IAAI3C,GAC1BvQ,EAPQ,KAQRqX,GAPW,KAOKA,EAPL,KASXA,GADArX,EAAI4C,KAAK0e,IAAIjK,GAAIA,EARN,IAQsBzU,KAAKqQ,IAAI1C,IACjC3N,KAAKqQ,IAAI1C,GAClBsJ,EAAM7Z,EAAG4C,KAAKsQ,IAAI3C,GAClB3O,KAAKqf,MAAM/b,SAAU,EACrBtD,KAAKqf,MAAMrX,SAASjG,IAAI0T,EAAIwC,GAC5BjY,KAAKqf,MAAM3b,UAAYiL,EAAQ3N,KAAK4C,GAAG,GAEvC5D,KAAKqf,MAAM/b,SAAU,EAEzBtD,KAAKof,MAAMzc,OAASvE,EAAI,O,gFAzChC,GAAkC8F,a,8wDCC3B,IAAMyb,GAAb,a,sRAAA,U,MAAA,QAGI,WAAY1W,EAAWC,EAAW/J,GAAiB,a,4FAAA,eAC/C,cAAM8J,EAAGC,EAAG+E,GAAYI,SAAUlP,IADa,8CAE/C,EAAKygB,qBAF0C,EAHvD,O,EAAA,G,EAAA,iCAOI,WAA6B,WACpB5f,KAAK6f,YAGN7f,KAAK6f,cAFL7f,KAAK6f,YAAc,EAInB7f,KAAK6f,YAAc,IACnB7f,KAAK6f,YAAc,GAEvB7f,KAAKmG,KAAK2G,QAAU9M,KAAKyP,aACzBzP,KAAKyO,MAAM3B,QAAU9M,KAAK0P,cAC1B1P,KAAKkc,KAAO,EACZ1Y,IAAKG,GAAG3D,KAAM,CAACkc,KAAM,EAAGrY,SAAU,IAAMI,WAAY,WAChD,EAAK2b,0BApBjB,wBAuBI,WACI,OAAO7c,UAAQD,KAAR,UAAgB9C,KAAK6f,aAAe,EAApC,WAxBf,yBA0BI,WACI,OAAO9c,UAAQD,KAAR,UAAgB9C,KAAK6f,aAAe,EAApC,YA3Bf,mBA6BI,WACIrc,IAAKC,aAAazD,MAClB,iD,gFA/BR,GAA8BiO,I,m8CCDvB,IAAM6R,GAAb,a,sRAAA,U,MAAA,QAGI,aAAc,a,4FAAA,eACV,gBADU,uCAEV,EAAKvW,IAAM,IAAIqJ,OAAK,GAAI,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,QAAUC,MAAO,WAClH,EAAKzJ,IAAItG,OAAOlB,IAAI,GAAK,IACzB,EAAKM,SAAS,EAAKkH,KAJT,EAHlB,O,EAAA,G,EAAA,oBASI,SAAaN,EAAWC,EAAWI,GAAe,WAC9CtJ,KAAKsJ,MAAQA,EACbtJ,KAAKuJ,IAAIiK,KAAO,IAAMlK,EAAMlI,WAC5BpB,KAAKiJ,EAAIA,EACTjJ,KAAKkJ,EAAIA,EACT1F,IAAKG,GAAG3D,KAAM,CAACiJ,EAAG,EAAGC,GAAI,IAAKrF,SAAU,GAAKmM,MAAqB,IAAdhP,KAAKE,SAAe4C,KAAM+a,IAAKxM,OAAQpO,WAAY,WACnG,EAAKuU,cAfjB,oBAkBI,WACIhV,IAAKC,aAAazD,MAClBA,KAAKyS,KAAK,OAAQzS,KAAKsJ,SApB/B,mBAsBI,WACI9F,IAAKC,aAAazD,MAClBA,KAAKgN,IAAI,QACThN,KAAKsJ,MAAQ,EACbtJ,KAAKmD,MAAQ,EACbnD,KAAKuJ,IAAIiK,KAAO,Q,gFA3BxB,GAA+BtP,a,uKCDxB,IAAM6b,GAAb,WAEI,WAAYjf,G,uGAAgB,S,OAAA,G,EAAA,S,EAAA,M,sFACxBd,KAAKC,IAAM,GACX,IAAK,IAAI3D,EAAI,EAAGA,EAAIwE,EAAQxE,IACxB0D,KAAKC,IAAInD,KAAK,IAAIgjB,I,UAL9B,O,EAAA,G,EAAA,qBAQI,WAKI,OAJwB,IAApB9f,KAAKC,IAAIzD,SACT8E,QAAQqJ,IAAI,qBACZ3K,KAAKC,IAAInD,KAAK,IAAIgjB,KAEf9f,KAAKC,IAAI4W,QAbxB,qBAeI,SAAe/L,GACXA,EAAEuE,QACFrP,KAAKC,IAAInD,KAAKgO,Q,gFAjBtB,K,00CCAO,IAAMkV,GAAb,a,sRAAA,U,MAAA,QAEI,WAAY5M,GAAY,M,MAAA,O,4FAAA,SACpB,cAAMrQ,UAAQD,KAAR,cAAoBsQ,EAApB,U,EADc,M,OAAA,G,EAAA,S,wFAEpB,EAAKD,IAAMC,EAFS,EAF5B,O,EAAA,G,EAAA,eAMI,WACI,OAAOpT,KAAKmT,S,gFAPpB,GAA0BtQ,U,uKCAnB,IAAMod,GAAb,WAEI,a,uGAAc,S,OAAA,G,EAAA,S,EAAA,M,sFAGVjgB,KAAKC,IAAM,IAAI2B,IACf,IAAK,IAAI7C,EAAI,EAAGA,EAHF,EAGaA,IAAK,CAE5B,IADA,IAAMkY,EAAc,GACX3a,EAAI,EAAGA,EAJL,GAIiBA,IACxB2a,EAAIna,KAAK,IAAIkjB,GAAKjhB,IAEtBiB,KAAKC,IAAI8B,IAAIhD,EAAGkY,I,UAX5B,O,EAAA,G,EAAA,qBAcI,SAAc5L,GACV,IAAM4L,EAAMjX,KAAKC,IAAIvB,IAAI2M,GAKzB,OAJI4L,GAAsB,IAAfA,EAAIza,SACX8E,QAAQqJ,IAAI,qBACZsM,EAAIna,KAAK,IAAIkjB,GAAK3U,KAEf4L,aAAP,EAAOA,EAAKJ,QApBpB,qBAsBI,SAAe/L,GACC9K,KAAKC,IAAIvB,IAAIoM,EAAEsI,IACtBtW,KAAKgO,Q,gFAxBlB,K,uKCAO,IAAMoV,GAAb,WAEI,WAAYpf,G,uGAAgB,S,OAAA,G,EAAA,S,EAAA,M,sFACxBd,KAAKC,IAAM,GACX,IAAK,IAAI3D,EAAI,EAAGA,EAAIwE,EAAQxE,IACxB0D,KAAKC,IAAInD,KAAKojB,EAAYC,gB,UALtC,O,EAAA,E,EAAA,2BAkBI,WACI,OAAO,IAAItd,SAAOE,UAAQD,KAAR,iB,EAnB1B,qBAQI,WAKI,OAJwB,IAApB9C,KAAKC,IAAIzD,SACT8E,QAAQqJ,IAAI,uBACZ3K,KAAKC,IAAInD,KAAKojB,EAAYC,iBAEvBngB,KAAKC,IAAI4W,QAbxB,qBAeI,SAAe/L,GACX9K,KAAKC,IAAInD,KAAKgO,Q,gFAhBtB,K,o8CCGO,IAAMsV,GAAb,a,sRAAA,U,QAAA,UAEI,aAAc,M,MAAA,O,4FAAA,SACV,e,EADU,M,OAAA,G,EAAA,S,wFAEV,EAAKC,IAAMxd,SAAOC,KAAKwd,GAAe7Q,WAAW,IACjD,EAAK4Q,IAAIpd,OAAOlB,IAAI,GAAI,IACxB,EAAKM,SAAS,EAAKge,KACnB,EAAKtb,MAAMhD,IAAI,EAAG,GALR,EAFlB,O,EAAA,G,EAAA,uB,EAAA,yBAUI,6HAAqBiO,EAArB,+BAAqC,EAArC,kBACW,IAAI/F,SAAc,SAACC,GACtB,IAAIqW,EAAQ,EACN9gB,EAAI,CAACyR,EAAG,GACd1N,IAAK2N,YAA0B,GAAdnQ,KAAKE,UAAc,WAChCpB,EAAO0B,KAAK,kBACZ1B,EAAOuB,KAAK,qBAEhBmC,IAAKG,GAAGlE,EAAG,CAACyR,EAAG,EAAGlB,MAAOA,EAAOnM,SAAUmM,EAAM,GAAKF,SAAU,WAC3D,IAAM0Q,EAAKxf,KAAKC,MAAY,EAANxB,EAAEyR,GACpBsP,IAAOD,IACPA,EAAQC,EACR,EAAKH,IAAIvT,QAAUwT,GAAe7Q,WAAW8Q,OAIrD/c,IAAKG,GAAG,EAAKoB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAUmM,EAAM,KACjDxM,IAAKG,GAAG,EAAKoB,MAAO,CAACkE,EAAG,IAAKC,EAAG,IAAK8G,MAAOA,EAAM,GAAKnM,SAAU,KACjEL,IAAKG,GAAG,EAAM,CAACR,MAAO,EAAG6M,MAAMA,EAAM,GAAKnM,SAAU,GAAKI,WAAY,WACjEiG,WAnBZ,0CAVJ,E,gLAAA,gEAkCI,WACIlK,KAAKqgB,IAAIvT,QAAUwT,GAAe7Q,WAAW,GAC7CzP,KAAK+E,MAAMhD,IAAI,EAAG,GAClB/B,KAAKmD,MAAQ,EACbnD,KAAKsD,SAAU,EACfE,IAAKC,aAAazD,KAAK+E,OACvBvB,IAAKC,aAAazD,W,gFAxC1B,GAA+BkE,a,gSCFxB,ICsCKwX,GAMA+E,GAQAC,GDpDCJ,GAAb,WAGI,WAAYxf,I,4FAAgB,+BACxBd,KAAKC,IAAM,GACX,IAAK,IAAI3D,EAAI,EAAGA,EAAIwE,EAAQxE,IACxB0D,KAAKC,IAAInD,KAAK,IAAIsjB,I,UAN9B,O,EAAA,E,EAAA,yBAqBI,SAAyBhN,GACrB,OAAOkN,EAAeK,UAAUvN,KAtBxC,4BAwBI,WACSkN,EAAeK,YAChBL,EAAeK,UAAY,CAAC5d,UAAQD,KAAK,wBAAyBC,UAAQD,KAAK,wBAAyBC,UAAQD,KAAK,8B,EA1BjI,qBASI,WAKI,OAJwB,IAApB9C,KAAKC,IAAIzD,SACT8E,QAAQqJ,IAAI,uBACZ3K,KAAKC,IAAInD,KAAK,IAAIsjB,KAEfpgB,KAAKC,IAAI4W,QAdxB,qBAgBI,SAAe/L,GACXA,EAAEuE,QACFrP,KAAKC,IAAInD,KAAKgO,Q,gFAlBtB,K,63FAAawV,G,6BCsCD5E,O,eAAAA,I,eAAAA,I,mBAAAA,I,wBAAAA,Q,cAMA+E,O,eAAAA,I,6BAAAA,I,+BAAAA,I,mCAAAA,I,uCAAAA,I,cAAAA,Q,cAQAC,O,eAAAA,I,mBAAAA,I,mBAAAA,I,6BAAAA,I,oBAAAA,Q,KA6BZ,IAEWxQ,GAFL0Q,GAAiB,CAAC,EAAE,GAAI,GAAI,GAAI,IAGzBrB,GAAb,a,sRAAA,U,MAAA,wdAWmB,GAXnB,4iCA+CsE,IA/CtE,yBAgDgD,IAhDhD,sG,EAAA,E,EAAA,qBAqDI,WAAsB,WAClB1E,GAASgG,kBACTP,GAAeQ,iBACf5Q,GAAiB,IAAIoQ,GAAe,IAEpCtgB,KAAK+gB,UAAY,IAAIhB,GAAU,IAC/B/f,KAAKghB,UAAY,IAAIf,GACrBjgB,KAAKihB,YAAc,IAAIf,GAAY,GACnClgB,KAAKkhB,SAAW,IAAItf,IACpB5B,KAAKmhB,cAAgB,IAAIjd,YACzBlE,KAAKqC,SAASrC,KAAKmhB,eACnBnhB,KAAKohB,cAAgB,IAAIld,YACzBlE,KAAKqC,SAASrC,KAAKohB,eACnBphB,KAAKqhB,YAAc,IAAInd,YACvBlE,KAAKqC,SAASrC,KAAKqhB,aACnBrhB,KAAKshB,eAAiB,IAAIpd,YAC1BlE,KAAKqC,SAASrC,KAAKshB,gBAEnBthB,KAAKuhB,cAAgB,IAAIpF,GACzBnc,KAAKshB,eAAejf,SAASrC,KAAKuhB,eAClCvhB,KAAKuhB,cAAcje,SAAU,EAE7BtD,KAAKwhB,IAAM,IAAI3e,SAAOE,UAAQD,KAAK,kBACnC9C,KAAKwhB,IAAIve,OAAOlB,IAAI,GAAK,GACzB/B,KAAKwhB,IAAIxZ,SAASkB,EAAkC,GAA9BtE,EAAaM,eAAuB,GAC1DlF,KAAKohB,cAAc/e,SAASrC,KAAKwhB,KAEjC,IAAM5e,EAAO,IAAIuS,iBAAepS,UAAQD,KAAK,aAAc,IAAK,IAAK,IAAK,KAC1EF,EAAKF,MAAQkC,EAAaK,cAAgB,GAC1CrC,EAAKD,OAASiC,EAAaM,eAAiB,GAC5CtC,EAAKoF,SAASjG,IAAkB,IAAba,EAAKF,MAA4B,IAAdE,EAAKD,QAC3C3C,KAAKqC,SAASO,GAEd,IAAM2D,EAAM,IAAIrC,YAChBqC,EAAIyB,SAASjG,IAAI,EAAkC,IAA9B6C,EAAaM,eAAuB,IACzDlF,KAAKohB,cAAc/e,SAASkE,GAO5B,IAAMkb,EAAU,IAAI5J,GACpB4J,EAAQzZ,SAASjG,KAAK,IAAK,IAC3B0f,EAAQnV,GAAG,aAAa,WACpBoH,GAAU,OAAQ,OAAQ,SAC1B,EAAKgO,eAETnb,EAAIlE,SAASof,GAEbzhB,KAAK2hB,SAAW,IAAIhP,GACpB3S,KAAK2hB,SAAS3Z,SAASjG,KAAK,IAAK,KACjC/B,KAAKohB,cAAc/e,SAASrC,KAAK2hB,UACjC3hB,KAAK2hB,SAASrV,GAAG,YAAY,SAAC8G,EAAIwO,GAC9B,EAAKC,aAAazO,EAAIwO,MAG1B5hB,KAAK8hB,SAAW,IAAInP,GACpB3S,KAAK8hB,SAAS9Z,SAASjG,IAAI,IAAK,KAChC/B,KAAKohB,cAAc/e,SAASrC,KAAK8hB,UACjC9hB,KAAK8hB,SAASxV,GAAG,YAAY,SAAC8G,EAAIwO,GAC9B,EAAKC,aAAazO,EAAIwO,MAE1B5hB,KAAK2hB,SAASre,SAAU,EACxBtD,KAAK8hB,SAASxe,SAAU,EAExBtD,KAAK+hB,QAAU,IAAI5C,GACnBnf,KAAKohB,cAAc/e,SAASrC,KAAK+hB,SACjC/hB,KAAK+hB,QAAQze,SAAU,EAEvBtD,KAAKgiB,cAAgB,IAAI/M,GACzBjV,KAAKohB,cAAc/e,SAASrC,KAAKgiB,eACjChiB,KAAKgiB,cAAc9Y,GAAK,IAAMlJ,KAAKgiB,cAAcrf,OAEjD,IAAMsf,EAAO,IAAI9M,iBAAepS,UAAQD,KAAK,oBAAqB,EAAE,EAAE,EAAE,GACxEmf,EAAKvf,MAAQ,IACbuf,EAAKtf,OAAS,GACdsf,EAAKja,SAASjG,KAAK,IAAK,KACxB/B,KAAKohB,cAAc/e,SAAS4f,GAE5BjiB,KAAKkiB,UAAY,IAAIrO,GACrB7T,KAAKkiB,UAAUla,SAASjG,KAAK,KAAM,KACnC/B,KAAKohB,cAAc/e,SAASrC,KAAKkiB,WAEjCliB,KAAKmiB,UAAY,IAAI3N,GACrBxU,KAAKmiB,UAAUna,SAASjG,IAAI,KAAM,KAClC/B,KAAKmiB,UAAUpd,MAAMhD,IAAI,IAAM,KAC/B/B,KAAKohB,cAAc/e,SAASrC,KAAKmiB,WAEjCniB,KAAKoiB,WAAa,IAAI7K,GACtBvX,KAAKoiB,WAAWpa,SAASjG,KAAK,KAAM,KACpC/B,KAAKohB,cAAc/e,SAASrC,KAAKoiB,YAEjCpiB,KAAKqiB,QAAU,IAAItM,aAAW,IAAK,IAAK,IAAK,KAC7C/V,KAAKsiB,SAAW,IAAIvM,aAAW,IAAK,IAAK,IAAK,KAC9C/V,KAAKuiB,QAAU,IAAIxM,YAAsC,IAA3BnR,EAAaK,cAAgD,IAA5BL,EAAaM,eAAoBN,EAAaK,cAAe,KAE5HjF,KAAK0Z,SAAW,IAAIf,GACpB3Y,KAAK0Z,SAASpN,GAAG,QAAQ,SAAClO,GACtB,EAAKokB,gBAAkBpkB,KAE3B4B,KAAKshB,eAAejf,SAASrC,KAAK0Z,UAElC1Z,KAAKyiB,WAAa,IAAIpE,GACtBre,KAAKshB,eAAejf,SAASrC,KAAKyiB,YAElCziB,KAAK0iB,WAAa,IAAI1D,GACtBhf,KAAKshB,eAAejf,SAASrC,KAAK0iB,YAElC1iB,KAAK0Z,SAASiJ,aAAavK,GAAUU,OAAO,WAAM,MACxC9Q,EAAQ,UAAG,EAAK4a,iBAAR,aAAG,EAAgB5a,SACjC,MAAO,CAACwB,UAAW,EAAKqZ,gBAAmC,IAAjB,EAAKC,UAAkB,EAAKL,WAAWnf,WAAa0E,GAAYA,EAASkB,GAAK,IAAKlN,KAAM,CAACsR,IAAKtF,EAAUjD,MAAO,CAACkE,EAAIjB,GAAYA,EAASiB,GAAK,IAAO,EAAI,EAAGC,GAAI,QAE/MlJ,KAAK0Z,SAASiJ,aAAavK,GAAUW,QAAQ,WAEzC,MAAO,CAACvP,UAAW,EAAKqZ,gBAAmC,IAAjB,EAAKC,UAAkB,EAAKL,WAAWnf,QAAStH,KAAM,CAACsR,IADhF,CAACrE,EAAG,GAAIC,EAAG,GACoFnE,MAAO,CAACkE,EAAG,EAAGC,GAAI,QAEtIlJ,KAAK0Z,SAASiJ,aAAavK,GAAUY,OAAO,WAAM,MACxChR,EAAQ,UAAG,EAAK4a,iBAAR,aAAG,EAAgB5a,SACjC,MAAO,CAACwB,QAAS,EAAKuZ,aAAc/mB,KAAM,CAACsR,IAAKtF,EAAUjD,MAAO,CAACkE,EAAIjB,GAAYA,EAASiB,GAAK,IAAO,EAAI,EAAGC,GAAI,QAEtHlJ,KAAK0Z,SAASiJ,aAAavK,GAAUa,SAAS,WAE1C,MAAO,CAACzP,QAAS,EAAK+O,OAAQvc,KAAM,CAACsR,IADpB,CAACrE,EAAG,IAAKC,GAAI,KACsBnE,MAAO,CAACkE,EAAG,EAAGC,GAAI,QAE1ElJ,KAAK0Z,SAASiJ,aAAavK,GAAUc,UAAU,WAE3C,MAAO,CAAC1P,QAAS,EAAKwZ,YAAahnB,KAAM,CAACsR,IADzB,CAACrE,EAAG,IAAKC,GAAI,KAC2BnE,MAAO,CAACkE,EAAG,EAAGC,GAAI,QAE/ElJ,KAAK0Z,SAASiJ,aAAavK,GAAUe,SAAS,WAE1C,MAAO,CAAC3P,UAAW,EAAKqZ,gBAAkB,EAAKlB,SAASre,SAA4B,IAAjB,EAAKwf,SAA2C,IAA1B,EAAKG,UAAUzmB,OAAcR,KAAM,CAACsR,IAD5G,CAACrE,EAAG,GAAIC,GAAI,KAC+GnE,MAAO,CAACkE,EAAG,EAAGC,GAAI,QAElKlJ,KAAK0Z,SAASiJ,aAAavK,GAAUgB,UAAU,WAE3C,MAAO,CAAC5P,SAAU,EAAKkQ,SAASpW,SAAW,EAAKoW,SAASwJ,OAAO9K,GAAUe,YAAc,EAAK0J,gBAAkB,EAAKlB,SAASre,SAA4B,IAAjB,EAAKwf,SAA2C,IAA1B,EAAKG,UAAUzmB,OAAcR,KAAM,CAACsR,IADjL,CAACrE,GAAI,IAAKC,EAAG,KACmLnE,MAAO,CAACkE,GAAI,EAAGC,EAAG,QAEvOlJ,KAAK0Z,SAASiJ,aAAavK,GAAUiB,WAAW,WAE5C,MAAO,CAAC7P,SAAU,EAAKkQ,SAASpW,SAAW,EAAKoW,SAASwJ,OAAO9K,GAAUgB,aAAe,EAAKyJ,gBAAkB,EAAKlB,SAASre,SAA4B,IAAjB,EAAKwf,SAA2C,IAA1B,EAAKG,UAAUzmB,OAAcR,KAAM,CAACsR,IADlL,CAACrE,EAAG,IAAKC,EAAG,KACqLnE,MAAO,CAACkE,EAAG,EAAGC,EAAG,QAEvOlJ,KAAK0Z,SAASiJ,aAAavK,GAAUkB,gBAAgB,WAEjD,MAAO,CAAC9P,UAAW,EAAKqZ,gBAAkB,EAAKlB,SAASre,SAA4B,IAAjB,EAAKwf,SAA2C,IAA1B,EAAKG,UAAUzmB,OAAcR,KAAM,CAACsR,IAD5G,CAACrE,EAAG,GAAIC,GAAI,KAC+GnE,MAAO,CAACkE,EAAG,EAAGC,GAAI,QAElKlJ,KAAK0Z,SAASiJ,aAAavK,GAAUmB,OAAO,WAAM,QAC1CvR,EAAW,CAACiB,EAAG,GAAIC,GAAI,KADmB,KAE7B3G,EAAMmF,QAFuB,IAE9C,2BAA+B,KAAtBzB,EAAsB,QAC3B,GAAIA,GAASA,EAAa2B,UAAa3B,EAAa2B,SAASyD,OAAS4C,GAAYG,WAAY,CAC1FpG,EAAY/B,EAAa2B,SAASI,SAClC,QALsC,8BAS9C,MAAO,CAACwB,UAAW,EAAKqZ,gBAAmC,KAAjB,EAAKC,UAAmB,EAAKL,WAAWnf,QAAStH,KAAM,CAACsR,IAAKtF,EAAUjD,MAAO,CAACkE,GAAY,QAAR,EAAAjB,SAAA,eAAUiB,IAAK,IAAO,EAAI,EAAGC,GAAI,QAElKlJ,KAAK0Z,SAASiJ,aAAavK,GAAUoB,SAAS,WAC1C,IAAMxR,EAAW,CAACiB,GAAI,IAAKC,EAAGqW,EAAcC,YAAc,IAC1D,MAAO,CAAChW,UAAW,EAAKqZ,gBAAkB,EAAKlB,SAASre,SAAW,EAAKwf,QAAU,GAAK,EAAKK,WAAalV,GAAYI,SAAUrS,KAAM,CAACsR,IAAKtF,EAAUjD,MAAO,CAACkE,GAAI,EAAGC,EAAG,QAE3KlJ,KAAK0Z,SAASiJ,aAAavK,GAAUqB,aAAa,WAC9C,IAAMzR,EAAW,CAACiB,GAAI,IAAKC,EAAGqW,EAAcC,YAAc,IAC1D,MAAO,CAAChW,UAAW,EAAKqZ,gBAAkB,EAAKlB,SAASre,SAAW,EAAKwf,QAAU,GAAK,EAAKK,WAAalV,GAAYmV,aAAcpnB,KAAM,CAACsR,IAAKtF,EAAUjD,MAAO,CAACkE,GAAI,EAAGC,EAAG,UAvNvL,kDA0NI,yHACI0C,KACA5L,KAAKqjB,cAAe,EACpBrjB,KAAKsjB,aAAc,EACnBtjB,KAAKgjB,aAAc,EACnBhjB,KAAKsJ,MAAQ,EACbtJ,KAAKoiB,WAAW9Y,MAAQ,EAN5B,WAAsBnH,EAAtB,yBAAsBA,EAAtB,eAOInC,KAAK8iB,QAAU3gB,EAAO,GAAG,GACzBnC,KAAKujB,YAAc9C,GAAOhD,KAC1Bzd,KAAKwjB,sBAAwB,GAC7BxjB,KAAKijB,UAAY,GACjBjjB,KAAK+iB,cAAe,EAEpB/iB,KAAKmjB,cAAW9d,EAChBrF,KAAKsV,UAAY,GACjBtV,KAAKyjB,iBAAkB,EACvBzjB,KAAK0jB,qBACL1jB,KAAK2jB,KAAO,EACZ3jB,KAAK4jB,MAAM,IACX5jB,KAAKuY,QAAS,EACdvY,KAAKkiB,UAAU2B,SACfjf,EAAaE,QAAS,EArB1B,UAuBU9E,KAAK8jB,sBAvBf,eAwBUC,EAAO/jB,KAAKgkB,eAxBtB,UAyBUhkB,KAAKyiB,WAAWnX,KAAKtL,KAAKikB,iBAAkBF,GAzBtD,QA0BQ/jB,KAAKikB,iBAAiBF,MACtB/jB,KAAK2hB,SAASuC,QAAQH,EAAK,GAAIlJ,GAASpL,WAAWsU,EAAK,IAAKlJ,GAASpL,WAAWsU,EAAK,KACtF/jB,KAAK8hB,SAASoC,QAAQH,EAAK,GAAIlJ,GAASpL,WAAWsU,EAAK,IAAKlJ,GAASpL,WAAWsU,EAAK,KACtF/jB,KAAK2hB,SAASre,SAAU,EACxBtD,KAAK8hB,SAASxe,SAAU,EACxBtD,KAAK2hB,SAASjV,UAAW,EACzB1M,KAAK8hB,SAASpV,UAAW,EACzB1M,KAAKmkB,oBAAoB,CAACJ,KAAKA,EAAK3iB,cAEpCpB,KAAKmkB,sBAETnkB,KAAKqjB,cAAe,EACpBrjB,KAAKmiB,UAAUiC,QAAUpkB,KAAKikB,iBAAiB9B,UAE/CniB,KAAKqkB,iBACLrkB,KAAKkiB,UAAU3N,WACfvU,KAAKwiB,gBAAiB,IAAI7O,MAAOC,UACjC5T,KAAKskB,cAAgB,IAAIxS,GAEzBtP,EAAId,MAAM4K,GAAG,YAAatM,KAAKukB,QAASvkB,MACxCwC,EAAId,MAAM4K,GAAG,cAAetM,KAAKwkB,WAAYxkB,MA9CjD,iDA1NJ,+FA0QI,iIACW,IAAIiK,SAAc,SAACC,GACtB2B,KACArJ,EAAId,MAAMsL,IAAI,aACdxK,EAAId,MAAMsL,IAAI,eACdpI,EAAaE,QAAS,EACtB,EAAKwe,aAAc,EACnB/I,IAAU,GACV,EAAK2G,SAAS7L,QACd,EAAK2N,aAAc,EACnB,EAAKd,UAAU7M,QACf,EAAK8M,UAAUpQ,OAAM,GACrB,EAAK0Q,WAAWpN,QAChB,EAAKoP,SAAW,EAAKA,QAAQpV,QAC7B,EAAKqV,WAAa,EAAKA,UAAUrV,QACjC,EAAKwT,gBAAkB,EAAKA,eAAexT,QAC3C,EAAKsV,aAAe,EAAKA,YAAYtV,QACrC,EAAKkU,YAAc9C,GAAOhD,KAC1B,EAAKkG,KAAO,EACZ,EAAKpL,QAAS,EACd,EAAKkL,iBAAkB,EACvB,EAAKzB,eAAiB,EAAKA,cAAc3M,QACzC,EAAKuP,WAAa,EAAKA,UAAUvV,QACjC,EAAK0S,QAAQze,SAAU,EACvB,EAAKqe,SAASre,SAAU,EACxB,EAAKwe,SAASxe,SAAU,EACxB,EAAKgS,UAAY,GACjB,EAAKkO,sBAAwB,GAC7B,EAAKP,UAAY,GAEjB,EAAK5B,YAAYwD,iBAEjBtiB,EAAMmF,OAAOC,SAAQ,SAAC1B,GACdA,GAASA,EAAa2B,UACpB3B,EAAa2B,SAA2ByH,WAIlD,IADA,IACS/S,EADC,EAAK8kB,cAAc0D,SAAStoB,OACrB,EAAGF,GAAK,EAAGA,IAAK,CAC7B,IAAM6B,EAAI,EAAKijB,cAAc0D,SAASxoB,GACjC6B,EAAUoQ,YACX,EAAK6S,cAAclf,YAAY/D,GAGvCqF,IAAKgX,eAAenF,QACpB,IAAMtW,EAAIY,OAAOya,aAAY,WACzB,IAAMna,EAAMsC,EAAMmF,OAAOqd,QAAO,SAAC9e,GAE7B,OADmBA,GAASA,EAAa2B,YAG1B,IAAf3H,EAAIzD,QACJmD,OAAO2a,cAAcvb,GACrBmL,KAEA5I,QAAQqJ,IAAI1K,KAEjB,QAxDX,2CA1QJ,oEAqUI,WAAoB,WACV+kB,GAAQ,IAAIrR,MAAOC,UACzBpQ,IAAKgX,eAAeC,QACpB7V,EAAaE,QAAS,EACtB+G,KACA7L,KAAK0iB,WAAWpX,KAAhB,6CAAqB,WAAM4T,GAAN,0FACbA,EADa,gCAEP9T,GAAQhC,EAAOY,cAFR,OAGbpF,EAAaE,QAAS,EACtBtB,IAAKgX,eAAeI,SACpBlH,GAAU,OAAQ,QAAS,QAC3BjP,EAAarC,MAAM6iB,IANN,uBAQbvR,GAAU,OAAQ,QAAS,UAC3B9O,EAAaE,QAAS,EACtBtB,IAAKgX,eAAeI,SACdsK,GAAY,IAAIvR,MAAOC,UAAYoR,EACzC,EAAKxC,gBAAkB0C,EACvBtZ,KAba,4CAArB,kCAAA5L,KAAA,kBA1UR,0BA2VI,WACI,IAAKA,KAAKikB,iBAAiBF,KACvB,OAAOrI,GAAU+B,KAIrB,IAFA,IAAMsG,EAAO,CAACrI,GAAUE,KAAMF,GAAUC,SAAUD,GAAUG,QACtDld,EAAiB,GACdrC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAM8W,EAAKpS,KAAKC,MAAMD,KAAKE,SAAS6iB,EAAKvnB,QACzCmC,EAAE7B,KAAKinB,EAAK3Q,IACZ2Q,EAAKrmB,OAAO0V,EAAG,GAEnB,OAAOzU,IAtWf,iCAwWI,SAA4BwmB,GAA8B,WACtD,IAAInlB,KAAK+iB,aAAT,CACA,IAAMqC,EAAgBD,EAAUnkB,KAAKC,MAAMD,KAAKE,SAAWikB,EAAU3oB,SAC/DsE,EAASqkB,EAAU3oB,OACzB2oB,EAAUxd,SAAQ,SAAClI,GACf,EAAK4lB,aAAa5lB,EAAEwJ,EAAGxJ,EAAEyJ,EAAG+E,GAAYqX,eAE5C,IAAM3mB,EAAIqC,KAAKE,SAAW,GACX,IAAXJ,EACAhB,EAAOuB,KAAK,cACM,IAAXP,IACHnC,EACAmB,EAAOuB,KAAK,aAEZvB,EAAOuB,KAAK,aAGhBP,GAAU,IACNnC,EACAmB,EAAOsR,WAAW,aAAc,GAEhCtR,EAAOuB,KAAK,aAGZ+jB,IACAplB,KAAKulB,WAAW,EAAGH,GACnBplB,KAAKqlB,aAAaD,EAAcnc,EAAGmc,EAAclc,EAAG+E,GAAYuX,mBAGpExlB,KAAKujB,aAELvjB,KAAK8iB,QAAU,GACf9iB,KAAKylB,UAAU3kB,EAAQskB,MAxYnC,4BA2YI,SAAuBtkB,GACnB,IAAId,KAAKujB,cACTzjB,EAAOuB,KAAK,kBACCrB,KAAKmiB,UAAU7F,OAAOxb,IACzB,CACN,IAAM4kB,EAAQ1lB,KAAK2lB,iBACnB3lB,KAAK4lB,eAAeF,MAjZhC,sDAoZI,WAAwB5kB,EAAgBskB,GAAxC,wGACQtkB,EAAS,IAAMskB,EADvB,iDAIIplB,KAAKgjB,aAAc,EACb6C,EAAa/kB,EACnBA,EAASE,KAAK8T,IAAIhU,EAAQ,GACpBglB,EAAgBD,EAAa/kB,EAPvC,sCAQaxE,GARb,+FAScqC,EAAIqC,KAAKC,MAAoB,EAAdD,KAAKE,WACpB6kB,EAAO,EAAK/E,UAAU7Q,OAAOxR,IAC9BsE,OAAOlB,IAAI,GAAK,IACrBgkB,EAAKhhB,MAAMhD,IAAI,GAAK,IACpBgkB,EAAKriB,SAAW1C,KAAK4C,GAAI,EAAI5C,KAAKye,OAAO,IAAM2F,EAAclc,EAAG,IAAMkc,EAAcnc,GACpF8c,EAAK/d,SAAS+R,SAASqL,GACvB,EAAK/D,YAAYhf,SAAS0jB,GAC1BviB,IAAKG,GAAGoiB,EAAKhhB,MAAO,CAACkE,EAAG,IAAKC,EAAG,IAAKrF,SAAU+d,GAAY9d,KAAMC,IAAOC,WACxER,IAAKG,GAAGoiB,EAAKhhB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAO4R,GAAY/d,SAAU+d,GAAY9d,KAAMC,IAAOC,WACvFR,IAAKG,GAAGoiB,EAAK/d,SAAU,CAACiB,EAAG,IAAKC,GAAI,IAAKrF,SAhBhC,GAgBgDC,KAAMC,IAAOC,SAAUC,WAAY,WACxF,EAAK+hB,eAAeF,GACpB,EAAKzE,YAAYnf,YAAY6jB,GAC7B,EAAK/E,UAAU3Q,QAAQ0V,MArBnC,UAuBc,EAAK/V,MAAM,IAvBzB,2CAQa1T,EAAI,EARjB,YAQoBA,EAAIwE,GARxB,0CAQaxE,GARb,iBAQgCA,IARhC,uBAyBI0D,KAAKgjB,aAAc,EAzBvB,iDApZJ,sEA+aI,SAAiB1Z,GACbtJ,KAAKsJ,OAASA,EACdtJ,KAAKoiB,WAAW9Y,MAAQtJ,KAAKsJ,QAjbrC,0BAmbI,SAAoBL,EAAUC,EAAUI,GAAe,WAC7C6M,EAAOnW,KAAK+gB,UAAU5Q,SAC5BnQ,KAAKkhB,SAASnf,IAAIoU,GAAM,GACxBnW,KAAKqhB,YAAYhf,SAAS8T,GAC1BA,EAAK7J,GAAG,QAAQ,SAAC1O,GACb,EAAKqoB,SAASroB,GACd,EAAKmjB,UAAU1Q,QAAQ8F,GACvB,EAAK+K,SAAL,OAAqB/K,MAEzBA,EAAK/T,MAAM6G,EAAGC,EAAGI,KA5bzB,4BA8bI,WACI,OAAO1E,EAAaO,OAAOnF,KAAK8iB,WA/bxC,+BAicI,WACI,IAAI9iB,KAAK+iB,aAAT,CACA,IAAMzmB,EAAI0E,KAAKC,MAAMD,KAAKE,SAASlB,KAAKwjB,sBAAsBhnB,QAC1DiD,EAAIO,KAAKwjB,sBAAsBlnB,GAEnC,GADA0D,KAAKwjB,sBAAsB9lB,OAAOpB,EAAG,GAChCmD,KAAKuB,KAAK0e,IAAIjgB,EAAE,KAAO,IAG5B,OAAOA,KAzcf,8BA2cI,SAAyBimB,GACrB,OAAIA,IAAUjF,GAAOyF,iBACV,EACAR,IAAUjF,GAAO0F,YACjB,EACAT,IAAUjF,GAAO2F,eACjB,EAEJ,IAndf,2DAqdI,WAA6BV,GAA7B,+FACI1lB,KAAKujB,YAAcmC,EACnB1lB,KAAKkiB,UAAU2B,SACf7jB,KAAKqlB,aAAa,EAAG,EAAGpX,GAAYoY,aAChCjQ,OAAoC/Q,EAClCyQ,EAAQ9V,KAAKsmB,iBAAiBZ,GACpCpkB,QAAQqJ,IAAI,YAAa+a,EAAO5P,GAChCpC,GAAU,OAAQ,QAAS,WAAYgS,GACvC5lB,EAAOuB,KAAK,aARhB,KASWqkB,EATX,cAUajF,GAAOyF,kBAVpB,OAWazF,GAAO0F,aAXpB,OAYa1F,GAAO2F,eAZpB,UAkBa3F,GAAO8F,aAlBpB,2BAaYvmB,KAAKwmB,WAAa,IAAIzP,GAAiBjB,GACvCM,EAAW,WACP,OAAO,EAAKqQ,qBAf5B,oCAmBYzmB,KAAKwmB,WAAa,IAAI1O,GACtB1B,EAAW,WACP,IAAM3W,EAAI,EAAKgnB,oBACf,GAAKhnB,EAGL,OAAOA,EAAE,IAzBzB,sEA8BIO,KAAKshB,eAAejf,SAASrC,KAAKwmB,YA9BtC,UAgCUxmB,KAAKwmB,WAAWpkB,MAAMgU,GAhChC,QAiCIpW,KAAK0mB,kBACL1mB,KAAKkiB,UAAU3N,WAlCnB,iDArdJ,0EAyfI,WAKI,IAJA,IAAO0H,EAAWjc,KAAKikB,iBAAhBhI,QAED0K,EAA0B,GAC5BC,EAAO,EACFtqB,EAAI,EAAGA,EAAI2f,EAAQzf,OAAQF,IAGhCsqB,GAFUhG,GAAe3E,EAAQ3f,IAGjCqqB,EAAc7pB,KAAK8pB,GAGvB,IAAMjoB,EAAIqC,KAAKE,SAAS0lB,EAGxB,OAAO3K,EAFO0K,EAAc5B,QAAO,SAAA8B,GAAE,OAAIloB,GAAKkoB,KAAIrqB,UAtgB1D,uDA0gBI,WAAwBsE,EAAgBkH,GAAxC,mGACQhI,KAAK+iB,aADb,iDAEIxI,IAAU,GACVzZ,EAASE,KAAK8T,IAAIhU,EAAQd,KAAKwjB,sBAAsBhnB,QAHzD,sCAKaF,GALb,4FAMcgR,EAAM,EAAKmZ,uBACL,EAAK1D,aAPzB,mEAQc+D,EAAS,EAAK7F,YAAY9Q,UACzBlN,OAAOlB,IAAI,GAAK,IACvB+kB,EAAO/hB,MAAMhD,IAAI,GAAK,IACtB+kB,EAAO9e,SAAS+R,SAAS/R,GAEzB,EAAKqZ,YAAYhf,SAASykB,GAC1BtjB,IAAKG,GAAGmjB,EAAO/hB,MAAO,CAACkE,EAAG,IAAKC,EAAG,IAAKrF,SAAU+d,GAAY9d,KAAMC,IAAOC,WAC1ER,IAAKG,GAAGmjB,EAAO/hB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAO4R,GAAY/d,SAAU+d,GAAY9d,KAAMC,IAAOC,WACzFR,IAAKG,GAAGmjB,EAAO9e,SAAU,CAACiB,ErCxkBZ,GqCwkBeqE,EAAI,GAAiBpE,ErCxkBpC,GqCwkBuCoE,EAAI,GAAiBzJ,SAZjE,EAYiFC,KAAMC,IAAOC,SAAUC,WAAY,WACzH,EAAK8iB,gBAAgBD,EAAO9e,SAAU,GACtC,EAAKgf,cAAclqB,KAAKwQ,GACxB,EAAK+T,YAAYnf,YAAY4kB,GAC7B,EAAK7F,YAAY5Q,QAAQyW,MApBrC,UAsBc,EAAK9W,MAAM,IAtBzB,2CAKa1T,EAAI,EALjB,YAKoBA,EAAIwE,GALxB,0CAKaxE,GALb,4FAKgCA,IALhC,uBAwBIkH,IAAK2N,YAAY,KAAM,WACnBoJ,IAAU,MAzBlB,iDA1gBJ,4GAsiBI,WAA6BvS,EAA2BgI,GAAxD,6FACUjD,EAAImD,GAAeC,UACvBnI,SAAS+R,SAAS/R,GACpBhI,KAAKqhB,YAAYhf,SAAS0K,GAH9B,SAIUA,EAAEqD,QAAQJ,GAJpB,OAKIE,GAAeG,QAAQtD,GAL3B,gDAtiBJ,+EA6iBM,WAEM/M,KAAKinB,kBACLjnB,KAAKinB,iBAAiBzU,OAEtBxS,KAAK2kB,aAAanhB,IAAKC,aAAazD,KAAK2kB,aACzC3kB,KAAK4kB,WAAWphB,IAAKC,aAAazD,KAAK4kB,WAC3CphB,IAAKC,aAAazD,KAAK+hB,SACnB/hB,KAAK4kB,YACL5kB,KAAKwhB,IAAItf,YAAYlC,KAAK4kB,WAC1B5kB,KAAK4kB,UAAUvV,SAEfrP,KAAK2kB,cACL3kB,KAAKohB,cAAclf,YAAYlC,KAAK2kB,aACpC3kB,KAAK2kB,YAAYtV,QACjBrP,KAAK+hB,QAAQze,SAAU,GAE3BtD,KAAK2kB,iBAActf,EACnBrF,KAAK4kB,eAAYvf,EACjBrF,KAAKmjB,cAAW9d,IAhkBxB,yBAkkBM,WACErF,KAAKujB,YAAc9C,GAAOhD,KAC1Bzd,KAAKknB,sBApkBb,2BAskBM,WACElnB,KAAKkhB,SAASvZ,SAAQ,SAAC7I,EAAOM,GAC1BA,EAAIoZ,cAxkBhB,2BA2kBM,WACIxY,KAAKmnB,gBACLnnB,KAAKonB,cACLpnB,KAAK+iB,cAAe,EACpB/iB,KAAKuY,QAAS,EACdvY,KAAKijB,UAAUtb,SAAQ,SAACpJ,GACtBA,EAAE8Q,WAEJrP,KAAKijB,UAAU,GACfjjB,KAAKgiB,cAAc9Y,GAAK,IAAMlJ,KAAKgiB,cAAcrf,OACjD3C,KAAKgiB,eAAiBhiB,KAAKgiB,cAAc3M,QACzCrV,KAAK6iB,gBAAkB7iB,KAAK6iB,eAAevS,oBAC3CtQ,KAAK6iB,oBAAiBxd,EACtBrF,KAAKykB,SAAWzkB,KAAKykB,QAAQnU,oBAC7BtQ,KAAK0kB,WAAa1kB,KAAK0kB,UAAUpU,sBAzlB3C,wBA2lBM,YACOtQ,KAAK4iB,WAAa5iB,KAAK4iB,WAAa5iB,KAAK4iB,UAAUyE,YACxDrnB,KAAK4iB,UAAU0E,WACftnB,KAAKunB,eA9lBb,uBAgmBI,WAAmB,WACf,IAAIvnB,KAAK+iB,eAAgB/iB,KAAKuY,OAA9B,CACAzY,EAAOuB,KAAK,aACZrB,KAAKuY,QAAS,EACd,IAAMta,EAAI+B,KAAKsV,UAAU9Y,OACnB8Q,EAAMtN,KAAKykB,QAAQxe,KAAM+B,SACzB9J,EAAI,CAAC+K,EAAEqE,EAAI,GAAIpE,EAAEoE,EAAI,IAC3BtN,KAAKgiB,cAAc1W,OACnB9H,IAAKG,GAAG3D,KAAKgiB,cAAe,CAAC9Y,GAAI,IAAKrF,SAAU,MAChDL,IAAKG,GAAGzF,EAAG,CAACgL,GAAa,GAAFjL,EAAN,KrCvpBC,GqCupBuB+R,MAAO,GAAKnM,SAAS,EAAGC,KAAMC,IAAOC,SAAU8L,SAAU,WACzF,EAAK2U,QAAQxe,KAGd,EAAKwe,QAAQxe,KAAK+B,SAAW,CAAC9J,EAAE+K,EAAG/K,EAAEgL,GAFrC1F,IAAKC,aAAavF,IAIvB+F,WAAY,WACX,EAAKwgB,QAAQxe,KAAM+B,SAAW,CAAC,GAAG,MAClC,EAAKwf,gBACL,EAAK9D,qBACLlgB,IAAKG,GAAG,EAAKqe,cAAe,CAAC9Y,GAAI,IAAM,EAAK8Y,cAAcrf,OAAQkB,SAAU,KAC5E,EAAK0U,QAAS,QApnB1B,yBAunBI,WAAuC,IAApBkP,EAAoB,wDAC9BA,GAIDjkB,IAAKG,GAAG3D,KAAM,CAACiJ,EAAE,KAAMye,MAAM,EAAMC,OAAQ,EAAG9jB,SAAU,MACxDL,IAAKG,GAAG3D,KAAM,CAACiJ,EAAE,KAAMye,MAAM,EAAMC,OAAQ,EAAG9jB,SAAU,QAJxDL,IAAKG,GAAG3D,KAAM,CAACkJ,EAAE,KAAMwe,MAAM,EAAMC,OAAQ,EAAG9jB,SAAU,MACxDL,IAAKG,GAAG3D,KAAM,CAACkJ,EAAE,KAAMwe,MAAM,EAAMC,OAAQ,EAAG9jB,SAAU,SA1nBpE,oBAgoBI,SAAc4D,GAAc,WACxB,IAAI7C,EAAaE,SAAU9E,KAAKsjB,YAAhC,CACAtjB,KAAK4nB,YACL,IAAIC,EAAe7nB,KAAKwmB,YAAcxmB,KAAKwmB,WAAWsB,kBAAeziB,EACrErF,KAAK4jB,MAAM,IACX,IAAI5O,GAAS,EACT+S,GAAc,EACdC,EAA2B,GAuC/B,GAtCAhoB,KAAKwjB,sBAAwB,GAC7BjhB,EAAMmF,OAAOC,SAAQ,SAAC1B,GAClB,IAAMqH,EAAMrH,EAAK+B,SACX/B,EAAa2B,SAAyBgI,WAAa3J,IAAS,EAAKwe,QAAQxe,OACvEqH,EAAI,IAAK,KAAqBA,EAAI,IAAMiS,EAAcC,YAAc,IrC1rB9D,MqC2rBJvZ,EAAa2B,SAAyB2F,MAAMjI,SAAWV,EAAaU,SACtEW,EAAKiJ,aAAe,GAGxBjJ,EAAKoF,OAASoC,OAAKe,SAAWlB,EAAI,IAAMiS,EAAcC,YrC/rB5C,IqC+rBuEvZ,EAAa2B,WAAc3B,EAAa2B,SAASqgB,UAClI,EAAKzE,sBAAsB1mB,KAAKmJ,EAAK+B,WAEpC,EAAK+a,cAAgB9c,EAAKoF,OAASoC,OAAKe,SAAWlB,EAAI,GAAK,EAAKsW,OAClE,EAAKA,KAAOtW,EAAI,IAEhB,EAAKyV,cAAgB9c,EAAKoF,OAASoC,OAAKe,SAAWlB,EAAI,IAAMiS,EAAcC,YrCrsBjE,KqCssBVxK,GAAS,GAET,EAAK+N,cAAgB9c,EAAKoF,OAASoC,OAAKe,SAAWlB,EAAI,GAAgC,GAA1BiS,EAAcC,YrCxsBjE,IqCysBRvZ,EAAa2B,SAA2ByH,SAEzC,EAAK0T,cAAgB8E,GAAgB5hB,EAAKoF,OAASoC,OAAKe,SAAYvI,EAAa2B,WAAc3B,EAAa2B,SAASqgB,UACtHJ,EAAalgB,SAAQ,SAACugB,GACdA,EAAMC,SAAS7a,EAAI,GAAIA,EAAI,KAC3B0a,EAAiBlrB,KAAKmJ,UAMjCjG,KAAK+iB,cAAgB/iB,KAAK4iB,WAAa5iB,KAAK4iB,UAAU5a,SAASkB,EAAI,KAAOlJ,KAAKqjB,eAChF0E,GAAc,GAGd/nB,KAAK4iB,YAAcmF,GACnB/nB,KAAK4iB,UAAUlQ,oBAEnB1S,KAAK0Z,SAAS4C,SACVtc,KAAK+iB,eAAiB/N,IAAWhV,KAAKuhB,cAAcje,QAAS,CAE7DtD,KAAKgiB,cAAc9Y,GAAK,IAAMlJ,KAAKgiB,cAAcrf,OACjD3C,KAAKkiB,UAAU7M,QACfrV,KAAKmiB,UAAUpQ,QACf/R,KAAK0mB,kBACL1mB,KAAK2jB,KAAO,EACZ3jB,KAAK4jB,MAAM,IACX5jB,KAAK2hB,SAASre,SAAU,EACxBtD,KAAK8hB,SAASxe,SAAU,EACxB,IAAMse,EAAO5hB,KAAKooB,eACXC,EAAazjB,EAAaO,OAAOnF,KAAK8iB,SAAtCuF,UACDjL,EAAawE,EAAOyG,EAAarnB,KAAK4c,MAAM,KAAQ,EAAKgE,EAAOyG,IAAe,EACrFroB,KAAKsoB,qBAAqBC,GAAqBC,SAAUxoB,KAAKsJ,MAAQ8T,EAAW,CAAC9T,MAAOtJ,KAAKsJ,MAAOsY,OAAMxE,cAC3Gpd,KAAKqjB,cAAe,EACpBxX,KACA7L,KAAKuhB,cAAcjW,MAAK,EAAMtL,KAAKsJ,MAAO8T,EAAWpd,KAAKikB,iBAAiBwE,iBAAiB,WACxF,EAAKnf,OAAS8T,EACd,EAAKsL,oBACN1oB,KAAK8iB,QAAS9iB,KAAKgkB,gBACtBhkB,KAAKkiB,UAAU2B,SACf7jB,KAAKijB,UAAU,GAGnB,IAAIjjB,KAAKuY,SAAUvY,KAAK+iB,aAAxB,CAIA,GAHI/iB,KAAK4iB,WAAamF,GAClB/nB,KAAK4iB,UAAU+F,mBAEd3oB,KAAKkiB,UAAU7N,SAAU,CAC1BrU,KAAK2jB,MAAM3iB,KAAKC,MAAW,GAALwG,GACtB,IAAMhI,EAAIO,KAAK2jB,KAAK3jB,KAAKikB,iBAAiBrC,KAC1C5hB,KAAKkiB,UAAU0G,YAAYnpB,EAAEO,KAAKikB,iBAAiBrC,MACzC,IAANniB,IACAO,KAAKkiB,UAAU0G,YAAY,GAC3BZ,EAAmB,GACnBhoB,KAAKunB,aAGb,GAAIS,EAAiBxrB,OAAS,EAAG,CAC7B,IAAM2oB,EAA8B,GACpC6C,EAAiBrgB,SAAQ,SAAC1B,GACtB,IAAM6E,EAAM7E,EAAa2B,SACzBud,EAAUroB,KAAKgO,EAAE9C,UACjB8C,EAAE+d,MAAK,GACP,EAAK9B,gBAAgBjc,EAAE9C,SAAwB,GAAdhH,KAAKE,aAE1ClB,KAAK8oB,oBAAoB3D,QA5tBrC,0BA+tBI,WACI,OAAQ,IAAIxR,MAAOC,UAAY5T,KAAKwiB,iBAhuB5C,6BAkuBI,WAA0B,WACtBlhB,QAAQqJ,IAAI,WAAW3K,KAAK8iB,QAAS9iB,KAAKsJ,OACtC1E,EAAaO,OAAO3I,OAASwD,KAAK8iB,QAAU,MACvC9iB,KAAKikB,iBAAiB3a,OAAStJ,KAAKsJ,MAAQtJ,KAAKikB,iBAAiB3a,SACnEtJ,KAAKikB,iBAAiB3a,MAAQtJ,KAAKsJ,MACnC0B,EAAe,GAAD,OAAIhL,KAAKikB,iBAAiB7kB,KAAMY,KAAKsJ,MAAMlI,YACzDE,QAAQqJ,IAAI,cAEhB3K,KAAK8iB,SAAS,EACT9iB,KAAKikB,iBAAiB3a,OAAyC,IAAhCtJ,KAAKikB,iBAAiB3a,QACtDtJ,KAAKikB,iBAAiB3a,MAAQ,EAC9B0B,EAAe,GAAD,OAAIhL,KAAKikB,iBAAiB7kB,KAAM,OAGtDY,KAAKmiB,UAAUiC,QAAUpkB,KAAKikB,iBAAiB9B,UAC/CniB,KAAKsJ,MAAQ,EACbtJ,KAAKoiB,WAAW9Y,MAAQ,EACxB8B,GAAQhC,EAAOY,cAAca,MAAK,WAC9B,EAAKke,kBACL,EAAKC,oBAAoBne,MAAK,WAC1B,IAAMkZ,EAAO,EAAKC,eAClB,EAAKvB,WAAWnX,KAAK,EAAK2Y,iBAAkBF,GAAMlZ,MAAK,WAC/C,EAAKoZ,iBAAiBF,MACtB,EAAKpC,SAASuC,QAAQH,EAAK,GAAIlJ,GAASpL,WAAWsU,EAAK,IAAKlJ,GAASpL,WAAWsU,EAAK,KACtF,EAAKjC,SAASoC,QAAQH,EAAK,GAAIlJ,GAASpL,WAAWsU,EAAK,IAAKlJ,GAASpL,WAAWsU,EAAK,KACtF,EAAKpC,SAASre,SAAU,EACxB,EAAKwe,SAASxe,SAAU,EACxB,EAAK6gB,oBAAoB,CAACJ,KAAKA,EAAK3iB,cAEpC,EAAK+iB,sBAETvY,KACA,EAAKyX,cAAe,EACpB,EAAKK,qBACL,EAAKW,iBACL,EAAKrC,cAAc9Y,GAAK,IAAM,EAAK8Y,cAAcrf,OACjD,EAAKuf,UAAU3N,WACf,EAAKiO,gBAAiB,IAAI7O,MAAOC,gBAGzChP,EAAaE,QAAS,KAE1B9E,KAAK+iB,cAAe,IA5wB5B,iCA8wBI,SAA4BkG,GACxB3nB,QAAQqJ,IAAI,aAAa,QAAQ3K,KAAKikB,iBAAiB7kB,IAAI6pB,GAC3DC,GAAqBX,GAAqBY,MAAM,QAAQnpB,KAAKikB,iBAAiB7kB,IAAK,EAAG6pB,KAhxB9F,kCAkxBI,SAA6BrrB,EAA8D0L,EAAe2f,GACtG3nB,QAAQqJ,IAAI,cAAc,QAAQ3K,KAAKikB,iBAAiB7kB,IAAIkK,GAC5D4f,GAAqBtrB,EAAE,QAAQoC,KAAKikB,iBAAiB7kB,IAAKkK,EAAO2f,KApxBzE,yDAsxBI,WAA2B7V,EAAewO,GAA1C,gGACIlO,GAAU,OAAQ,UAAW,WAAYN,GACrCwO,IACA5hB,KAAKwiB,gBAAkBZ,KAEvB5hB,KAAKyjB,iBAAmB7e,EAAaE,QAAU9E,KAAK+iB,cAL5D,iDAMI/iB,KAAKyjB,iBAAkB,EACvBzjB,KAAK2hB,SAASjV,UAAW,EACzB1M,KAAK8hB,SAASpV,UAAW,EAR7B,KASW0G,EATX,cAUasI,GAAUC,SAVvB,UAgBaD,GAAUE,KAhBvB,UA8BaF,GAAUG,OA9BvB,2BAWY7b,KAAKopB,sBAXjB,UAYkBppB,KAAKgQ,MAAM,GAZ7B,eAaYhQ,KAAK2hB,SAASjV,UAAW,EACzB1M,KAAK8hB,SAASpV,UAAW,EAdrC,oCAiBkBrB,EAAOrL,KAAKqpB,gBAClB9mB,EAAMmF,OAAOC,SAAQ,SAAC1B,GAClB,IAAMqjB,EAASrjB,EAAa2B,SACxB0hB,GAASA,EAAMje,OAASA,GACxBie,EAAMC,aArB1B,UAwBkBvpB,KAAKgQ,MAAM,GAxB7B,eAyBYhQ,KAAKwpB,cAzBjB,UA0BkBxpB,KAAKgQ,MAAM,GA1B7B,eA2BYhQ,KAAK2hB,SAASjV,UAAW,EACzB1M,KAAK8hB,SAASpV,UAAW,EA5BrC,oCA+BY5M,EAAOuB,KAAK,gBACZrB,KAAKkiB,UAAU2B,OAAO,IACtB7jB,KAAKgQ,MAAM,IAAInF,MAAK,WAChB,EAAK8W,SAASjV,UAAW,EACzB,EAAKoV,SAASpV,UAAW,KAnCzC,6BAuCI1M,KAAKyjB,iBAAkB,EAvC3B,iDAtxBJ,gHA+zBI,0GACUxa,EAAoB,IAAhBjI,KAAKE,SAAiB,IADpC,SAEUlB,KAAKypB,YAAYxgB,EAAGsW,EAAcC,YAAavW,GAAI,KAF7D,gDA/zBJ,qGAm0BI,WAA0B+I,EAAgBC,EAAgBC,EAAcC,GAAxE,uFACInS,KAAKohB,cAAc/e,SAASrC,KAAKskB,eACjCxkB,EAAOuB,KAAK,iBAFhB,SAGUrB,KAAKskB,cAAclU,QAAQ4B,EAAQC,EAAQC,EAAMC,GAH3D,gDAn0BJ,qFAw0BI,WAA+C,IAAnB9G,EAAmB,wDAAH,EACpCrL,KAAK4kB,WACL5kB,KAAKwhB,IAAItf,YAAYlC,KAAK4kB,WAE9B5kB,KAAKmjB,UAAsB,IAAV9X,EAAeA,EAAOrL,KAAKqpB,eAAc,GAEtDrpB,KAAK4kB,WADK,IAAVvZ,EACiBrL,KAAK0pB,cAAc,GAAI,GAAI1pB,KAAKmjB,UAAU,GAE1CnjB,KAAK0pB,cAAc,IAAK,GAAI1pB,KAAKmjB,UAAU,GAGhEnjB,KAAKwhB,IAAInf,SAASrC,KAAK4kB,YAET,IAAVvZ,GAEA7H,IAAKG,GAAG3D,KAAK4kB,UAAW,CAAC1b,GAAI,GAAIrF,SAAU,OAv1BvD,2BA01BI,WAAyC,IAAnB8lB,EAAmB,wDACrC,GAAIA,GAAa3pB,KAAKikB,iBAAiB2F,WAAWptB,OAAS,GAAKwE,KAAKE,SAAW,IAAM,CAClF,GAAgD,IAA5ClB,KAAKikB,iBAAiB2F,WAAWptB,OACjC,OAAQwE,KAAKE,SAAW,GAAO+M,GAAYI,SAAWJ,GAAYmV,aAC/D,GAAgD,IAA5CpjB,KAAKikB,iBAAiB2F,WAAWptB,OACxC,OAA4C,IAAxCwD,KAAKikB,iBAAiB2F,WAAW,GAC1B3b,GAAYI,SAEZJ,GAAYmV,aAK/B,OAAOpiB,KAAKC,MAAMD,KAAKE,SAAYlB,KAAKikB,iBAAiB/O,QAAW,IAv2B5E,4BAy2BI,WAA0C,IAAnB2U,EAAmB,wDAAH,EAC9B7pB,KAAKmjB,WACNnjB,KAAKmjB,SAAWnjB,KAAKqpB,eAAc,IAGnCrpB,KAAK2kB,aADK,IAAVkF,EACmB7pB,KAAK0pB,cAAc,GAAInK,EAAcC,YAAY,GAAIxf,KAAKmjB,UAAU,GAEpEnjB,KAAK0pB,aAAa,EAAGnK,EAAcC,YAAaxf,KAAKmjB,UAAU,GAGtFnjB,KAAK2kB,YAAY/U,WAAY,EAC7B5P,KAAKohB,cAAc/e,SAASrC,KAAK2kB,aACjC3kB,KAAK8pB,oBAAoBD,GAEzB7pB,KAAK+hB,QAAQ/Z,SAASjG,IAAI,EAAGwd,EAAcC,aAC3Cxf,KAAK+hB,QAAQze,SAAU,GAET,IAAVumB,IAEA7pB,KAAK+hB,QAAQ5e,MAAQ,EACrBK,IAAKG,GAAG3D,KAAK2kB,YAAa,CAAC1b,EAAG,EAAGC,EAAGqW,EAAcC,YAAa3b,SAAU,MACzEL,IAAKG,GAAG3D,KAAK+hB,QAAS,CAAC5e,MAAO,GAAKU,SAAU,SA93BzD,0DAi4BI,qHACUkmB,EADV,UACuB/pB,KAAK2kB,mBAD5B,aACuB,EAAkBtZ,KAC/B2e,EAAWhqB,KAAKmjB,SAF1B,SAGU,IAAIlZ,SAAc,SAACC,GACjB,EAAK0a,WAAWphB,IAAKG,GAAG,EAAKihB,UAAW,CAAC3b,EAAG,EAAGC,GAAI,GAAIrF,SAAU,KACjE,EAAK8gB,YACLnhB,IAAKG,GAAG,EAAKghB,YAAa,CAAC1b,GAAI,GAAIC,EAAG,IAAKrF,SAAU,GAAKI,WAAY,WAAMiG,OAE5E1G,IAAKG,GAAG,CAACuN,EAAE,GAAI,CAACA,EAAG,EAAGrN,SAAU,GAAKI,WAAY,WAAMiG,OAE3DpK,EAAOuB,KAAK,mBAVpB,OAYIrB,KAAKknB,oBACLlnB,KAAKmjB,SAAW6G,EAChBhqB,KAAKqkB,eAAe0F,GAdxB,gDAj4BJ,oEAi5BI,WACI,IAAME,EAAKjqB,KAAKkqB,QAAQ1nB,EAAIgE,SAASC,QAAQC,YAAYyjB,UAAUnuB,KAAKouB,QACpEpqB,KAAK+iB,cAAgBne,EAAaE,SAAW9E,KAAK2kB,aAAe3kB,KAAKyjB,iBAAmBzjB,KAAKsiB,SAAS6F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,IAAMlJ,KAAKuiB,QAAQ4F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,IAClKlJ,KAAK+hB,QAAQsI,KAAKJ,KAp5B1B,wBAs5BI,SAAqBld,GACjB,IAAMkd,EAAKjqB,KAAKkqB,QAAQnd,EAAE/Q,KAAKouB,QAC3BpqB,KAAK+iB,cAAgBne,EAAaE,QAAU9E,KAAKuiB,QAAQ4F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,KAC3ElJ,KAAKqiB,QAAQ8F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,GAC/BlJ,KAAKsqB,gBACGtqB,KAAKsiB,SAAS6F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,IACxClJ,KAAK4nB,eA55BjB,qBAg6BI,SAAkB7a,GAAG,WACXkd,EAAKjqB,KAAKkqB,QAAQnd,EAAE/Q,KAAKouB,QAC/B,KAAIpqB,KAAK+iB,cAAgBne,EAAaE,SAAW9E,KAAK2kB,aAAe3kB,KAAKyjB,iBAAmBzjB,KAAKsiB,SAAS6F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,IAAMlJ,KAAKuiB,QAAQ4F,SAAS8B,EAAGhhB,EAAGghB,EAAG/gB,IAAlK,CACAlJ,KAAK2kB,YAAYpW,WAAWd,OAAKe,QAAS,IAC1CxO,KAAK2kB,YAAYpX,MAAMjI,SAAWV,EAAaa,mBAC/C,IAAMyL,EAAIlR,KAAK2kB,YACf3kB,KAAK2kB,iBAActf,EACnBrF,KAAK+hB,QAAQze,SAAU,EAEvB,IAAMqL,EAAO3N,KAAKye,OAAOwK,EAAG/gB,EAAEqW,EAAcC,arCv9B1B,GqCu9BqDyK,EAAGhhB,ErCv9BxD,IqCy9BdiI,EAAEjL,OACFiL,EAAEjL,KAAKiJ,aAAe,EACtBgC,EAAEjL,KAAKskB,aAAa,CAHV,IAGiBvpB,KAAKqQ,IAAI1C,GAH1B,IAGuC3N,KAAKsQ,IAAI3C,KAC1D7O,EAAOuB,KAAK,iBAKhBrB,KAAKinB,iBAAmBzjB,IAAK2N,YAAY,IAAK,WAC1C,EAAK8V,sBAAmB5hB,EACzB,EAAKgf,oBAGR9hB,EAAMmF,OAAOC,SAAQ,SAAC1B,GACdA,GAASA,EAAa2B,UAAa3B,EAAa2B,SAASyD,OAAS4C,GAAYG,YAC5EnI,EAAa2B,SAAyB4iB,2BA17BxD,gCA87BI,WACI,IAAMhV,EAAQxV,KAAKikB,iBAAiBzO,MACpCxV,KAAKgiB,cAAc3M,QACnBrV,KAAKsV,UAAY,GACjB,IAAK,IAAI9X,EAAI,EAAGA,EAAIgY,EAAOhY,IAAK,CAC5BwC,KAAKsV,UAAU9X,GAAG,GAClB,IAAK,IAAIlB,EAAI,EAAGA,EAAI,EAAGA,IACnB0D,KAAKsV,UAAU9X,GAAGlB,GAAK0E,KAAKC,MAAMD,KAAKE,SAAWlB,KAAKikB,iBAAiB/O,QAAU,EAG1FlV,KAAKgiB,cAAcyI,SAASzqB,KAAKsV,aAx8BzC,2BA28BI,WAII,IAFA,IAAIrM,EACAC,GAAK,IACA1L,EAAI,EAAGA,EAAIwC,KAAKsV,UAAU9Y,OAAQgB,IAAK,CAC5CyL,GAAK,IACL,IAAK,IAAI3M,EAAI,EAAGA,EAAI0D,KAAKsV,UAAU9X,GAAGhB,OAAQF,IAAK,CAC/C,IAAMoZ,EAAI1V,KAAK0pB,aAAazgB,EAAEC,EAAElJ,KAAKsV,UAAU9X,GAAGlB,IAClD0D,KAAKohB,cAAc/e,SAASqT,GAC5BzM,GAAK,GAETC,GAAG,MAt9Bf,kDAy9BI,WAAqBnK,GAArB,yGACW,IAAIkL,SAAc,SAACC,GACtB1G,IAAK2N,YAAYpS,GAAG,WAChBmL,WAHZ,2CAz9BJ,4GAg+BI,kIAgBI,IAhBJ,EAC8ClK,KAAKikB,iBAAvCyG,EADZ,EACYA,YAAaxV,EADzB,EACyBA,OAAQ+N,EADjC,EACiCA,UACzB0H,GAAiB,EACjBC,EAAS,EACT3H,GAAaA,EAAUzmB,OAAS,GAChCymB,EAAUtb,SAAQ,SAACpJ,GACf,EAAKssB,eAAetsB,GAChBA,EAAE8M,OAASqV,GAAUoK,YACrBH,GAAiB,EACVpsB,EAAE8M,OAASqV,GAAUqK,SAC5BH,EAASrsB,EAAEuC,WAIjBkqB,EAAsB,GACtBC,EAA2B,GACxB3uB,EAAI,EAAGA,EAAIsuB,EAAQtuB,IAAK,CAE7B,IADIqC,EAAIqC,KAAKC,MAAMD,KAAKE,UAAYwpB,EAAc,KAC3CM,EAAUE,SAASvsB,IACtBA,EAAIqC,KAAKC,MAAMD,KAAKE,UAAYwpB,EAAc,KAElDM,EAAUluB,KAAK6B,GAEnBqB,KAAKmrB,YACI7uB,EAAI,EAxBjB,YAwBoBA,EAAIouB,GAxBxB,wBAyBcrf,EAAOrK,KAAKC,MAAMD,KAAKE,SAAWgU,GAAU,EAC5CQ,EAAI1V,KAAK0pB,aAA2B,GAAd1oB,KAAKE,SAAY,GAAG,IAAImK,GAChD2f,EAAUE,SAAS5uB,IACnB2uB,EAAUnuB,KAAK4Y,GAEnB1V,KAAKohB,cAAc/e,SAASqT,GA9BpC,UA+Bc1V,KAAKgQ,MAAM,MA/BzB,YAgCY2a,GAAkBruB,IAAM0E,KAAKC,MAAMypB,EAAY,GAhC3D,wBAiCY1qB,KAAKorB,kBAjCjB,UAkCkBprB,KAAKgQ,MAAM,GAlC7B,QAwBqC1T,IAxBrC,0BAqCSquB,EArCT,kCAsCc3qB,KAAKgQ,MAAM,GAtCzB,QAuCQhQ,KAAKorB,kBAvCb,WA0CIprB,KAAKgQ,MAAM,GAAGnF,MAAK,WACf,EAAKwgB,wBAGLJ,EAAUzuB,OAAS,GA9C3B,kCA+CcwD,KAAKgQ,MAAM,IA/CzB,yBAgDchQ,KAAKsrB,eAAeL,GAhDlC,iDAh+BJ,oEAmhCI,WAAsC,WAApBnqB,EAAoB,uDAAH,EAC/BhB,EAAOuB,KAAK,iBACRP,EAAS,GACTd,KAAKgQ,MAAM,IAAKnF,MAAK,WACjB/K,EAAOuB,KAAK,iBACRP,EAAS,GACT,EAAKkP,MAAM,IAAKnF,MAAK,WACjB/K,EAAOuB,KAAK,yBA1hCpC,2DAiiCI,WAA6BupB,GAA7B,4FACQtuB,EAAI,EADZ,KAEuBsuB,GAFvB,IAEI,IAFJ,iBAEaW,EAFb,QAGYA,IACA/nB,IAAKG,GAAG4nB,EAAOxmB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAS,GAAF1T,EAAOuH,SAAU,GAAKC,KAAM+a,IAAKf,QAAS7Z,WAAY,WAC5FsnB,EAAOC,uBAEXhoB,IAAKG,GAAG4nB,EAAOxmB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAO1T,EAAGuH,SAAU,GAAKC,KAAM+a,IAAKxM,SACvE/V,GAAK,MANb,uBAA2B,IAF/B,8CAWU0D,KAAKgQ,MAAM,IAXrB,gDAjiCJ,2EA8iCI,WACIhQ,KAAK4iB,UAAY5iB,KAAK0pB,aAAa,EAAE,KAAKzb,GAAYsE,WACtDvS,KAAK4iB,UAAUtW,GAAG,WAAYtM,KAAKyrB,WAAYzrB,MAC/CA,KAAKohB,cAAc/e,SAASrC,KAAK4iB,aAjjCzC,4BAmjCI,SAAuB8I,GACnB,GAAIA,EAASrgB,OAASqV,GAAUoK,aAAeY,EAASrgB,OAASqV,GAAUqK,OAA3E,CACA,IAAIxsB,OAA8B8G,EAClC,GAAIqmB,EAAS1jB,SACT,OAAO0jB,EAASrgB,MACZ,KAAKqV,GAAUiL,OACXptB,EAAI,IAAI4Z,GAAeuT,EAAS1jB,UAChC,MACJ,KAAK0Y,GAAUkL,OACXrtB,EAAI,IAAI8Z,GAAeqT,EAAS1jB,SAAU0jB,EAASpT,OAI3D/Z,IACAyB,KAAKohB,cAAc/e,SAAS9D,GAC5ByB,KAAKijB,UAAUnmB,KAAKyB,OAlkChC,wBAqkCI,WAAoB,iBAGhB,UAAAyB,KAAKkiB,iBAAL,SAAgB7M,QAChB,UAAArV,KAAKmiB,iBAAL,SAAgBpQ,QAChB/R,KAAK0mB,kBACL1mB,KAAK2jB,KAAO,EACZ3jB,KAAK4jB,MAAM,IACX5jB,KAAK2hB,SAASre,SAAU,EACxBtD,KAAK8hB,SAASxe,SAAU,EACxBtD,KAAKqjB,cAAe,EACpBrjB,KAAKsoB,qBAAqBC,GAAqBsD,KAAM,EAAG,CAACviB,MAAOtJ,KAAKsJ,MAAOsY,KAAM5hB,KAAKooB,eAAgBhL,UAAW,IAClHpd,KAAKsJ,MAAQ,EACbtJ,KAAKuhB,cAAcjW,MAAK,EAAOtL,KAAKsJ,MAAOwiB,OAAOC,iBAAkB/rB,KAAKikB,iBAAiBwE,iBAAiB,WACvG,EAAKuD,iBACNhsB,KAAK8iB,QAASpH,GAAU+B,MAC3B,UAAAzd,KAAKkiB,iBAAL,SAAgB2B,SAChB7jB,KAAKijB,UAAU,GACfre,EAAaE,QAAS,IAvlC9B,0BAylCI,WACI9E,KAAK+iB,cAAe,EACpBte,EAAawnB,QAAQjsB,KAAK8iB,WA3lClC,gEA6lCI,sHACI9iB,KAAK+oB,mBACCmD,EAAW,IAAIza,IAAa,KAAM,GAAI,IAAK,KAAM,IAC9ClE,MAAMjI,SAAWV,EAAaY,eACvCxF,KAAKohB,cAAc/e,SAAS6pB,IACtBC,EAAY,IAAI1a,GAAY,KAAM,GAAI,IAAK,KAAM,IAC7ClE,MAAMjI,SAAWV,EAAaY,eACxCxF,KAAKohB,cAAc/e,SAAS8pB,GAEtBC,EAAa,IAAI3a,IAAa,IAAK,IAAK,IAAK,IAAK,GACxDzR,KAAKohB,cAAc/e,SAAS+pB,GACtBC,EAAc,IAAI5a,GAAY,IAAK,IAAK,IAAK,IAAK,GACxDzR,KAAKohB,cAAc/e,SAASgqB,GACtBC,EAAc,IAAI7a,IAAa,IAAK,KAAM,IAAK,IAAK,GAC1DzR,KAAKohB,cAAc/e,SAASiqB,GACtBC,EAAc,IAAI9a,GAAY,IAAK,KAAM,IAAK,IAAK,GACzDzR,KAAKohB,cAAc/e,SAASkqB,GACtBC,EAAc,IAAI/a,GAAY,EAAG,KAAM,IAAK,IAAK,GACvDzR,KAAKohB,cAAc/e,SAASmqB,GAlBhC,UAoBUxsB,KAAKgpB,oBApBf,QAqBIpkB,EAAaC,SAAU,EArB3B,iDA7lCJ,0EAonCI,WACI7E,KAAKykB,QAAU,IAAIhT,GAAY,GAAI,IAAK,IAAK,GAAI,GAGjDzR,KAAKykB,QAAQpZ,KAAO4C,GAAYwe,SAChCzsB,KAAKohB,cAAc/e,SAASrC,KAAKykB,SACjCzkB,KAAK0kB,UAAY,IAAIjT,GAAY,GAAI,IAAK,IAAK,GAAI,GACnDzR,KAAKohB,cAAc/e,SAASrC,KAAK0kB,aA3nCzC,8BA+nCI,WACI1kB,KAAK6iB,eAAiB,IAAIpR,GAAY,EAAG,IAAK,IAAK,IAAK,GACxDzR,KAAKohB,cAAc/e,SAASrC,KAAK6iB,kBAjoCzC,0BAmoCI,SAAqB5Z,EAAWC,EAAWmC,GAAsC,IAAxBlM,IAAwB,yDAC7E,OAAIkM,IAAS4C,GAAYsE,UACd,IAAID,GAAUrJ,EAAGC,GACjBmC,IAAS4C,GAAYI,SACrB,IAAIsR,GAAS1W,EAAGC,EAAG/J,GAEvB,IAAI8O,GAAYhF,EAAGC,EAAGmC,EAAMlM,KAzoC3C,4DA6oCI,6FACQa,KAAKwmB,YACDxmB,KAAKwmB,aACLxmB,KAAKwmB,WAAWnX,QAChBrP,KAAKshB,eAAepf,YAAYlC,KAAKwmB,YACrCxmB,KAAKwmB,gBAAanhB,GAG1BrF,KAAKujB,YAAc9C,GAAOhD,KAR9B,gDA7oCJ,yEAwpCI,SAAsBhW,GAClB,IAAMilB,EAA0B,CAC5BjlB,OACAklB,MAAO,CACL7rB,OAAQ,EACRqkB,UAAW,KAUjB,OAPAuH,EAAIC,MAAM7rB,OAAS6D,EAAanI,OAChCwD,KAAKsc,OAAO7U,GACRilB,EAAIC,MAAM7rB,OAAS,GACnB6D,EAAagD,SAAQ,SAAC1B,GAClBymB,EAAIC,MAAMxH,UAAUroB,KAAOmJ,EAAa2B,SAAyBI,aAGlE0kB,IAvqCf,6BAyqCI,SAAuBvqB,GACnBnC,KAAK4sB,eAAejlB,SAAQ,SAAC3L,GAAD,OAAUA,EAAKstB,MAAM9Y,SAASxU,EAAK0U,UAC/D1Q,KAAK4sB,eAAiB,GAEtB5sB,KAAKgnB,cAAcrf,SAAQ,SAAC2F,GACxB,IAAM5F,EAASnF,EAAMsqB,QAAQvf,EAAK/K,EAAMmF,OAAQ,GAChD,GAAIA,GAAUA,EAAOlL,OAAS,EAAG,CAC7B,IAAM8sB,EAAS5hB,EAAO,GAAWE,SAC7B0hB,GAASA,aAAiBrb,IAAeqb,EAAMje,OAAS4C,GAAYsE,YACpEpQ,EAAOwqB,MAAM7rB,QAAUwoB,EAAMT,QAEjCnhB,EAAOC,SAAQ,SAACmD,GACZ,IAAMwe,EAASxe,EAAUlD,SACzBzF,EAAOwqB,MAAMxH,UAAUroB,KAAKwsB,EAAMthB,iBAI1C7F,EAAOwqB,MAAM7rB,OAAS,GACtBd,KAAK8oB,oBAAoB3mB,EAAOwqB,MAAMxH,WAE1CnlB,KAAKgnB,cAAgB,KA7rC7B,wBA2xCI,SAAkB8F,GACd,IAAMC,EAAcD,EAAIC,MAClBC,EAAcF,EAAIE,MAClBC,EAAaF,EAAcnlB,SAC3BslB,EAAaF,EAAcplB,SAC7BqlB,GAAaC,GAAaD,aAAqBhf,IAAeif,aAAqBjf,IAC/EsR,EAAc4N,SAASF,EAAWC,KAElCD,EAAUlc,mBAAV,OAAoCmc,GACpCA,EAAUnc,mBAAV,OAAoCkc,MApyCpD,0BAwyCI,SAAoBH,GAChB,IAAMC,EAAcD,EAAIC,MAClBC,EAAcF,EAAIE,MAClBC,EAAaF,EAAcnlB,SAC3BslB,EAAaF,EAAcplB,SACjC,GAAIqlB,GAAaC,EAAW,CACxB,GAAI3N,EAAc6N,OAAOH,EAAWC,GAEhC,YADAltB,KAAKqtB,gBAGT,GAAIJ,aAAqBnb,IAAiBob,aAAqBpb,GAAe,CAC1E,IAAMwX,EAAQ/J,EAAc+N,iBAAiBL,EAAWC,GACpD5D,GAASA,aAAiBrb,KAC1Bqb,EAAMT,OACN7oB,KAAK+mB,gBAAgBuC,EAAMthB,SAAwB,IAAdhH,KAAKE,UAC1ClB,KAAKqlB,aAAaiE,EAAMthB,SAASiB,EAAGqgB,EAAMthB,SAASkB,EAAG+E,GAAYqX,aAG1E,IAAMiI,EAAUhO,EAAciO,WAAWP,EAAWC,GACpD,GAAIK,EAAS,CACT,IAAME,EAAcF,IAAYN,EAAaC,EAAYD,EACrDQ,aAAsBxf,IAAewf,EAAWC,gBAAkBD,EAAWxF,UAAYwF,EAAWpiB,OAAS4C,GAAYC,sBAAwBuf,EAAWpiB,OAAS4C,GAAYE,sBACjLsf,EAAW5E,OACX7oB,KAAK+mB,gBAAgB0G,EAAWzlB,SAAwB,IAAdhH,KAAKE,UAC/ClB,KAAKqlB,aAAaoI,EAAWzlB,SAASiB,EAAGwkB,EAAWzlB,SAASkB,EAAG+E,GAAYqX,aACrEiI,aAAmBtf,KAAoC,IAApBwf,EAAWpiB,MAAcoiB,EAAWpiB,OAAS4C,GAAYwe,UAAYgB,EAAWpiB,OAAS4C,GAAYC,sBAAwBuf,EAAWpiB,OAAS4C,GAAYE,wBACvMof,EAAQ1E,OACR7oB,KAAK+mB,gBAAgBwG,EAAQvlB,SAAwB,IAAdhH,KAAKE,WAGpD,IAAMysB,EAAQpO,EAAcqO,eAAeX,EAAWC,GACtD,GAAIS,EAGA,OAFAA,EAAM9E,YACN7oB,KAAK6tB,aAIT,GAAIZ,aAAqBhf,IAAeif,aAAqBjf,KACrDsR,EAAc4N,SAASF,EAAWC,KAClCD,EAAUlc,mBAAmBhP,IAAImrB,GAAW,GAC5CA,EAAUnc,mBAAmBhP,IAAIkrB,GAAW,IAG5C1N,EAAcuO,eAAeb,EAAWC,IAIxC,OAHAltB,KAAKqlB,aAAa4H,EAAUjlB,SAASiB,EAAGgkB,EAAUjlB,SAASkB,EAAG+E,GAAYqX,YAC1E2H,EAAUpE,YACVqE,EAAUrE,OAKlB,IAAMiE,EAAIiB,OAAe/xB,OAAU8wB,EAAIkB,OAAehyB,KAAM,OAQ5D,IrCj5Cc,GqC24CViyB,OAAKC,SAASpB,EAAIC,MAAM/kB,SAAU8kB,EAAIC,MAAMoB,kBAAiC,IrC34CnE,GqC44CVF,OAAKC,SAASpB,EAAIE,MAAMhlB,SAAU8kB,EAAIE,MAAMmB,kBAAiC,KAC7EruB,EAAOsR,WAAW,YAAa,GAI/B6b,GAAaC,EAAW,CACxB,IAAMkB,EAAoB7O,EAAc8O,aAAapB,EAAWC,GAChE,GAAIkB,GAAqBA,EAAkBnoB,KAAM,CAC7C,IAAMqoB,EAAiBF,IAAsBnB,EAAaC,EAAYD,EAStE,GARAmB,EAAkBG,gBACdD,aAAyBjW,IAAkBiW,EAAcjjB,OAAS4C,GAAYE,sBAC9EmgB,EAAcE,iBACdxuB,KAAKqlB,aAAaiJ,EAActmB,SAASiB,EAAGqlB,EAActmB,SAASkB,EAAG+E,GAAYqX,YAClFtlB,KAAKwpB,YAAYxoB,KAAKE,SAAW,KAC1BotB,EAAcjjB,OAAS4C,GAAYC,sBAC1ClO,KAAKwpB,YAAYxoB,KAAKE,SAAW,IAEjC+rB,EAAU5hB,OAAS4C,GAAYsE,WAAa2a,EAAU7hB,OAAS4C,GAAYsE,UAC3E,GAAIgN,EAAc4N,SAASF,EAAWC,IAClCD,aAAqBhf,IAAeif,aAAqBjf,GAAa,CAClEgf,EAAUrd,WAAY,EACtBsd,EAAUtd,WAAY,EACtBqd,EAAUsB,gBACVrB,EAAUqB,gBACV,IAAM7d,EAAQ0d,EAAkB1d,MAChC0d,EAAkB9d,oBAClBtQ,KAAK4sB,eAAe9vB,KAAK,CACrBwsB,MAAO8E,IAAsBnB,EAAYC,EAAYD,EACrDvc,eAED4d,EAAcjjB,OAAS4C,GAAYG,YAC1CggB,EAAkB9G,eAGvB,CAQH,GAPI2F,aAAqBhf,IAAegf,EAAUrd,WAC9Cqd,EAAUsB,gBAEVrB,aAAqBjf,IAAeif,EAAUtd,WAC9Csd,EAAUqB,gBAGVtB,EAAU5hB,OAAS4C,GAAYsE,WAAa2a,EAAU7hB,OAAS4C,GAAYsE,UAAW,OAC1F,GAAI0a,aAAqBhf,IAAeif,aAAqBjf,IACzDsR,EAAc4N,SAASF,EAAWC,KAAeD,EAAUvc,QAAUwc,EAAUxc,OAASuc,EAAUrd,WAAasd,EAAUtd,WAC7H,CACI,IAAMA,EAAaqd,EAAUrd,UAAaqd,EAAYC,EAChDuB,EAAgB7e,IAAcqd,EAAaC,EAAYD,EAC7Drd,EAAUA,WAAY,EACtB6e,EAAa7e,WAAY,EACrBA,EAAU3J,OACV2J,EAAU3J,KAAKiJ,aAAe,GAE9Buf,EAAaxoB,OACbwoB,EAAaxoB,KAAKiJ,aAAe,GAGrC,IAAMwB,EAAQd,EAAUc,MACxBd,EAAUU,oBACVtQ,KAAK4sB,eAAe9vB,KAAK,CAAEwsB,MAAOmF,EAAc/d,cAGpD,CACI,IAAMge,EAAiBnP,EAAcoP,kBAAkB1B,EAAWC,GAClE,GAAIwB,EACA1uB,KAAKwpB,YAAYxoB,KAAKE,SAAW,IACjCwtB,EAAeF,iBACfxuB,KAAKqlB,aAAaqJ,EAAe1mB,SAASiB,EAAGylB,EAAe1mB,SAASkB,EAAG+E,GAAYqX,iBACjF,GAAI2H,aAAqBhf,IAAeif,aAAqBjf,GAAa,CAC7E,IAAM0f,EAAQpO,EAAcqP,oBAAoB3B,EAAWC,GACvDS,GACAA,EAAMrG,mB,EAr6CtC,uBAgsCI,SAAyB2F,EAA0BC,GAC/C,QAAQD,EAAU5hB,OAAS6hB,EAAU7hB,MAAQ4hB,EAAU5hB,OAAS4C,GAAYI,UAAY6e,EAAU7hB,OAAS4C,GAAYI,UACpG,IAAnB4e,EAAU5hB,MAAiC,IAAnB6hB,EAAU7hB,MACjC4hB,EAAUhF,UAAaiF,EAAUjF,UAClCgF,EAAU5hB,OAAS4C,GAAYC,sBAAwBgf,EAAU7hB,OAAS4C,GAAYC,sBACtF+e,EAAU5hB,OAAS4C,GAAYE,sBAAwB+e,EAAU7hB,OAAS4C,GAAYE,sBACtF8e,EAAU5hB,OAAS4C,GAAYG,YAAc8e,EAAU7hB,OAAS4C,GAAYG,cAtsCpF,wBAwsCI,SAA0B6e,EAA0BC,GAChD,OAAID,EAAU5hB,OAAS4C,GAAYmV,cAAgB8J,EAAU7hB,OAAS4C,GAAYmV,aAE1E6J,EAAU5hB,OAAS4C,GAAYmV,aACxB6J,EAEAC,OAGX,IAjtCZ,oBAotCI,SAAsBD,EAA0BC,GAC5C,OAAKD,EAAU5hB,OAAS4C,GAAYsE,WAAa2a,EAAU7hB,OAAS4C,GAAYwe,UAC3ES,EAAU7hB,OAAS4C,GAAYsE,WAAa0a,EAAU5hB,OAAS4C,GAAYwe,SAExEQ,EAAU5hB,OAAS4C,GAAYwe,SACxBQ,EAEAC,OAGX,IA9tCZ,4BAiuCI,SAA8BD,EAA0BC,GACpD,OAAKD,EAAU5hB,OAAS4C,GAAYsE,WAAa2a,EAAU7hB,OAAS4C,GAAYG,YAC3E8e,EAAU7hB,OAAS4C,GAAYsE,WAAa0a,EAAU5hB,OAAS4C,GAAYG,WAExE6e,EAAU5hB,OAAS4C,GAAYG,WACxB6e,EAEAC,OAGX,IA3uCZ,4BA8uCI,SAA8BD,EAA0BC,GACpD,OAASD,EAAU5hB,OAAS4C,GAAYI,UAAY6e,EAAU7hB,OAAS4C,GAAYG,aAAe8e,EAAUjF,UACnGiF,EAAU7hB,OAAS4C,GAAYI,UAAY4e,EAAU5hB,OAAS4C,GAAYG,aAAe6e,EAAUhF,WAhvCpH,8BAkvCI,SAAgCgF,EAA0BC,GACtD,OAAID,aAAqBnb,IAAiBob,EAAUQ,gBAAkBR,EAAUjF,SAErEiF,EAEFA,aAAqBpb,IAAiBmb,EAAUS,gBAAkBT,EAAUhF,SAE1EgF,OAGP,IA5vCZ,0BA+vCI,SAA4BA,EAA0BC,GAClD,OAAID,aAAqBhf,IAAegf,EAAUrd,WAAgC,IAAnBqd,EAAU5hB,KAC9D4hB,EACAC,aAAqBjf,IAAeif,EAAUtd,WAAgC,IAAnBsd,EAAU7hB,KACrE6hB,OAEP,IArwCZ,+BAwwCI,SAAiCD,EAA0BC,GACvD,OAAID,aAAqBhf,IAAegf,EAAUrd,WAAasd,aAAqB7U,IAAkB6U,EAAU7hB,OAAS4C,GAAYE,qBAE1H+e,EACAA,aAAqBjf,IAAeif,EAAUtd,WAAaqd,aAAqB5U,IAAkB4U,EAAU5hB,OAAS4C,GAAYE,qBACjI8e,OAEP,IA/wCZ,iCAkxCI,SAAmCA,EAAwBC,GACvD,OAAID,EAAUrd,WAAasd,EAAU7hB,OAAS4C,GAAYG,WAC/C6e,EACAC,EAAUtd,WAAaqd,EAAU5hB,OAAS4C,GAAYG,WACtD8e,OAEP,K,mFAxxCZ,GAAmCphB,I,s8CAAtByT,G,cACmB,KCnFzB,IAAMsP,GAAb,a,sRAAA,U,MAAA,QAII,aAAc,a,4FAAA,eACV,gBADU,oEAEV,EAAK5e,UAAYpN,SAAOC,KAAKC,UAAQD,KAAK,yBAC1C,EAAKmN,UAAUhN,OAAOlB,IAAI,IAC1B,EAAKkO,UAAUlL,MAAMhD,IAAI,EAAG,GAC5B,EAAKkO,UAAUjI,SAASkB,EAAmC,IAA9BtE,EAAaM,eAAqB,IAC/D,EAAK+K,UAAU9M,MAAQ,EACvB,EAAKd,SAAS,EAAK4N,WAEnB,EAAK6e,KAAOjsB,SAAOC,KAAKC,UAAQD,KAAK,yBACrC,EAAKgsB,KAAK9mB,SAASjG,KAAK,KAAM,KAC9B,EAAK+sB,KAAK3rB,MAAQ,EAClB,EAAKd,SAAS,EAAKysB,MAEnB,EAAKC,KAAOlsB,SAAOC,KAAKC,UAAQD,KAAK,oBACrC,EAAKisB,KAAK9rB,OAAOlB,IAAI,IACrB,EAAKgtB,KAAK/mB,SAASjG,IAAI,GAAI,KAC3B,EAAKgtB,KAAKhqB,MAAMhD,IAAI,EAAG,GACvB,EAAKgtB,KAAK5rB,MAAQ,EAClB,EAAKd,SAAS,EAAK0sB,MAnBT,EAJlB,O,EAAA,G,EAAA,oBAyBI,WACI/uB,KAAKiQ,UAAUjI,SAASkB,EAAmC,IAA9BtE,EAAaM,eAAqB,IAC/DlF,KAAKiQ,UAAUlL,MAAMhD,IAAI,EAAG,GAC5B/B,KAAKiQ,UAAU9M,MAAQ,EACvBnD,KAAK8uB,KAAK9mB,SAASjG,KAAK,KAAM,KAC9B/B,KAAK8uB,KAAK3rB,MAAQ,EAClBnD,KAAK+uB,KAAK/mB,SAASjG,IAAI,GAAI,KAC3B/B,KAAK+uB,KAAKhqB,MAAMhD,IAAI,EAAG,GACvB/B,KAAK+uB,KAAK5rB,MAAQ,EAElBrD,EAAOuB,KAAK,qBACZmC,IAAKG,GAAG3D,KAAKiQ,UAAW,CAAC9M,MAAO,EAAGU,SAAU,KAC7CL,IAAKG,GAAG3D,KAAKiQ,UAAUlL,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAGrF,SAAU,EAAGC,KAAMkrB,IAAQlR,UAEtEta,IAAKG,GAAG3D,KAAK+uB,KAAM,CAAC5rB,MAAO,EAAG6M,MAAO,GAAKnM,SAAU,KACpDL,IAAKG,GAAG3D,KAAK+uB,KAAKhqB,MAAO,CAACkE,EAAG,EAAGC,EAAG,EAAG8G,MAAO,GAAKnM,SAAU,EAAGC,KAAM+Z,IAAOC,UAE5Eta,IAAKG,GAAG3D,KAAK8uB,KAAM,CAAC3rB,MAAO,EAAG6M,MAAO,KAAMnM,SAAU,KACrDL,IAAKG,GAAG3D,KAAK8uB,KAAM,CAAC5lB,GAAI,IAAK8G,MAAO,IAAKnM,SAAU,EAAGC,KAAMC,IAAOC,aA3C3E,kBA6CI,WACIlE,EAAO0B,KAAK,qBACZgC,IAAKC,aAAazD,KAAKiQ,WACvBzM,IAAKC,aAAazD,KAAKiQ,UAAUlL,OAEjCvB,IAAKC,aAAazD,KAAK+uB,MACvBvrB,IAAKC,aAAazD,KAAK+uB,KAAKhqB,OAE5BvB,IAAKC,aAAazD,KAAK8uB,W,gFArD/B,GAA0B5qB,a,m8CCFnB,IAAM+qB,GAAb,a,sRAAA,U,MAAA,QAII,aAAc,O,4FAAA,eACV,gBADU,qEAEV,EAAK1lB,IAAM,IAAIqJ,OAAK,UAAU,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,EAAUC,MAAO,WACxH,EAAKzJ,IAAItG,OAAOlB,IAAI,GAAK,GACzB,EAAKwH,IAAIvB,SAASjG,IAAI,GAAI,IAC1B,EAAKM,SAAS,EAAKkH,KAEnB,IAAM3G,EAAO,IAAIuS,iBAAepS,UAAQD,KAAK,gBAAiB,GAAI,GAAI,GAAI,IAC1EF,EAAKkX,MAAM/X,IAAI,IAAK,IACpBa,EAAKF,MAAQ,IACbE,EAAKD,OAAS,IACdC,EAAKM,KAAO,SACZ,EAAKb,SAASO,GAEd,EAAKssB,UAAY,IAAItc,OAAK,SAAS,CAACC,WAAY,uCAAwCC,SAAU,GAAIC,KAAM,SAAUqC,WAAY,OAAQpC,MAAO,WACjJ,EAAKkc,UAAUjsB,OAAOlB,IAAI,GAAK,IAC/B,EAAKmtB,UAAUlnB,SAASjG,IAAI,EAAG,GAC/B,EAAKM,SAAS,EAAK6sB,WAEnB,EAAKC,OAAS,GAEd,IADA,IAAI1Z,GAAM,GACDnZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMqgB,EAAQ,IAAI9Z,SAAOE,UAAQD,KAAR,aACzB6Z,EAAMxZ,MAAQ,GACdwZ,EAAM1Z,OAAOlB,IAAI,GAAK,IACtB4a,EAAM5X,MAAMhD,IAAI,IAChB4a,EAAM3U,SAASiB,EAAIwM,EACnB,EAAKpT,SAASsa,GACd,EAAKwS,OAAOryB,KAAK6f,GACjBlH,GAAM,GA7BA,SAJlB,O,EAAA,G,EAAA,yBAoCI,SAAkBrC,EAAY0J,GAC1B9c,KAAKuJ,IAAIiK,KAAT,gBAAyBJ,EAAG,GAC5B,IAAK,IAAI9W,EAAI,EAAGA,EAAI,EAAGA,IACnB0D,KAAKmvB,OAAO7yB,GAAG6G,MAAQ2Z,GAASxgB,EAAE,EAAI,EAAKwgB,GAAS,GAAY,IAAP1J,EAAW,GAAK,EAE7EpT,KAAKkvB,UAAU5rB,QAAiB,IAAP8P,IAAuB,IAAX0J,O,gFAzC7C,GAA6B5Y,a,03FCQtB,IAAM+gB,GAAb,a,sRAAA,U,MAAA,ka,EAAA,G,EAAA,qBAWI,WAAsB,WAClBjlB,KAAK+uB,KAAO,IAAIF,GAChB7uB,KAAKqC,SAASrC,KAAK+uB,MACnB/uB,KAAKovB,QAAU,IAAIpjB,GAAO,mBAAoB,oBAC9ChM,KAAKovB,QAAQpnB,SAASkB,EAAItE,EAAaM,eAAiB,EAAI,GAC5DlF,KAAKqC,SAASrC,KAAKovB,SACnBpvB,KAAKovB,QAAQ9iB,GAAG,aAAa,WACzB,EAAK+iB,mBAGTrvB,KAAKsvB,QAAU,IAAItjB,GAAO,aAAc,cACxChM,KAAKsvB,QAAQtnB,SAASjG,IAAI6C,EAAaK,cAAgB,EAAI,IAAKL,EAAaM,eAAiB,EAAI,IAClGlF,KAAKqC,SAASrC,KAAKsvB,SACnBtvB,KAAKsvB,QAAQhjB,GAAG,aAAa,WACzBoH,GAAU,OAAQ,OAAQ,SAC1B,EAAKrT,MAAO,KAGhBL,KAAKuvB,UAAY,IAAIvjB,GAAO,aAAc,cAC1ChM,KAAKuvB,UAAUvnB,SAASjG,IAAI6C,EAAaK,cAAgB,EAAI,IAAKL,EAAaM,eAAiB,EAAI,IACpGlF,KAAKqC,SAASrC,KAAKuvB,WACnBvvB,KAAKuvB,UAAUjjB,GAAG,aAAa,WAC3BoH,GAAU,OAAQ,SAAU,SAC5B,EAAKrT,MAAO,KAEhB6K,EAAe,aAAc,KAAKL,MAAK,SAAC3M,GACpC,EAAKmC,KAAa,MAANnC,KAGhB8B,KAAKwvB,mBAxCb,gBA0CI,SAAiBtxB,GACb8B,KAAKsvB,QAAQhsB,SAAWpF,EACxB8B,KAAKuvB,UAAUjsB,QAAUpF,EACzB8M,EAAe,aAAc9M,EAAI,IAAM,KACvC4B,EAAOyL,UAAYrN,EACnB4B,EAAO0L,WAAatN,IA/C5B,mBAiDI,WACIwV,GAAU,OAAQ,OAAQ,SAC1B1T,KAAK+uB,KAAK3sB,QACVpC,KAAKyvB,mBApDb,kDAsDI,6FACI/b,GAAU,OAAQ,OAAQ,SAC1B1T,KAAK+uB,KAAKvtB,OAFd,gDAtDJ,wGA0DI,+GACW2D,EAAUP,EAAVO,OACH7I,EAAI,EACJwgB,GAAS,EAHjB,KAIuB3X,GAJvB,gEAIenJ,EAJf,kBAK6BkP,EAAe,GAAD,OAAIlP,EAAKoD,KAAM,IAL1D,WAKcswB,EALd,OAMQ5S,GAAS,EACM,KAAX4S,IACA1zB,EAAKsN,MAAQiK,SAASmc,GACtB5S,EAAQ6S,GAAe3zB,EAAKsN,MAAOtN,EAAKysB,kBAE9B,IAAV3L,IAA0B,IAAXA,EAX3B,qDAcYxgB,IAdZ,+IAiBI0D,KAAK4vB,cAAgBtzB,EACrB0D,KAAK6vB,QAAgB,IAANvzB,IAAsB,IAAXwgB,EAC1B9c,KAAK8vB,gBAAgBC,WAAW/vB,KAAK4vB,cAAe9S,GACpD9c,KAAKgwB,gBApBT,gEA1DJ,wEAgFI,WACIhwB,KAAKovB,QAAQ1iB,UAAY1M,KAAK6vB,QAC9B7vB,KAAKsG,KAAKhD,QAAUtD,KAAK4vB,cAAgB,EACzC5vB,KAAKiwB,MAAM3sB,QAAUtD,KAAK4vB,cAAgBhrB,EAAaO,OAAO3I,OAAO,IAnF7E,4BAqFI,WAAyB,WACrBwD,KAAK8vB,gBAAkB,IAAIb,GAC3BjvB,KAAK8vB,gBAAgB9nB,SAASjG,IAAI,EAAG6C,EAAaM,eAAiB,EAAI,KACvElF,KAAKqC,SAASrC,KAAK8vB,iBAEnB9vB,KAAKsG,KAAO,IAAI0F,GAAO,kBAAmB,mBAC1ChM,KAAKsG,KAAK0B,SAASjG,KAAK,IAAK/B,KAAK8vB,gBAAgB5mB,GAClDlJ,KAAKqC,SAASrC,KAAKsG,MAEnBtG,KAAKiwB,MAAQ,IAAIjkB,GAAO,kBAAmB,mBAC3ChM,KAAKiwB,MAAMjoB,SAASjG,IAAI,IAAK/B,KAAK8vB,gBAAgB5mB,EAAE,GACpDlJ,KAAKqC,SAASrC,KAAKiwB,OAEnBjwB,KAAKsG,KAAKvB,MAAMhD,IAAI,GAAK,IACzB/B,KAAKiwB,MAAMlrB,MAAMhD,IAAI,GAAK,IAE1B/B,KAAKsG,KAAKgG,GAAG,aAAa,WACtBoH,GAAU,OAAQ,OAAQ,SAC1B,EAAKkc,gBACL,EAAKM,kBAETlwB,KAAKiwB,MAAM3jB,GAAG,aAAa,WACvBoH,GAAU,OAAQ,OAAQ,SAC1B,EAAKkc,gBACL,EAAKM,oBA7GjB,yDAgHI,8GACUl0B,EAAO4I,EAAaO,OAAOnF,KAAK4vB,eAD1C,SAEyB1kB,EAAe,GAAD,OAAIlP,EAAKoD,KAAM,IAFtD,OAEUswB,EAFV,OAGQ5S,GAAS,EACE,KAAX4S,IACA1zB,EAAKsN,MAAQiK,SAASmc,GACtB5S,EAAQ6S,GAAe3zB,EAAKsN,MAAOtN,EAAKysB,kBAE5CzoB,KAAK6vB,QAAiC,IAAvB7vB,KAAK4vB,gBAAkC,IAAX9S,EAC3C9c,KAAK8vB,gBAAgBC,WAAW/vB,KAAK4vB,cAAe9S,GACpD9c,KAAKgwB,gBAVT,gDAhHJ,uGA4HI,gGACShwB,KAAK6vB,QADd,qDtC0DOrlB,IAAaJ,EAAS+lB,qBsC1D7B,gCAGc/kB,GAAQhC,EAAOY,cAH7B,OAKI0J,GAAU,OAAQ,OAAQ,QAAS1T,KAAK4vB,cAAgB,GACxDnrB,EAAarC,MAAMmd,GAAevf,KAAK4vB,eAN3C,gDA5HJ,gD,gFAAA,GAA+B9jB,I,sqDCHxB,IAAMskB,GAAb,a,sRAAA,U,QAAA,kS,EAAA,G,EAAA,qBAMI,WAAsB,WAClBpwB,KAAKqwB,OAASxtB,SAAOC,KAAKC,UAAQD,KAAK,iBACvC9C,KAAKqwB,OAAOptB,OAAOlB,IAAI,GAAK,IAC5B/B,KAAKqC,SAASrC,KAAKqwB,QAGnBrwB,KAAKswB,QAAU,IAAItkB,GAAO,kBAAmB,mBAC7ChM,KAAKswB,QAAQtoB,SAASjG,IAAI,IAAI6C,EAAaM,eAAe,EAAIlF,KAAKswB,QAAQ3tB,OAAO,GAClF3C,KAAKqC,SAASrC,KAAKswB,SACnBtwB,KAAKswB,QAAQhkB,GAAG,aAAa,WACzBoH,GAAU,SAAU,OAAQ,SAC5B,EAAK6c,mBAETvwB,KAAKwwB,QAAU,IAAIxkB,GAAO,kBAAmB,mBAC7ChM,KAAKwwB,QAAQxoB,SAASjG,KAAK,IAAI/B,KAAKswB,QAAQpnB,GAC5ClJ,KAAKqC,SAASrC,KAAKwwB,SACnBxwB,KAAKwwB,QAAQlkB,GAAG,aAAa,WACzBoH,GAAU,SAAU,OAAQ,SAC5B,EAAK+c,mBAGTzwB,KAAK0wB,MAAQ,IAAI1kB,GAAO,gBAAiB,iBACzChM,KAAK0wB,MAAMpkB,GAAG,aAAa,WACvBtB,EAAe,aAAa,KAC5BvG,EAAarC,MAAM6iB,OAEvBjlB,KAAK0wB,MAAM1oB,SAASkB,EAAIlJ,KAAKswB,QAAQpnB,EAAI,GACzClJ,KAAKqC,SAASrC,KAAK0wB,OAEnB1wB,KAAKwwB,QAAQltB,SAAU,EACvBtD,KAAKswB,QAAQhtB,SAAU,EACvBtD,KAAK0wB,MAAMptB,SAAU,IArC7B,mBAwCI,WACIoQ,GAAU,SAAU,OAAQ,SAC5B1T,KAAKyH,KAAO,EACZzH,KAAKwwB,QAAQltB,SAAU,EACvBtD,KAAKswB,QAAQhtB,SAAU,EACvBtD,KAAK0wB,MAAMptB,SAAU,IA7C7B,oB,EAAA,yBA+CI,mGAEI,IADAoQ,GAAU,SAAU,OAAQ,SACnBpX,EAAI,EAAGA,EAAI,EAAGA,IACnByG,UAAQ4tB,gBAAR,iBAAkCr0B,EAAlC,SAEJ0D,KAAKkC,YAAYlC,KAAK0wB,OACtB1wB,KAAK4wB,QAAQ,CAAC9L,UAAU,IAN5B,+CA/CJ,E,gLAAA,wEAuDI,WACI9kB,KAAKyH,OACDzH,KAAKyH,KAAO,GACZzH,KAAK6wB,cACL7wB,KAAKwwB,QAAQltB,SAAU,EACvBtD,KAAKswB,QAAQhtB,SAAU,GACF,IAAdtD,KAAKyH,OACZzH,KAAK6wB,cACL7wB,KAAK0wB,MAAMptB,SAAU,EACrBtD,KAAKwwB,QAAQltB,SAAU,EACvBtD,KAAKswB,QAAQhtB,SAAU,KAjEnC,2BAoEI,WACItD,KAAKyH,OACLzH,KAAKwwB,QAAQltB,QAAUtD,KAAKyH,KAAO,EACnCzH,KAAK6wB,gBAvEb,yBAyEI,WACI7wB,KAAKqwB,OAAOvjB,QAAU/J,UAAQD,KAAR,iBAAuB9C,KAAKyH,KAA5B,c,gFA1E9B,GAAiCqE,I,qoDCG1B,ICPKjC,GAOAinB,GASA/mB,GASAwe,GDlBCoH,GAAiB,SAACrmB,EAAe+T,GAE5C,IADA,IAAIP,EAAQ,EACHxgB,EAAI,EAAGA,EAAI+gB,EAAW7gB,QACvB8M,EAAQ+T,EAAW/gB,GADYA,IAE/BwgB,IAKR,OAAOA,GAEIvC,GAAY,SAAC7U,GAAiD,IAAhCqrB,EAAgC,wDACzEnsB,EAAac,OAASA,EACjBqrB,GACHvtB,IAAKgX,eAAewW,UAAUpsB,EAAac,OAAS,GAAM,IAIzCurB,G,mUACnB,aAAc,O,4FAAA,qBACN,IAAK,M,wEAEb,mHACqB/lB,EAAe,aAAa,KADjD,OACQgmB,EADR,OAEEzsB,EAAa+C,IAAI,IAAIyd,IACrBxgB,EAAa+C,IAAI,IAAI+X,IACR,MAAT2R,GACFzsB,EAAa+C,IAAI,IAAI4oB,IACrB3rB,EAAarC,MAAMguB,KAEnB3rB,EAAarC,MAAM6iB,IARvB,2C,8EAYA,WACE1iB,EAAM+J,GAAG,cAAc,SAACwgB,GACjBA,EAAIiB,OAAO/xB,MAAS8wB,EAAIkB,OAAOhyB,MAChCyI,EAAa0sB,uBAAuB5R,IACtC9a,EAAa0sB,YAAYC,WAAWtE,MAGxCvqB,EAAM+J,GAAG,gBAAgB,SAACwgB,GACpBroB,EAAa0sB,uBAAuB5R,IACtC9a,EAAa0sB,YAAYE,aAAavE,Q,4BAI5C,SAAyBrlB,GACvB,IAAM3F,EAAQ2C,EAAa0sB,YAC3B,OAAIrvB,GAASA,aAAiByd,GACrBzd,EAAMuG,eAAeZ,GAErB,CAACA,OAAMklB,WAAOtnB,K,6BAGzB,SAA0BlD,GACxB,IAAML,EAAQ2C,EAAa0sB,YACvBrvB,GAASA,aAAiByd,IAC5Bzd,EAAMyG,gBAAgBpG,K,iDAG1B,iIACS,IAAI8H,SAAc,SAACC,EAASQ,GACjC5K,EAAO8K,KAAK,iBxCqGdR,EAASknB,ewCnGP,IAAMC,EAAS,IAAIjtB,IACnBitB,EAAO/pB,IAAI,QAAS,6BACpB+pB,EAAO/pB,IAAI,QAAS,6BACpB+pB,EAAO/pB,IAAI,SAAU,sBACrB+pB,EAAO/pB,IAAI,YAAa,uBACxB1H,EAAO0H,IAAI,QAAS,CAAE7G,UAAU,EAAMC,MAAM,EAAMC,OAAQ,KAE1Df,EAAO0H,IAAI,aAAc,CAAE3G,OADd,IAEbf,EAAO0H,IAAI,aAAc,CAAE3G,OAFd,IAGbf,EAAO0H,IAAI,aAAc,CAAE3G,OAHd,IAIbf,EAAO0H,IAAI,YAAa,CAAE3G,OAJb,IAKbf,EAAO0H,IAAI,aAAc,CAAE3G,OALd,IAMbf,EAAO0H,IAAI,aAAc,CAAE3G,OANd,IAObf,EAAO0H,IAAI,aAAc,CAAE3G,OAPd,IAQbf,EAAO0H,IAAI,QAAS,CAAE3G,OAAQ,KAC9Bf,EAAO0H,IAAI,YAAa,CAAE3G,OATb,IAUbf,EAAO0H,IAAI,gBAAiB,CAAE3G,OAVjB,IAWbf,EAAO0H,IAAI,gBAAiB,CAAE3G,OAXjB,IAYbf,EAAO0H,IAAI,gBAAiB,CAAE3G,OAZjB,IAabf,EAAO0H,IAAI,WAAY,CAAE3G,OAbZ,IAcbf,EAAO0H,IAAI,YAAa,CAAE3G,OAdb,IAebf,EAAO0H,IAAI,cAAe,CAAE3G,OAff,IAgBbf,EAAO0H,IAAI,cAAe,CAAE3G,OAhBf,IAiBbf,EAAO0H,IAAI,aAAc,CAAE3G,OAjBd,IAkBbf,EAAO0H,IAAI,oBAAqB,CAAE3G,OAlBrB,IAmBbf,EAAO0H,IAAI,iBAAkB,CAAE3G,OAAQ,KACvCf,EAAO0H,IAAI,eAAgB,CAAE3G,OApBhB,IAqBbf,EAAO0H,IAAI,eAAgB,CAAE3G,OArBhB,IAsBbf,EAAO0H,IAAI,OAAQ,CAAE3G,OAtBR,IAuBbf,EAAO0H,IAAI,gBAAiB,CAAE3G,OAvBjB,IAwBbf,EAAO0H,IAAI,eAAgB,CAAE3G,OAxBhB,IAyBbf,EAAO0H,IAAI,MAAO,CAAE3G,OAzBP,IA0Bbf,EAAO0H,IAAI,cAAe,CAAE3G,OA1Bf,IA2Bbf,EAAO0H,IAAI,gBAAiB,CAAE3G,OA3BjB,EA2B+BD,MAAM,IAClDd,EAAO0H,IAAI,eAAgB,CAAE3G,OA5BhB,IA6Bbf,EAAO0H,IAAI,YAAa,CAAE3G,OA7Bb,IA8Bbf,EAAO0H,IAAI,iBAAkB,CAAE3G,OAAQ,KACvCf,EAAO0H,IAAI,aAAc,CAAE3G,OA/Bd,IAgCbf,EAAO0H,IAAI,YAAa,CAAE3G,OAhCb,IAiCbf,EAAO0H,IAAI,aAAc,CAAE3G,OAjCd,IAkCbf,EAAO0H,IAAI,iBAAkB,CAAE3G,OAlClB,IAoCb0wB,EAAOC,WAAWhqB,KAAI,SAACvJ,OAGvBszB,EAAOE,QAAQjqB,KAAI,SAAC0J,EAAGpG,EAAG3M,GACxB4M,GAAU,CAAExJ,MAAO,YAAF,OAAcpD,EAAEuzB,IAAhB,OACjBhnB,OAGF6mB,EAAO5oB,KAAP,4BAAY,6GACJ,EAAKgpB,YADD,cAEV/sB,EAAaO,OAASosB,EAAOK,UAAUzsB,OAAOnJ,KAAKmJ,OACnDP,EAAaQ,UAAYmsB,EAAOK,UAAUxsB,UAAUpJ,KAH1C,SAIJ,EAAK61B,oBAJD,OAKV3nB,IALU,gDAtDhB,2C,mGA+DA,sHACS,IAAID,SAAc,SAACC,GACxB4nB,QAAa,CACXC,OAAQ,CACJC,SAAU,CAAC,wCACXC,KAAM,CAAC,0BAEXC,OAAQ,WACJhoB,KAEJioB,QAAS,UAVf,2C,2GAcA,0GACQC,EAAYpsB,SAASqsB,eAAe,gBAExCD,EAAU/rB,MAAMisB,QAAU,QAH9B,SAKQ3mB,KALR,2C,mIAxHgChG,I,SCzBtBkE,O,yBAAAA,I,qBAAAA,I,eAAAA,I,2BAAAA,I,oCAAAA,Q,cAOAinB,O,yBAAAA,I,qBAAAA,I,qBAAAA,I,mBAAAA,I,iCAAAA,I,mCAAAA,I,wCAAAA,Q,cASA/mB,O,yBAAAA,I,iBAAAA,I,iCAAAA,I,uBAAAA,I,+BAAAA,I,yBAAAA,I,oBAAAA,Q,cASAwe,O,yBAAAA,I,iBAAAA,I,uBAAAA,I,gBAAAA,Q,KAMZgK,gBAAiBC,mBAAkB,GAC5B,IAAIC,IAAgB,EAChBC,GAAO,KAoBlB,SAAStwB,GAAMsH,EAAiBipB,GAC5BrxB,QAAQqJ,IAAI,KAAMjB,EAASipB,GAC3BJ,gBAAiBK,WAAWlpB,EAASipB,GACrCrxB,QAAQqJ,IAAR,mBAAwBkoB,IAAxB,mBAAkDJ,KAClD/e,GAAU,MAAO,UAAWmf,IAAiBJ,GAAO,EAAI,GACxD/e,GAAU,MAAO,OAAQ,SACzB,IAAIud,GAED,SAAS/H,GAAqB4J,EAA8Bhd,EAAexM,EAAe2f,GAC7FsJ,gBAAiBQ,oBAAoBD,EAAQ,QAAS,QAAShd,EAAOxM,EAAO2f,GAM1E,SAASrf,GAAYopB,EAAqB3nB,EAAiB9J,QAChD8D,IAAV9D,EACAgxB,gBAAiBU,WAAWD,EAAQ3nB,EAAMwnB,IAAiB,MAE3DN,gBAAiBW,yBAAyBF,EAAQ3nB,EAAMwnB,IAAiB,KAAMtxB,GAInF,OAAQ8J,GACJ,KAAKtB,GAAUC,aACA,QACX,MACJ,KAAKD,GAAUI,cACA,SAGnB,OAAQ6oB,GACJ,KAAKnpB,GAAYspB,WACN,YACP,MACJ,KAAKtpB,GAAYC,KACN,OACP,MACJ,KAAKD,GAAYupB,eACN,WAOZ,SAAS1f,GAAUrV,EAAcg1B,EAAkBC,GAAiC,IAAlBx0B,EAAkB,uDAAH,EACpFyzB,gBAAiBgB,eAAjB,UAAmCl1B,EAAnC,YAA2Cg1B,EAA3C,YAAuDC,GAASx0B,GAO7D,SAASiM,GAAUxJ,GACtB,IAAMwL,EAAIymB,KAAKC,UAAUlyB,GACzBgxB,gBAAiBmB,cAAcnB,mBAAoBhyB,MAAOwM,GAOvD,SAAS4mB,GAAQ11B,GACpBw0B,GAAOx0B,EAnFX0B,OAAOi0B,QAAU,WACbC,OAAOxzB,MAAK,IAEhBV,OAAOm0B,OAAS,WACZD,OAAOxzB,MAAK,IAEhBV,OAAOo0B,OAAS,WACZtpB,IACKI,MAAK,SAACmpB,GACHtB,GAAOsB,EAAIvqB,SACXgpB,GAAOuB,EAAIxqB,QACXpH,GAAM4xB,EAAItqB,QAASsqB,EAAIrqB,cAJ/B,OAMW,SAACoD,GACJ2lB,GAAO,KACPD,IAAO,EACPrwB,GAAM,mCAAoC","file":"bundle.5e685f87e089a498519b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing || !checkPlaying) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string, checkPlaying: boolean = false) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        if (!this.all[name].playing() || !checkPlaying) {\r\n            this.all[name].play();\r\n        }\r\n    }\r\n    public stop(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].stop();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.interpolatedPosition;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.interpolatedAngle);\r\n                } else {\r\n                  sprite.rotation = body.interpolatedAngle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          //new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { EGAAdAction, EGAAdType, sendAdEvent } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"28b00d27d31d5bb1a89f2f95461df103\",\r\n      secretKey: \"b527d253099947040f78d2b1e70f06725391e3a1\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n    return new Promise<void>((resolve)=> {\r\n      const r = Math.random() < 0.5;\r\n      window.setTimeout(()=> {\r\n        resolve();\r\n      }, r ? 1000 : 0);\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    sendAdEvent(\r\n      EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return new Promise<boolean>((resolve)=> {\r\n      window.setTimeout(()=> {\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\nimport { sounds } from \"../../core/SoundManager\";\nimport { hideLoading, showLoading } from \"../BaseGame\";\n//////////////////\n///////////////////////////////////////////////////\n////////////////////\n/////////////////////////////////////////////\n////////////////////\n/////////////////////////////////////////////////\n/////////\nimport { DummySocial } from \"./social/DummySocial\";\n//////////\n\nexport enum AdType {\n    RewardedVideo = 2,\n    Interstitial = 4,\n}\nexport interface ILeaderboardEntry {\n    rank: number;\n    score: number;\n    highscore?: number;\n    player: IPlayerEntry;\n    hasBonus?: boolean;\n    friend?: boolean;\n}\nexport interface IPlayerEntry {\n    name: string; \n    photo: string; \n    player_id: string;\n}\nexport interface IInited {\n    success: boolean, \n    gameKey: string, \n    secretKey: string, \n    language: string\n}\nexport interface ISocial {\n    init(): Promise<IInited>;\n    setStorageData(key: string, value: string): Promise<void>;\n    getStorageData(key: string, value?: string): Promise<string>;\n    setScore(value: number): Promise<void>;\n    getScore(): Promise<number>;\n    getPlayerEntry(): IPlayerEntry;\n    getFriends(): Promise<ILeaderboardEntry[]>;\n    showInter(): Promise<void>;\n    showReward(): Promise<boolean>;\n    showReward(): Promise<boolean>;\n    performHapticFeedback(): void;\n    startLoading(): void;\n    finishLoading(): Promise<void>;\n    loadingProgress(p: number): void;\n    shareScore(txt: string): void;\n    showInvitePage(): void;\n    createShortcut(): Promise<void>;\n    showGlobalLeaders(score: number): void;\n    gameplayStart(): void;\n    gameplayStop(): void;\n    shouldShareShow(): boolean;\n    shouldLeadersShow(): boolean;\n    shouldScalePlayer(): boolean;\n    shouldPlayFirstAds(): boolean;\n    atatappLink(): string;\n}\nconst getLocalStorage = () => {\n    try {\n        return localStorage;\n    } catch (ex) {\n        return undefined;\n    }\n};\nlet instance: ISocial;\nlet firstPlay: boolean = true;\nexport const initSocial = async(): Promise<IInited> => {\n    return new Promise<IInited>((resolve, reject)=> {\n//////////////////\n//////////////////////////////////\n////////////////////\n////////////////////////////////////\n////////////////////\n/////////////////////////////////////\n/////////\n        instance = new DummySocial();\n//////////\n        console.log(instance);\n        if (instance) {\n            instance.init().then((b)=> {\n                //window.clearTimeout(t);\n                resolve(b);\n            }).catch((r)=>{\n                sendError({\"error\":\"initSocial\"});\n                reject();\n            });\n        }\n    });\n}\nexport const setScore = async(score: number) => {\n    const s = await getScore();\n    if (score > s) {\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\n    }\n    await instance.setScore(score);\n}\nexport const getScore = async(): Promise<number> => {\n    let s = await instance.getScore();\n    if (!s || s === 0) {\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")!) || 0;\n    }\n    return s;\n}\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\n    getLocalStorage()?.setItem(key, value);\n    await instance.setStorageData(key, value);\n}\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\n    let s = await instance.getStorageData(key, value);\n    if (s === value) {\n        s = getLocalStorage()?.getItem(key) || value;\n    }\n    return s;\n}\nexport const getPlayerEntry = (): IPlayerEntry => {\n    let p = instance.getPlayerEntry();\n    if (!p) {\n        p = {\n            name: \"You\",\n            player_id: \"999\",\n            photo: \"assets/images/player26.jpg\",\n        }\n    }\n    return p;\n}\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\n    const p: string[] = [];\n    for (let i = 0; i < 26; i++) {\n        p.push(`assets/images/player${i}.jpg`);\n    }\n    let score = 0;\n    const r:ILeaderboardEntry[] = await instance.getFriends();\n    const l = 19 - r.length;\n    for (let i = 0; i < l; i++) {\n        score += Math.floor(Math.random()*600) + 100;\n        if (i === l - 1) {\n            score = Math.floor(score * 1.6);\n        }\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\n        r.push(entry);\n    }\n    return r;\n}\nexport const showADS = async(type: AdType): Promise<boolean> => {\n    let r = false;\n    showLoading();\n    const mutedMusic = sounds.muteMusic;\n    const muteSounds = sounds.muteSounds;\n    sounds.muteMusic = true;\n    sounds.muteSounds = true;\n    switch (type) {\n        case AdType.Interstitial:\n            await instance.showInter();\n            r = true;\n            break;\n        case AdType.RewardedVideo:\n            r = await instance.showReward();\n            break;\n    }\n    firstPlay = false;\n    hideLoading();\n    sounds.muteMusic = mutedMusic;\n    sounds.muteSounds = muteSounds;\n    return r;\n}\nexport const performHapticFeedback = () => {\n    instance.performHapticFeedback();\n}\nexport const startLoading = () => {\n    instance.startLoading();\n}\nexport const loadingProgress = (p) => {\n    instance.loadingProgress(p);\n}\nexport const finishLoading = async() => {\n    return instance.finishLoading();\n}\nexport const shouldScalePlayer = (): boolean => {\n    return live && instance.shouldScalePlayer();\n}\nexport const shouldShareShow = (): boolean => {\n    return instance.shouldShareShow();\n}\nexport const shouldLeadersShow = (): boolean => {\n    return instance.shouldLeadersShow();\n}\nexport const shouldPlayFirstAds = (): boolean => {\n    return firstPlay && instance.shouldPlayFirstAds();\n}\nexport const shareScore = (txt: string) => {\n    instance.shareScore(txt);\n}\nexport const showInvitePage = () => {\n    instance.showInvitePage();\n}\nexport const createShortcut = async()=> {\n    if (!firstPlay) return;\n    return await instance.createShortcut();\n}\nexport const gameplayStart = () => {\n    instance.gameplayStart();\n}\nexport const gameplayStop = () => {\n    instance.gameplayStop();\n}\nexport const atatappLink = () => {\n    return instance.atatappLink();\n}\nexport const showGlobalLeaders = (score: number) => {\n    instance.showGlobalLeaders(score);\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setPermanentSkull() {\r\n        sounds.play(\"ball roger\");\r\n        this.permanentSkull = true;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public setSkull() {\r\n        sounds.play(\"ball roger\");\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n                gsap.delayedCall(Math.random()*0.2, ()=> {\r\n                    sounds.stop(\"ball pop 0\");\r\n                    sounds.stop(\"ball pop 1\");\r\n                    sounds.stop(\"ball pop 2\");\r\n                    sounds.playRandom(\"ball pop \", 3);\r\n                });\r\n                \r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                sounds.play(\"ball deflate\");\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            sounds.play(\"ball grow\");\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        sounds.stop(\"fail ticking\");\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        sounds.play(\"fail ticking\", true);\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../../..\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private async onPressed() {\r\n        sendEvent(\"Game\", \"Powerup\", \"Click\");\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            const start = new Date().getTime();\r\n            gameSettings.paused = true;\r\n            let success = await showADS(AdType.RewardedVideo);\r\n            success = true;\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id, new Date().getTime() - start);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { sounds } from \"../../../../core/SoundManager\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            sounds.play(\"bonus keys\");\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    private startTime: number;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save The Heart By Moving It To The Top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap The Screen And Move Your Finger To Aim. Release To Shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart Is Free And Happy Now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's Time For A New Emoji Load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge It Fully To Get A Bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This App Is Invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"Though Bonuses Will Help\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"Another One Here!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"Destroy This App With Balls\");\r\n        this.textMap.set(ETutorial.Skull, \"Do Not Touch This Skulls By Heart Or By Throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This Ball Is Matching With Any Emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This Ball Is Destroying Everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n        getStorageData(t.toString(),\"0\").then((s)=> {\r\n            if (s === \"1\") {\r\n                this.allConditions.delete(t);\r\n            }\r\n        });\r\n        \r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                setStorageData(e.toString(), \"1\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        this.startTime = new Date().getTime();\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        sounds.play(\"window open\");\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n        this.emit(\"hide\", new Date().getTime() - this.startTime);\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../../core/SoundManager\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        sounds.play(\"score ticking\");\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            sounds.stop(\"score ticking\");\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well Done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        if (!won) timeBonus = 0;\r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well Done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        sounds.play(\"window open\");\r\n        sounds.play(won ? \"win\" : \"fail\");\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    sounds.play(\"score thumb up\");\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onStart: ()=> {\r\n            if (won) sounds.play(\"score ticking\");\r\n        }, onUpdate, onComplete: ()=> {\r\n            sounds.stop(\"score ticking\");\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                sounds.play(\"win bonus\");\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onStart: ()=> {\r\n                        sounds.play(\"score ticking\");\r\n                    }, onUpdate, onComplete: ()=> {\r\n                        sounds.stop(\"score ticking\");\r\n                    }});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        sounds.stop(\"score ticking\");\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            sounds.play(\"window open\");\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    private okBut: Button;\r\n    private xBut: Button;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        this.okBut = okBut;\r\n        this.xBut = xBut;\r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        this.okBut.disabled = false;\r\n        this.xBut.disabled = false;\r\n        sounds.play(\"window open\");\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.okBut.disabled = true;\r\n        this.xBut.disabled = true;\r\n        this.visible = false;\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.delayedCall(Math.random()*0.1, ()=> {\r\n                sounds.stop(\"ball explosion\");\r\n                sounds.play(\"ball explosion\");\r\n            });\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { AdType, gameplayStart, gameplayStop, setStorageData, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number,\r\n    bonusBalls: number[]\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n    private levelStarted: boolean;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Game\", \"Menu\", \"Click\");\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.tutorial.on(\"hide\", (d)=> {\r\n            this.levelStartTime += d;\r\n        });\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.levelStarted = false;\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n            this.sendStartLevelEvent({iaps:iaps.toString()});\r\n        } else {\r\n            this.sendStartLevelEvent();\r\n        }\r\n        this.levelStarted = true;\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        \r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            gameplayStop();\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        const delta = new Date().getTime();\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        gameplayStop();\r\n        this.pausePopup.show(async(exit: boolean)=> {\r\n            if (exit) {\r\n                await showADS(AdType.Interstitial);\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                sendEvent(\"Game\", \"Pause\", \"Exit\");\r\n                stateManager.start(MenuState);\r\n            } else {\r\n                sendEvent(\"Game\", \"Pause\", \"Cancel\");\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                const pauseTime = new Date().getTime() - delta;\r\n                this.levelStartTime += pauseTime;\r\n                gameplayStart();\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        const r = Math.random() < 0.5;\r\n        if (amount === 3) {\r\n            sounds.play(\"emoji yeah\");\r\n        } else if (amount === 4) {\r\n            if (r) {\r\n                sounds.play(\"emoji wah\");\r\n            } else {\r\n                sounds.play(\"emoji oh\");\r\n            }\r\n        }\r\n        if (amount >= 5) {\r\n            if (r) {\r\n                sounds.playRandom(\"emoji wow \", 2);\r\n            } else {\r\n                sounds.play(\"emoji ahh\");\r\n            }\r\n            \r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return;\r\n        sounds.play(\"battery charge\");\r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        \r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        sendEvent(\"Game\", \"Bonus\", \"Activate\", bonus);\r\n        sounds.play(\"win bonus\");\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        sounds.play(\"balls add\");\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.position.y > 450 && this.levelStarted) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = this.getLevelTime();\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n            this.sendFinishLevelEvent(EGAProgressionStatus.Complete, this.score + timeBonus, {score: this.score, time, timeBonus});\r\n            this.levelStarted = false;\r\n            gameplayStop();\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private getLevelTime() {\r\n        return  new Date().getTime() - this.levelStartTime;\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        showADS(AdType.Interstitial).then(()=> {\r\n            this.createMoveWalls();\r\n            this.generateNewBlocks().then(()=> {\r\n                const iaps = this.generateIAPS();\r\n                this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                    if (this.currentLevelData.iaps) {\r\n                        this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                        this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                        this.powerup1.visible = true;\r\n                        this.powerup2.visible = true;\r\n                        this.sendStartLevelEvent({iaps:iaps.toString()});\r\n                    } else {\r\n                        this.sendStartLevelEvent();\r\n                    }\r\n                    gameplayStart();\r\n                    this.levelStarted = true;\r\n                    this.generateLineBlocks();\r\n                    this.addActiveBlock();\r\n                    this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                    this.nextTimer.unFreeze();\r\n                    this.levelStartTime = new Date().getTime();\r\n                });\r\n            });\r\n            gameSettings.paused = false;\r\n        });\r\n        this.isTransition = false;\r\n    }\r\n    private sendStartLevelEvent(customs?:{[id: string]: any}) {\r\n        console.log(\"send start\",\"level\"+this.currentLevelData.key,customs);\r\n        sendProgressionEvent(EGAProgressionStatus.Start,\"level\"+this.currentLevelData.key, 0, customs);\r\n    }\r\n    private sendFinishLevelEvent(s: EGAProgressionStatus.Complete | EGAProgressionStatus.Fail ,score: number, customs?:{[id: string]: any}) {\r\n        console.log(\"send finish\",\"level\"+this.currentLevelData.key,score);\r\n        sendProgressionEvent(s,\"level\"+this.currentLevelData.key, score, customs);\r\n    }\r\n    private async startPowerup(id: EIAPBonus, time?: number) {\r\n        sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n        if (time) {\r\n            this.levelStartTime += time;\r\n        }\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                sounds.play(\"timer freeze\");\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        sounds.play(\"rocket launch\");\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.currentLevelData.bonusBalls.length > 0 && Math.random() < 0.08) {\r\n            if (this.currentLevelData.bonusBalls.length === 2) {\r\n                return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n            } else if (this.currentLevelData.bonusBalls.length === 1) {\r\n                if (this.currentLevelData.bonusBalls[0] === 1) {\r\n                    return CircleBlock.ANY_TYPE;\r\n                } else {\r\n                    return CircleBlock.RAINBOW_TYPE;\r\n                }\r\n            }\r\n            \r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n            sounds.play(\"ball release\");\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            sounds.play(\"ball release\");\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        const skullsArr: CircleBlock[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        this.playArgue();\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            if (skullsIds.includes(i)) {\r\n                skullsArr.push(f);\r\n            }\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        this.delay(3).then(()=> {\r\n            this.createBottomExit();\r\n        });\r\n        \r\n        if (skullsArr.length > 0) {\r\n            await this.delay(0.5);\r\n            await this.addBeginSkulls(skullsArr);\r\n        }\r\n    }\r\n    private playArgue(amount: number = 3) {\r\n        sounds.play(\"emoji argue 0\");\r\n        if (amount > 1) {\r\n            this.delay(0.9).then(()=> {\r\n                sounds.play(\"emoji argue 1\");\r\n                if (amount > 2) {\r\n                    this.delay(0.9).then(()=> {\r\n                        sounds.play(\"emoji argue 2\");\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n    private async addBeginSkulls(skulls: CircleBlock[]) {\r\n        let i = 0;\r\n        for (let circle of skulls) {\r\n            if (circle) {\r\n                gsap.to(circle.scale, {x: 5, y: 5, delay: i*0.6, duration: 0.1, ease: Expo.easeOut, onComplete: ()=> {\r\n                    circle.setPermanentSkull();\r\n                }});\r\n                gsap.to(circle.scale, {x: 1, y: 1, delay: i, duration: 0.5, ease: Expo.easeIn});\r\n                i += 0.05;\r\n            }\r\n        }\r\n        await this.delay(0.7);\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.levelStarted = false;\r\n        this.sendFinishLevelEvent(EGAProgressionStatus.Fail, 0, {score: this.score, time: this.getLevelTime(), timeBonus: 0});\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        !instanceA.isGoal() && !instanceB.isGoal() && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE && !instanceB.isGoal()) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE && !instanceA.isGoal());\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && !notRainbow.isGoal() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        sounds.play(\"startup explosion\");\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        sounds.stop(\"startup explosion\");\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Mute\", \"click\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Unmute\", \"click\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Menu\", \"View\", \"Start\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Menu\", \"View\", \"Close\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Prev\", \"Click\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Next\", \"Click\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        sendEvent(\"Menu\", \"Play\", \"Click\", this.activeLevelId + 1);\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Next\", \"Click\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Prev\", \"Click\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Comics\", \"View\", \"Start\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Comics\", \"View\", \"Close\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.5 });\r\n      const sVol = 1;\r\n      sounds.add(\"ball hit 0\", { volume: sVol });\r\n      sounds.add(\"ball hit 1\", { volume: sVol });\r\n      sounds.add(\"ball hit 2\", { volume: sVol });\r\n      sounds.add(\"ball grow\", { volume: sVol });\r\n      sounds.add(\"ball pop 0\", { volume: sVol });\r\n      sounds.add(\"ball pop 1\", { volume: sVol });\r\n      sounds.add(\"ball pop 2\", { volume: sVol });\r\n      sounds.add(\"click\", { volume: 0.6 });\r\n      sounds.add(\"emoji ahh\", { volume: sVol });\r\n      sounds.add(\"emoji argue 0\", { volume: sVol });\r\n      sounds.add(\"emoji argue 1\", { volume: sVol });\r\n      sounds.add(\"emoji argue 2\", { volume: sVol });\r\n      sounds.add(\"emoji oh\", { volume: sVol });\r\n      sounds.add(\"emoji wah\", { volume: sVol });\r\n      sounds.add(\"emoji wow 0\", { volume: sVol });\r\n      sounds.add(\"emoji wow 1\", { volume: sVol });\r\n      sounds.add(\"emoji yeah\", { volume: sVol });\r\n      sounds.add(\"startup explosion\", { volume: sVol });\r\n      sounds.add(\"ball explosion\", { volume: 0.6 });\r\n      sounds.add(\"ball release\", { volume: sVol });\r\n      sounds.add(\"fail ticking\", { volume: sVol });\r\n      sounds.add(\"fail\", { volume: sVol });\r\n      sounds.add(\"rocket launch\", { volume: sVol });\r\n      sounds.add(\"timer freeze\", { volume: sVol });\r\n      sounds.add(\"win\", { volume: sVol });\r\n      sounds.add(\"window open\", { volume: sVol });\r\n      sounds.add(\"score ticking\", { volume: sVol, loop: true });\r\n      sounds.add(\"ball deflate\", { volume: sVol });\r\n      sounds.add(\"balls add\", { volume: sVol });\r\n      sounds.add(\"battery charge\", { volume: 0.5 });\r\n      sounds.add(\"bonus keys\", { volume: sVol });\r\n      sounds.add(\"win bonus\", { volume: sVol });\r\n      sounds.add(\"ball roger\", { volume: sVol });\r\n      sounds.add(\"score thumb up\", { volume: sVol });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"28b00d27d31d5bb1a89f2f95461df103\", \"b527d253099947040f78d2b1e70f06725391e3a1\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    console.log(\"GA\", gameKey, sKey);\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"App\", \"Network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"App\", \"Game\", \"Start\");\r\n    new Game();\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, level: string, score?:number, customs?:{[id: string]: any}) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"world\", \"stage\", level, score, customs);\r\n    /*gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });*/\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    /*gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });*/\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}