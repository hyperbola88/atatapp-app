{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/fps.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","checkPlaying","Math","floor","random","playing","toString","play","console","error","stop","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Stats","require","world","app","FPS","original","pixiHooks","PIXIHooks","stat","StatsJSAdapter","stats","element","dom","domElement","style","left","addEventListener","event","shiftX","clientX","getBoundingClientRect","shiftY","clientY","top","dragged","moveAt","pageX","pageY","onMouseMove","document","mouseUpHandler","e","removeEventListener","stopPropagation","makeDraggable","body","appendChild","ticker","add","update","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","renderer","plugins","interaction","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","step","bodies","forEach","userData","transform","v2","interpolatedPosition","position","rotateView","interpolatedAngle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","AdType","DummySocial","score","txt","success","language","gameKey","secretKey","sendAdEvent","EGAAdAction","Show","EGAAdType","Interstitial","Promise","resolve","RewardedVideo","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","reject","log","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","showInter","showReward","finishLoading","gameplayStart","gameplayStop","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","angle","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","getTexture","getTexture2","savedType","kinematic","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","cos","sin","playRandom","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","sendEvent","Date","getTime","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","startTime","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","onStart","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","time","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStartTime","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","levelStarted","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","sendStartLevelEvent","maximum","addActiveBlock","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","delta","MenuState","pauseTime","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","playArgue","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","getLevelTime","idealTime","sendFinishLevelEvent","EGAProgressionStatus","Complete","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","customs","sendProgressionEvent","Start","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","bonusBalls","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","skullsArr","includes","createGoalBlock","createBottomExit","addBeginSkulls","circle","setPermanentSkull","onGameOver","obstacle","Static","Random","Fail","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdError","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","status","addProgressionEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","RewardReceived","category","label","addDesignEvent","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.bdf1dba028cc07b80b09.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([201,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing || !checkPlaying) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string, checkPlaying: boolean = false) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        if (!this.all[name].playing() || !checkPlaying) {\r\n            this.all[name].play();\r\n        }\r\n    }\r\n    public stop(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].stop();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { PIXIHooks, StatsJSAdapter } from \"gstats/dist/main\";\r\nimport { Application } from \"pixi.js\";\r\n\r\nwindow.Stats = require(\"stats.js/build/stats.min.js\");\r\n\r\nexport class FPS {\r\n    constructor(app: Application) {\r\n        // We're silencing the error message (not the actual error) from the PIXIHooks constructor\r\n        // so it does not flood the analytics when WebGL is not supported\r\n\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        const original = console.error;\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        console.error = () => undefined;\r\n        const pixiHooks = new PIXIHooks(app);\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        console.error = original;\r\n\r\n        const stat = new StatsJSAdapter(pixiHooks);\r\n        const stats = stat.stats as { dom?: HTMLElement; domElement?: HTMLElement };\r\n        const element = (stats.dom ?? stats.domElement) as HTMLElement;\r\n        element.style.left = \"200px\";\r\n        makeDraggable(element);\r\n        document.body.appendChild(element);\r\n        app.ticker.add(stat.update.bind(stat));\r\n    }\r\n}\r\n\r\nfunction makeDraggable(element: HTMLElement) {\r\n    element.addEventListener(\"mousedown\", (event) => {\r\n        const shiftX = event.clientX - element.getBoundingClientRect().left;\r\n        const shiftY = event.clientY - element.getBoundingClientRect().top;\r\n        let dragged = false;\r\n\r\n        function moveAt(pageX: number, pageY: number) {\r\n            element.style.left = `${pageX - shiftX}px`;\r\n            element.style.top = `${pageY - shiftY}px`;\r\n        }\r\n\r\n        moveAt(event.pageX, event.pageY);\r\n\r\n        function onMouseMove(event: MouseEvent) {\r\n            moveAt(event.pageX, event.pageY);\r\n            dragged = true;\r\n        }\r\n\r\n        // move the element on mousemove\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // drop the element, remove unneeded handlers\r\n        const mouseUpHandler = (e: MouseEvent) => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n            document.removeEventListener(\"mouseup\", mouseUpHandler);\r\n            if (dragged) e.stopPropagation();\r\n        };\r\n\r\n        element.addEventListener(\"mouseup\", mouseUpHandler);\r\n    });\r\n}\r\n","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.interpolatedPosition;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.interpolatedAngle);\r\n                } else {\r\n                  sprite.rotation = body.interpolatedAngle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { EGAAdAction, EGAAdType, sendAdEvent } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"28b00d27d31d5bb1a89f2f95461df103\",\r\n      secretKey: \"b527d253099947040f78d2b1e70f06725391e3a1\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n    return new Promise<void>((resolve)=> {\r\n      const r = Math.random() < 0.5;\r\n      window.setTimeout(()=> {\r\n        resolve();\r\n      }, r ? 1000 : 0);\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    sendAdEvent(\r\n      EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return new Promise<boolean>((resolve)=> {\r\n      window.setTimeout(()=> {\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\nimport { sounds } from \"../../core/SoundManager\";\nimport { hideLoading, showLoading } from \"../BaseGame\";\n//////////////////\n///////////////////////////////////////////////////\n////////////////////\n/////////////////////////////////////////////\n////////////////////\n/////////////////////////////////////////////////\n/////////\nimport { DummySocial } from \"./social/DummySocial\";\n//////////\n\nexport enum AdType {\n    RewardedVideo = 2,\n    Interstitial = 4,\n}\nexport interface ILeaderboardEntry {\n    rank: number;\n    score: number;\n    highscore?: number;\n    player: IPlayerEntry;\n    hasBonus?: boolean;\n    friend?: boolean;\n}\nexport interface IPlayerEntry {\n    name: string; \n    photo: string; \n    player_id: string;\n}\nexport interface IInited {\n    success: boolean, \n    gameKey: string, \n    secretKey: string, \n    language: string\n}\nexport interface ISocial {\n    init(): Promise<IInited>;\n    setStorageData(key: string, value: string): Promise<void>;\n    getStorageData(key: string, value?: string): Promise<string>;\n    setScore(value: number): Promise<void>;\n    getScore(): Promise<number>;\n    getPlayerEntry(): IPlayerEntry;\n    getFriends(): Promise<ILeaderboardEntry[]>;\n    showInter(): Promise<void>;\n    showReward(): Promise<boolean>;\n    showReward(): Promise<boolean>;\n    performHapticFeedback(): void;\n    startLoading(): void;\n    finishLoading(): Promise<void>;\n    loadingProgress(p: number): void;\n    shareScore(txt: string): void;\n    showInvitePage(): void;\n    createShortcut(): Promise<void>;\n    showGlobalLeaders(score: number): void;\n    gameplayStart(): void;\n    gameplayStop(): void;\n    shouldShareShow(): boolean;\n    shouldLeadersShow(): boolean;\n    shouldScalePlayer(): boolean;\n    shouldPlayFirstAds(): boolean;\n    atatappLink(): string;\n}\nconst getLocalStorage = () => {\n    try {\n        return localStorage;\n    } catch (ex) {\n        return undefined;\n    }\n};\nlet instance: ISocial;\nlet firstPlay: boolean = true;\nexport const initSocial = async(): Promise<IInited> => {\n    return new Promise<IInited>((resolve, reject)=> {\n//////////////////\n//////////////////////////////////\n////////////////////\n////////////////////////////////////\n////////////////////\n/////////////////////////////////////\n/////////\n        instance = new DummySocial();\n//////////\n        console.log(instance);\n        if (instance) {\n            instance.init().then((b)=> {\n                //window.clearTimeout(t);\n                resolve(b);\n            }).catch((r)=>{\n                sendError({\"error\":\"initSocial\"});\n                reject();\n            });\n        }\n    });\n}\nexport const setScore = async(score: number) => {\n    const s = await getScore();\n    if (score > s) {\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\n    }\n    await instance.setScore(score);\n}\nexport const getScore = async(): Promise<number> => {\n    let s = await instance.getScore();\n    if (!s || s === 0) {\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")!) || 0;\n    }\n    return s;\n}\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\n    getLocalStorage()?.setItem(key, value);\n    await instance.setStorageData(key, value);\n}\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\n    let s = await instance.getStorageData(key, value);\n    if (s === value) {\n        s = getLocalStorage()?.getItem(key) || value;\n    }\n    return s;\n}\nexport const getPlayerEntry = (): IPlayerEntry => {\n    let p = instance.getPlayerEntry();\n    if (!p) {\n        p = {\n            name: \"You\",\n            player_id: \"999\",\n            photo: \"assets/images/player26.jpg\",\n        }\n    }\n    return p;\n}\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\n    const p: string[] = [];\n    for (let i = 0; i < 26; i++) {\n        p.push(`assets/images/player${i}.jpg`);\n    }\n    let score = 0;\n    const r:ILeaderboardEntry[] = await instance.getFriends();\n    const l = 19 - r.length;\n    for (let i = 0; i < l; i++) {\n        score += Math.floor(Math.random()*600) + 100;\n        if (i === l - 1) {\n            score = Math.floor(score * 1.6);\n        }\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\n        r.push(entry);\n    }\n    return r;\n}\nexport const showADS = async(type: AdType): Promise<boolean> => {\n    let r = false;\n    showLoading();\n    const mutedMusic = sounds.muteMusic;\n    const muteSounds = sounds.muteSounds;\n    sounds.muteMusic = true;\n    sounds.muteSounds = true;\n    switch (type) {\n        case AdType.Interstitial:\n            await instance.showInter();\n            r = true;\n            break;\n        case AdType.RewardedVideo:\n            r = await instance.showReward();\n            break;\n    }\n    firstPlay = false;\n    hideLoading();\n    sounds.muteMusic = mutedMusic;\n    sounds.muteSounds = muteSounds;\n    return r;\n}\nexport const performHapticFeedback = () => {\n    instance.performHapticFeedback();\n}\nexport const startLoading = () => {\n    instance.startLoading();\n}\nexport const loadingProgress = (p) => {\n    instance.loadingProgress(p);\n}\nexport const finishLoading = async() => {\n    return instance.finishLoading();\n}\nexport const shouldScalePlayer = (): boolean => {\n    return live && instance.shouldScalePlayer();\n}\nexport const shouldShareShow = (): boolean => {\n    return instance.shouldShareShow();\n}\nexport const shouldLeadersShow = (): boolean => {\n    return instance.shouldLeadersShow();\n}\nexport const shouldPlayFirstAds = (): boolean => {\n    return firstPlay && instance.shouldPlayFirstAds();\n}\nexport const shareScore = (txt: string) => {\n    instance.shareScore(txt);\n}\nexport const showInvitePage = () => {\n    instance.showInvitePage();\n}\nexport const createShortcut = async()=> {\n    if (!firstPlay) return;\n    return await instance.createShortcut();\n}\nexport const gameplayStart = () => {\n    instance.gameplayStart();\n}\nexport const gameplayStop = () => {\n    instance.gameplayStop();\n}\nexport const atatappLink = () => {\n    return instance.atatappLink();\n}\nexport const showGlobalLeaders = (score: number) => {\n    instance.showGlobalLeaders(score);\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setPermanentSkull() {\r\n        this.permanentSkull = true;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            sounds.playRandom(\"ball pop \", 3);\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            sounds.play(\"ball grow\");\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        sounds.stop(\"fail ticking\");\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        sounds.play(\"fail ticking\", true);\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../../..\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private async onPressed() {\r\n        sendEvent(\"Game\", \"Powerup\", \"Click\");\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            const start = new Date().getTime();\r\n            gameSettings.paused = true;\r\n            let success = await showADS(AdType.RewardedVideo);\r\n            success = true;\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id, new Date().getTime() - start);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    private startTime: number;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        this.startTime = new Date().getTime();\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        sounds.play(\"window open\");\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n        this.emit(\"hide\", new Date().getTime() - this.startTime);\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../../core/SoundManager\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        sounds.play(\"score ticking\");\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            sounds.stop(\"score ticking\");\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        if (!won) timeBonus = 0;\r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        sounds.play(\"window open\");\r\n        sounds.play(won ? \"win\" : \"fail\");\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onStart: ()=> {\r\n            if (won) sounds.play(\"score ticking\");\r\n        }, onUpdate, onComplete: ()=> {\r\n            sounds.stop(\"score ticking\");\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onStart: ()=> {\r\n                        sounds.play(\"score ticking\");\r\n                    }, onUpdate, onComplete: ()=> {\r\n                        sounds.stop(\"score ticking\");\r\n                    }});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        sounds.stop(\"score ticking\");\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    private okBut: Button;\r\n    private xBut: Button;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        this.okBut = okBut;\r\n        this.xBut = xBut;\r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        this.okBut.disabled = false;\r\n        this.xBut.disabled = false;\r\n        sounds.play(\"window open\");\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.okBut.disabled = true;\r\n        this.xBut.disabled = true;\r\n        this.visible = false;\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            sounds.play(\"ball explosion\", true);\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { AdType, gameplayStart, gameplayStop, setStorageData, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number,\r\n    bonusBalls: number[]\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n    private levelStarted: boolean;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Game\", \"Menu\", \"Click\");\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.tutorial.on(\"hide\", (d)=> {\r\n            this.levelStartTime += d;\r\n        });\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.levelStarted = false;\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n            this.sendStartLevelEvent({iaps:iaps.toString()});\r\n        } else {\r\n            this.sendStartLevelEvent();\r\n        }\r\n        this.levelStarted = true;\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        \r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            gameplayStop();\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        const delta = new Date().getTime();\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        gameplayStop();\r\n        this.pausePopup.show(async(exit: boolean)=> {\r\n            if (exit) {\r\n                await showADS(AdType.Interstitial);\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                sendEvent(\"Game\", \"Pause\", \"Exit\");\r\n                stateManager.start(MenuState);\r\n            } else {\r\n                sendEvent(\"Game\", \"Pause\", \"Cancel\");\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                const pauseTime = new Date().getTime() - delta;\r\n                this.levelStartTime += pauseTime;\r\n                gameplayStart();\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        const r = Math.random() < 0.5;\r\n        if (amount === 3) {\r\n            sounds.play(\"emoji yeah\");\r\n        } else if (amount === 4) {\r\n            if (r) {\r\n                sounds.play(\"emoji wah\");\r\n            } else {\r\n                sounds.play(\"emoji oh\");\r\n            }\r\n        }\r\n        if (amount >= 5) {\r\n            if (r) {\r\n                sounds.playRandom(\"emoji wow \", 2);\r\n            } else {\r\n                sounds.play(\"emoji ahh\");\r\n            }\r\n            \r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        sendEvent(\"Game\", \"Bonus\", \"Activate\", bonus);\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.playArgue(2);\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.position.y > 450 && this.levelStarted) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = this.getLevelTime();\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n            this.sendFinishLevelEvent(EGAProgressionStatus.Complete, this.score + timeBonus, {score: this.score, time, timeBonus});\r\n            this.levelStarted = false;\r\n            gameplayStop();\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private getLevelTime() {\r\n        return  new Date().getTime() - this.levelStartTime;\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        showADS(AdType.Interstitial).then(()=> {\r\n            this.createMoveWalls();\r\n            this.generateNewBlocks().then(()=> {\r\n                const iaps = this.generateIAPS();\r\n                this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                    if (this.currentLevelData.iaps) {\r\n                        this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                        this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                        this.powerup1.visible = true;\r\n                        this.powerup2.visible = true;\r\n                        this.sendStartLevelEvent({iaps:iaps.toString()});\r\n                    } else {\r\n                        this.sendStartLevelEvent();\r\n                    }\r\n                    gameplayStart();\r\n                    this.levelStarted = true;\r\n                    this.generateLineBlocks();\r\n                    this.addActiveBlock();\r\n                    this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                    this.nextTimer.unFreeze();\r\n                    this.levelStartTime = new Date().getTime();\r\n                });\r\n            });\r\n            gameSettings.paused = false;\r\n        });\r\n        this.isTransition = false;\r\n    }\r\n    private sendStartLevelEvent(customs?:{[id: string]: any}) {\r\n        console.log(\"send start\",\"level\"+this.currentLevelData.key,customs);\r\n        sendProgressionEvent(EGAProgressionStatus.Start,\"level\"+this.currentLevelData.key, 0, customs);\r\n    }\r\n    private sendFinishLevelEvent(s: EGAProgressionStatus.Complete | EGAProgressionStatus.Fail ,score: number, customs?:{[id: string]: any}) {\r\n        console.log(\"send finish\",\"level\"+this.currentLevelData.key,score);\r\n        sendProgressionEvent(s,\"level\"+this.currentLevelData.key, score, customs);\r\n    }\r\n    private async startPowerup(id: EIAPBonus, time?: number) {\r\n        sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n        if (time) {\r\n            this.levelStartTime += time;\r\n        }\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                sounds.play(\"timer freeze\");\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        sounds.play(\"rocket launch\");\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.currentLevelData.bonusBalls.length > 0 && Math.random() < 0.08) {\r\n            if (this.currentLevelData.bonusBalls.length === 2) {\r\n                return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n            } else if (this.currentLevelData.bonusBalls.length === 1) {\r\n                if (this.currentLevelData.bonusBalls[0] === 1) {\r\n                    return CircleBlock.ANY_TYPE;\r\n                } else {\r\n                    return CircleBlock.RAINBOW_TYPE;\r\n                }\r\n            }\r\n            \r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n            sounds.play(\"ball release\");\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            sounds.play(\"ball release\");\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        const skullsArr: CircleBlock[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        this.playArgue();\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            if (skullsIds.includes(i)) {\r\n                skullsArr.push(f);\r\n            }\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        this.delay(3).then(()=> {\r\n            this.createBottomExit();\r\n        });\r\n        \r\n        if (skullsArr.length > 0) {\r\n            await this.delay(0.5);\r\n            await this.addBeginSkulls(skullsArr);\r\n        }\r\n    }\r\n    private playArgue(amount: number = 3) {\r\n        sounds.play(\"emoji argue 0\");\r\n        if (amount > 1) {\r\n            this.delay(0.9).then(()=> {\r\n                sounds.play(\"emoji argue 1\");\r\n                if (amount > 2) {\r\n                    this.delay(0.9).then(()=> {\r\n                        sounds.play(\"emoji argue 2\");\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n    private async addBeginSkulls(skulls: CircleBlock[]) {\r\n        let i = 0;\r\n        for (let circle of skulls) {\r\n            if (circle) {\r\n                gsap.to(circle.scale, {x: 5, y: 5, delay: i*0.6, duration: 0.1, ease: Expo.easeOut, onComplete: ()=> {\r\n                    circle.setPermanentSkull();\r\n                }});\r\n                gsap.to(circle.scale, {x: 1, y: 1, delay: i, duration: 0.5, ease: Expo.easeIn});\r\n                i += 0.05;\r\n            }\r\n        }\r\n        await this.delay(0.7);\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.levelStarted = false;\r\n        this.sendFinishLevelEvent(EGAProgressionStatus.Fail, 0, {score: this.score, time: this.getLevelTime(), timeBonus: 0});\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        !instanceA.isGoal() && !instanceB.isGoal() && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE && !instanceB.isGoal()) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE && !instanceA.isGoal());\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && !notRainbow.isGoal() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        sounds.play(\"startup explosion\");\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        sounds.stop(\"startup explosion\");\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Mute\", \"click\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Unmute\", \"click\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Menu\", \"View\", \"Start\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Menu\", \"View\", \"Close\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Prev\", \"Click\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Next\", \"Click\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        sendEvent(\"Menu\", \"Play\", \"Click\", this.activeLevelId + 1);\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Next\", \"Click\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Prev\", \"Click\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Comics\", \"View\", \"Start\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Comics\", \"View\", \"Close\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.5 });\r\n      const sVol = 1;\r\n      sounds.add(\"ball hit 0\", { volume: sVol });\r\n      sounds.add(\"ball hit 1\", { volume: sVol });\r\n      sounds.add(\"ball hit 2\", { volume: sVol });\r\n      sounds.add(\"ball grow\", { volume: sVol });\r\n      sounds.add(\"ball pop 0\", { volume: sVol });\r\n      sounds.add(\"ball pop 1\", { volume: sVol });\r\n      sounds.add(\"ball pop 2\", { volume: sVol });\r\n      sounds.add(\"click\", { volume: sVol });\r\n      sounds.add(\"emoji ahh\", { volume: sVol });\r\n      sounds.add(\"emoji argue 0\", { volume: sVol });\r\n      sounds.add(\"emoji argue 1\", { volume: sVol });\r\n      sounds.add(\"emoji argue 2\", { volume: sVol });\r\n      sounds.add(\"emoji oh\", { volume: sVol });\r\n      sounds.add(\"emoji wah\", { volume: sVol });\r\n      sounds.add(\"emoji wow 0\", { volume: sVol });\r\n      sounds.add(\"emoji wow 1\", { volume: sVol });\r\n      sounds.add(\"emoji yeah\", { volume: sVol });\r\n      sounds.add(\"startup explosion\", { volume: sVol });\r\n      sounds.add(\"ball explosion\", { volume: 0.6 });\r\n      sounds.add(\"ball release\", { volume: sVol });\r\n      sounds.add(\"fail ticking\", { volume: sVol });\r\n      sounds.add(\"fail\", { volume: sVol });\r\n      sounds.add(\"rocket launch\", { volume: sVol });\r\n      sounds.add(\"timer freeze\", { volume: sVol });\r\n      sounds.add(\"win\", { volume: sVol });\r\n      sounds.add(\"window open\", { volume: sVol });\r\n      sounds.add(\"score ticking\", { volume: sVol, loop: true });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"28b00d27d31d5bb1a89f2f95461df103\", \"b527d253099947040f78d2b1e70f06725391e3a1\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    console.log(\"GA\", gameKey, sKey);\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"App\", \"Network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"App\", \"Game\", \"Start\");\r\n    new Game();\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, level: string, score?:number, customs?:{[id: string]: any}) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"world\", \"stage\", level, score, customs);\r\n    /*gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });*/\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    /*gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });*/\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}