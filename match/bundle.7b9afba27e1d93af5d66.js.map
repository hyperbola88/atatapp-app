{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","material","undefined","BaseGame","options","autoDensity","resolution","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","BaseState","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","btn","normalState","downState","normalTexture","downTexture","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","createBody","DYNAMIC","_kinematic","filters","GlowFilter","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","increase","stepsAmount","steps","v","goalType","endType","fromBoom","max","sameColorNeighbors","k","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","a","NextBlocksTimer","bar","GameViewState","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","lineStyle","moveTo","lineTo","nextTimer","gameplayStart","random3BodyPos","powerups","isTransition","nextType","nextLines","isActivePowerup","level","generateLineBlocks","tick","maxY","moving","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","addActiveBlock","onClick","onTapStart","Ticker","shared","update","min","missle","copyFrom","Expo","createExplosion","explodePoints","children","removeChildren","bottomOpenWall","animateAndDestroy","moveBox","staticBox","nextBlock","activeBlock","mousePressed","addLineBlocks","drawMouse","wasEnd","wasGameOver","goal","rPos","velocity","floor","random","createMoveWalls","generateNewBlocks","startCountDeath","setProgress","moveBalls","log","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","kinematic","generateActiveBlock","toLocal","eventData","global","atan2","clear","xx","cos","yy","sin","abs","lp","lines","f","onGameOver","createBottomExit","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","remove","playBtn","onPlayClicked","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","Game","evt","bodyA","bodyB","instanceA","instanceB","shapeA","shapeB","correctType","levelComplete","block","boom","inst","big","small","middle","activeState","fireMissle","hitTest","startLoading","loader","onProgress","onError","url","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.7b9afba27e1d93af5d66.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([199,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.width = 1080;\r\n        back.height = 1920;\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > 1080 / 1920 ? width / 1080 : height / 1920;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / 1920;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    private txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected static stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0xFF0000, quality: 0.3, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom() {\r\n        this.increase(CircleBlock.stepsAmount-this.steps, true);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type !== CircleBlock.goalType && this.type !== CircleBlock.endType;\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        if (this.busy || !this.body) return;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= CircleBlock.stepsAmount) {\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    k.increase(CircleBlock.stepsAmount-k.steps, fromBoom);\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        return view;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.bar = new Sprite(Texture.WHITE);\r\n        this.bar.width = 700;\r\n        this.bar.height = 50;\r\n        this.addChild(this.bar);\r\n        this.bar.anchor.set(0.5,0.5);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.bar.width = 700*p;\r\n    }\r\n}","import { Container, Graphics, ObservablePoint, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints } from \"../Game\";\r\n\r\nexport class GameViewState extends BaseState {\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private level: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Container;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private random3BodyPos: [number,number][];\r\n\r\n    public create(): void {\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-390, 900);\r\n        this.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(-265, 900);\r\n        this.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Container();\r\n        this.addChild(this.previewBlocks);\r\n\r\n        const line = new Graphics();\r\n        line.lineStyle(4, 0x000000, 0.3);\r\n        line.moveTo(-400, 500);\r\n        line.lineTo(400, 500);\r\n        this.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(0, -600);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.random3BodyPos = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.level = 4;\r\n        this.generateLineBlocks(this.level - 3);\r\n        this.tick = 0;\r\n        this.maxY=0;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addChild(this.nextTimer);\r\n        this.addActiveBlock();\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        amount = Math.min(amount, this.random3BodyPos.length);\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.random3BodyPos[i];\r\n            if (!pos) continue;\r\n            const missle = new Sprite(Texture.from(`rocket1.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.5, 0.5);\r\n            missle.position.copyFrom(position);\r\n            this.addChild(missle);\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: 0.5, ease: Expo.easeIn, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.removeChild(missle);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      public levelComplete() {\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks.children.forEach((b)=> {\r\n            (b as CircleBlock).createBody(Body.DYNAMIC);\r\n            this.addChild(b);\r\n          });\r\n          this.previewBlocks.removeChildren();\r\n          this.bottomOpenWall.animateAndDestroy();\r\n          this.moveBox.animateAndDestroy();\r\n          this.staticBox.animateAndDestroy();\r\n          this.nextBlock.clean();\r\n          this.activeBlock.clean();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks(this.level - 3);\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        const rPos = [];\r\n        this.random3BodyPos = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > 660 / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : 660/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                rPos.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -600/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -1800/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n        });\r\n        let l = Math.min(3, rPos.length);\r\n        if (l > 0) {\r\n            while (l > 0) {\r\n                const i = Math.floor(Math.random()*rPos.length);\r\n                this.random3BodyPos.push(rPos[i]);\r\n                rPos.splice(i, 1);\r\n                l--;\r\n            }\r\n        }\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        if (this.isTransition && !wasEnd) {\r\n            this.tick = 0;\r\n            this.level+=1;\r\n            if (this.level > 7) {\r\n                this.level = 7;\r\n            }\r\n            this.createMoveWalls();\r\n            this.addChild(this.nextTimer);\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks(this.level - 3);\r\n                this.addActiveBlock();\r\n            });\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        this.tick+=1;\r\n        const p = this.tick%((this.level-3)*700);  \r\n        this.nextTimer.setProgress(1 - p/((this.level-3)*700));\r\n        if (p === 0) {\r\n            this.moveBalls();\r\n        }\r\n    }\r\n    private async startPowerup(id: number) {\r\n        console.log(id)\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, 650, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock() {\r\n        if (this.nextBlock) {\r\n            this.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = Math.floor(Math.random() * (this.nextLines.length + 3)) + 1;\r\n        this.nextBlock = new CircleBlock(-90, 650, this.nextType, false);\r\n        this.nextBlock.scale.set(0.7);\r\n        this.addChild(this.nextBlock);\r\n    }\r\n    private addActiveBlock() {\r\n        if (!this.nextType) {\r\n            this.nextType = Math.floor(Math.random() * (this.nextLines.length + 3)) + 1;\r\n        }\r\n        this.activeBlock = new CircleBlock(0, 650, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock();\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = 650;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || lp.y > 800) return;\r\n        this.mousePressed = true;\r\n        this.drawMouse();\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || lp.y > 800) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-650) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks(lines: number) {\r\n        this.previewBlocks.removeChildren();\r\n        let yy = -620 - lines*70;\r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = -300;\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.level) + 1;\r\n                const f = new CircleBlock(xx,yy,this.nextLines[j][i],false);\r\n                this.previewBlocks.addChild(f);\r\n                xx += 74;\r\n            }\r\n            yy+=70;\r\n        }\r\n    }\r\n    private addLineBlocks() {\r\n        this.previewBlocks.removeChildren();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        \r\n        for (let i = 0; i < 70; i++) {\r\n            const type = Math.floor(Math.random() * this.level) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.removeChildren();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\n\r\nexport class MenuState extends BaseState {\r\n    public create(): void {\r\n        const playBtn = new TextedButton(\"PLAY\", 100, 0x000000, 0xFFFFFF);\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(756, 1344);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const big = unusedBodies.length >= 5;\r\n    const small = unusedBodies.length === 2;\r\n    const middle = unusedBodies.length >= 3;\r\n    const amount = (small) ? 1 : (middle ? 2 : (big ? 3 : 0));\r\n    if (amount > 0) {\r\n      const state = stateManager.activeState as GameViewState;\r\n      const body = unusedBodies[Math.floor(Math.random()*unusedBodies.length)];\r\n      if (body) {\r\n        const block = (body as any).userData as CircleBlock;\r\n        state.fireMissle(amount, block.position);\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType) {\r\n          block.boom();\r\n        }\r\n      }\r\n    });\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    /*if (gameSettings.allQuests) {\r\n          const d = new Date();\r\n          gameSettings.dateString = `${d.getFullYear()}${d.getMonth()+1}${d.getDate()}`;\r\n          const level = gameSettings.allQuests.all.find((a)=>a.date === gameSettings.dateString);\r\n          gameSettings.quest = level || undefined;\r\n        }*/\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}