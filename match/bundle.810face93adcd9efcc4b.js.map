{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","bombType","onUpdate","updateShape","delay","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","a","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","icon","amount","onPressed","_id","id","NextBlocksTimer","NineSlicePlane","initialWidth","initialHeight","bar","barMask","mask","isFrozen","seconds","BoomMeter","barBorder","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","Text","fontSize","fill","fontWeight","align","clear","nextLines","text","lines","xx","f","addBlock","BonusIntroLetter","fontFamily","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","floor","toString","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","random","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","okBut","Emitter","conditions","callback","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","getTexture","bonuses","temp","LevelStart","texts","usingTexts","getNewText","wheelbox","words","Expo","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","activeBonus","None","randomBodiesPositions","nextType","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","unFreeze","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","MapState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","time","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","clearActiveBlocks","stopBonuses","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","KINEMATIC","velocity","goalType","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","moveBalls","boom","log","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","startRocket","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","toLocal","eventData","global","draw","lp","switchBlockes","setLines","startAmount","createObstacle","onGameOver","createBottomExit","obstacle","Static","Random","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","parseInt","calculateStars","repeat","content","Logo","explosion","face","logo","Elastic","playBtn","onPlayClicked","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","instB","changePosition","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.810face93adcd9efcc4b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([202,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        back.alpha = 0.7;\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.amount = 1;\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        this.amount = 1;\r\n        this.btn.alpha = 1;\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    private async onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            if (this.amount === 0) {\r\n                this.btn.alpha = 0.6;\r\n                this.icon.visible = true;\r\n            }\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: NineSlicePlane;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 600;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),6,4,6,4);\r\n        back.width = this.initialWidth;\r\n        back.height = this.initialHeight;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        this.bar.width = this.initialWidth;\r\n        this.bar.height = this.initialHeight;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.clean();\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n        gsap.to(this.back, {alpha: 0.3, duration: 0.3});\r\n        gsap.to(this.tutorial.scale, {x: s.x, y: s.y, duration: 0.3});\r\n        gsap.to(this.txt.scale, {x: 1, y: 1, duration: 0.3});\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { TextedButton } from \"../../../core/ui/TextedButton\";\r\nimport { calculateStars } from \"../../Game\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        const title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -340;\r\n        this.popup.addChild(title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public show(score: number, conditions: number[], callback: ()=>void) {\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        gsap.delayedCall(1, ()=> {\r\n            this.emitter.emit = true;\r\n            Ticker.shared.add(this.onTickEvent);\r\n        });\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        //this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n        \r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 - 100;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 120, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            }\r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-300, -610);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 3 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 4 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n\r\n        setSlowMo(false);\r\n        this.boltsActive = false;\r\n        this.nextTimer.clear();\r\n        this.boomMeter.reset(true);\r\n        this.levelStart.clear();\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.activeBonus = EBonus.None;\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        this.preview.visible = false;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.nextLines = [];\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        this.fxContainer.removeChildren();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n        const l = this.gameContainer.children.length;\r\n        for (let i = l - 1; i >= 0; i--) {\r\n            const c = this.gameContainer.children[i];\r\n            if ((c as any).createBody) {\r\n                this.gameContainer.removeChild(c);\r\n            }\r\n        }\r\n        gsap.globalTimeline.clear();\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MapState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS() {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.levelFinished.show(this.score, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            });\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                amount += ((body as any).userData as CircleBlock).boom(false); \r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\", this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType() {\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        //if (this.mousePressed) {\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            this.preview.draw(p);\r\n        //}\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n            });\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.gameContainer.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"TODO List\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            \r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good task to do today.\";\r\n            } else {\r\n                text = \"The task is done: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type) && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type) && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              (instanceB.type === 251) ? (instanceB as any).changePosition() : (instanceA as any).changePosition();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}