{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","material","undefined","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","createBody","DYNAMIC","_kinematic","filters","GlowFilter","color","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","a","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","textColor","toString","text","Text","fontFamily","fontSize","fill","NextBlocksTimer","NineSlicePlane","initialWidth","bar","barMask","mask","bell","AnimatedSprite","animationSpeed","gotoAndStop","isFrozen","seconds","BoomMeter","lineStyle","drawRect","current","min","wasEnd","Message","blocks","fontWeight","align","clear","nextLines","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","letters","getLetters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","floor","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","random","ry","EIAPBonus","EBonus","EObstacle","Tutorial","allConditions","textMap","Heart","NewLine","Recharge","Unbreak","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","globalTimeline","pause","stopPropagation","stopped","resume","GameViewState","backContainer","gameContainer","frontContainer","pad","menuBtn","MapState","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","topRect","addCondition","goalBlock","isTransition","meterBonus","bottomOpenWall","obstacles","levelId","activeBonus","None","randomBodiesPositions","powerups","nextType","isActivePowerup","generateLineBlocks","tick","maxY","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","maximum","currentLevelData","addActiveBlock","onClick","onTapStart","Ticker","shared","update","startPosition","fireMissle","addScore","boom","playBolts","bonus","getRandomBonus","setActiveBonus","bolt","time","abs","freeze","BoomLetters","BigBoomLetters","LaserLetters","getRandomPosition","clearMeterBonus","unFreeze","bonuses","missle","createExplosion","explodePoints","nextBlock","activeBlock","clearActiveBlocks","stopBonuses","animateAndDestroy","moveBox","staticBox","mousePressed","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","velocity","BottomPoint","goalType","bound","contains","reset","moveToNextLevel","createMoveWalls","generateNewBlocks","startCountDeath","setProgress","moveBalls","log","unusedBlocksRemoved","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","getRandomType","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","atan2","lp","switchBlockes","cos","sin","setLines","startAmount","createObstacle","onGameOver","createBottomExit","obstacle","Static","Random","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","remove","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","stars","parseInt","calculateStars","starsConditions","repeat","content","removeChildren","Logo","explosion","face","logo","Elastic","easeOut","Bounce","playBtn","onPlayClicked","stop","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","conditions","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","block","inst","instB","changePosition","activeState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.583676cb2c80ad79c1fa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([202,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type < 20 && (this.type === 250 || this.type === 251);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    protected txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: NineSlicePlane;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 600;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private bell: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),6,4,6,4);\r\n        back.width = this.initialWidth;\r\n        back.height = 15;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        this.bar.width = this.initialWidth;\r\n        this.bar.height = 15;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.bell.position.set(440,21);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n        this.bell.visible=false;\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        if (p === 1) {\r\n            this.bell.play();\r\n            gsap.delayedCall(2, ()=> {\r\n                this.bell.gotoAndStop(0);\r\n            });\r\n        }\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 100;\r\n    private barMask: Sprite;\r\n    constructor() {\r\n        super();\r\n        const back = new Graphics();\r\n        back.lineStyle(4,0x2ab909,1);\r\n        back.drawRect(0,0,this.initialWidth, 40);\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.WHITE);\r\n        this.bar.width = this.initialWidth;\r\n        this.bar.height = 40;\r\n        this.bar.tint = 0x2ab909;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset() {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n    }\r\n    public update(amount: number): boolean {\r\n        //console.log(amount);\r\n        if (amount < 2) {\r\n            amount = 0;\r\n        } else {\r\n            this.current += amount;\r\n            this.current = Math.min(this.current, this.max);\r\n        }\r\n        const wasEnd = this.current >= this.max;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * (this.current / this.max), duration: 0.2});\r\n        if (wasEnd) {\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = 80;\r\n        back.height = 80;\r\n        back.tint = 0xcacaca;\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontWeight: \"bold\", fontSize: 70});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        const letters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < letters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const letters = this.getLetters();\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < letters.length; i++) {\r\n            l++;\r\n            if (letters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(letters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = 80 * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            for (let i = 0; i < letters.length; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = letters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (letters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = 80 * currentLength;\r\n                    x = -w*0.5;\r\n                    y += 100;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (letters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    protected getLetters(): string[] {\r\n        return [\"S\", \"U\", \"P\", \"E\", \"R\", \" \", \"P\", \"U\", \"P\", \"E\", \"R\", \" \", \"B\", \"O\", \"O\", \"M\"];\r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0xBBBBBB;\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontSize: 10, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.view.addChild(this.txt);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.clean();\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x777777;\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Heart, \"The HEART is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new Emoji!\");\r\n        this.textMap.set(ETutorial.Recharge, \"The battery is full! Take a Bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This icon you cannot destroy.\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        switch(type) {\r\n            case ETutorial.Heart:\r\n            case ETutorial.NewLine:\r\n            case ETutorial.Recharge:\r\n            case ETutorial.Unbreak:\r\n                const pos = data.pos as IPointData;\r\n                const scale = data.scale as IPointData;\r\n                this.tutorial.scale.x *= scale.x;\r\n                this.tutorial.scale.y *= scale.y;\r\n                this.tutorial.position.copyFrom(pos);\r\n                this.txt.position.copyFrom(pos);\r\n                //console.log(scale);\r\n                if (scale.x === 1) {\r\n                    this.txt.x -= 60 + this.txt.width;\r\n                } else {\r\n                    this.txt.x += 52;\r\n                }\r\n                if (scale.y === 1) {\r\n                    this.txt.y -= this.txt.height;\r\n                } else {\r\n                    this.txt.y += 52;\r\n                }\r\n                break;\r\n        }\r\n        this.visible = true;\r\n        gameSettings.paused = true;\r\n        gsap.globalTimeline.pause();\r\n        window.setTimeout(()=> {\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 100)\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, getStorageData, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { calculateStars, explodePoints } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp,\r\n    RocketLeft,\r\n    All\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Sprite;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n\r\n    public create(): void {\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            stateManager.start(MapState);\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-265, 600);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(265, 600);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.preview.anchor.set(0.5, 1);\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-300, -610);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(205, -710);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const {position} = this.goalBlock;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position.x < -50) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.meterBonus !== undefined, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        //this.addChild(this.nextTimer);\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        //this.addChild(this.boomMeter);\r\n        this.addActiveBlock();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (this.levelId > 1) this.playBolts(amount, startPosition);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.5;\r\n        amount = Math.min(amount, 6);\r\n        for (let i = 0; i < amount; i++) {\r\n            const bolt = new Sprite(Texture.from(`bolt.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.gameContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.gameContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n\r\n    //OLD BONUSES\r\n    /*private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                this.clearActiveBlocks();\r\n                this.addActiveBlock();\r\n                break;\r\n            case EBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break;\r\n            case EBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }*/\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.gameContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.gameContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.gameContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd) {\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.moveToNextLevel();\r\n            this.score = 0;\r\n            this.scorePlace.score = 0;\r\n            this.createMoveWalls();\r\n            //this.addChild(this.nextTimer);\r\n            this.nextTimer.freeze();\r\n            this.obstacles.forEach((o)=> {\r\n                o.clean();\r\n            });\r\n            this.obstacles=[];\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.nextTimer.unFreeze();\r\n            });\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=1;\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                amount += ((body as any).userData as CircleBlock).boom(false); \r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\", this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n    }\r\n    private async startPowerup(id: number) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        //this.nextBlock.scale.set(0.7);\r\n        this.pad.addChild(this.nextBlock);\r\n    }\r\n    private getRandomType() {\r\n        //if (this.activeBonus === EBonus.Rainbow) return CircleBlock.rainbowType;\r\n        //const rainbowChance = Math.random() < 0.15;\r\n        //if (rainbowChance) return CircleBlock.rainbowType;\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n       /* if (this.nextType === CircleBlock.rainbowType) {\r\n            this.activeBonus = true;\r\n        }*/\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.rotation = angle + Math.PI/2;\r\n            /*this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }*/\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        //this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.padRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n            });\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.gameContainer.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        //this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n\r\n        //todo clear everything\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"TODO List\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            \r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good task to do today.\";\r\n            } else {\r\n                text = \"The task is done: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\nimport * as WebFont from \"webfontloader\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (!state || !state.unusedBlocksRemoved) return;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (amount > 0) {\r\n      const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n      if (body) {\r\n        pos = ((body as any).userData as CircleBlock).position;\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n         amount += block.boom();\r\n        }\r\n      }\r\n    });\r\n    amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}