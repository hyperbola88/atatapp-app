{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","skullType","anyType","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","permanentSkull","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","gravityScale","getTexture","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","prizeIcon","okBut","Emitter","won","time","conditions","callback","level","prizes","idealTime","timeBonus","round","log","prize","powerupDone","showed","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","words","Expo","h","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","waitForOver","activeBonus","None","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","levelStartTime","Date","getTime","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","goalType","isGoal","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","rocket","forActive","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","includes","onGameOver","createBottomExit","obstacle","Static","Random","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","heart","playBtn","onPlayClicked","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","skip","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","heartDeath","vec2","distance","previousPosition","playRandom","inst","instB","changePosition","shake","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","KINEMATIC","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.bfea0e6824da14882797.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    bounceMaterial: undefined,\r\n    activeBallMaterial: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251 || this.type === CircleBlock.skullType || this.type === CircleBlock.anyType);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public static skullType = 3000;\r\n    public static anyType = 4000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.skullType;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.skullType && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.skullType;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        this.body.gravityScale = 1;\r\n        this.type = CircleBlock.skullType;\r\n        this.view.texture = Texture.from(`${this.type}.png`);\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.BALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS | ECollisionGroups.MOVER;\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = true;//await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 300;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -340;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public async show(won: boolean, score: number, time: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | undefined) {\r\n        \r\n        const {idealTime} = gameSettings.levels[level];\r\n        const timeBonus = (won && time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n        console.log(level.toString(), prizes, time, timeBonus);\r\n        score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes ? prizes[0] : undefined;\r\n        if (prize !== undefined && score >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonuses && bonuses.length > 0) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay: gsap.core.Tween;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: this.bottomOpenWall && this.levelId === 13 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId > 9 && this.nextType === CircleBlock.anyType, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MenuState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | undefined {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        gsap.killTweensOf(this.activeBlock);\r\n        gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                /*if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else */\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    //body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                    //body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.isGoal() ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = new Date().getTime() - this.levelStartTime;\r\n            this.levelFinished.show(true, this.score, time, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                amount += b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n                this.levelStartTime = new Date().getTime();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                gsap.delayedCall(1,()=> {\r\n                    this.shakeScreen();\r\n                })\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.levelId > 9 && Math.random() < 0.02) {\r\n            return CircleBlock.anyType;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        a.body.gravityScale = 0;\r\n        a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n        //a.body.type = Body.KINEMATIC;\r\n        //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.skullType;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver, this);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver, this);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, undefined);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n        this.createMapItems();\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i ===0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"left\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"right\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(data.name,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.okBtn = undefined;\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, METER_SIZE, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body, vec2 } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      // heart + the end\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      // heart + skull\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        if (instanceA.type === CircleBlock.skullType) {\r\n          instanceA.boom();\r\n        } else {\r\n          instanceB.boom();\r\n        }\r\n        this.heartDeath();\r\n        return;\r\n      }\r\n      // type Any + skull\r\n      if (\r\n        (instanceA.type === CircleBlock.anyType &&\r\n          instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.anyType &&\r\n          instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        instanceA.boom();\r\n        instanceB.boom();\r\n        return;\r\n      }\r\n      //rocket\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType &&\r\n          !instanceB.isGoal()\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType &&\r\n          !instanceA.isGoal()\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      //no shapes\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n        sounds.playRandom(\"ball hit \", 3);\r\n      }      \r\n      \r\n      //main logic\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body: Body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (instanceA.kinematic && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (instanceB.kinematic && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.gravityScale = 1;\r\n          inst.shape.material = gameSettings.material;\r\n          body.mass = 5;\r\n          body.updateMassProperties();\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n            this.shake();\r\n          } else if (instB.type === 250) {\r\n            this.shake();\r\n          }\r\n          if (instanceA.type === CircleBlock.goalType || instanceB.type === CircleBlock.goalType) return;\r\n          if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n            instanceA.kinematic = false;\r\n            instanceB.kinematic = false;\r\n            instanceA.body.gravityScale = 1;\r\n            instanceB.body.gravityScale = 1;\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else if (instB.type === CircleBlock.skullType) {\r\n            inst.setSkull();\r\n          }\r\n        } else {\r\n          if (instanceA.kinematic) {\r\n            bodyA.gravityScale = 1;\r\n            instanceA.shape.material = gameSettings.material;\r\n            bodyA.mass = 5;\r\n            bodyA.updateMassProperties();\r\n          } else if (instanceB.kinematic) {\r\n            bodyB.gravityScale = 1;\r\n            instanceB.shape.material = gameSettings.material;\r\n            bodyB.mass = 5;\r\n            bodyB.updateMassProperties();\r\n          }\r\n          if (instanceA.type === CircleBlock.goalType || instanceB.type === CircleBlock.goalType) return;\r\n          if (\r\n            (instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              instanceA.kinematic = false;\r\n              instanceB.kinematic = false;\r\n              if (instanceA.body) {\r\n                instanceA.body.gravityScale = 1;\r\n              }\r\n              if (instanceB.body) {\r\n                instanceB.body.gravityScale = 1;\r\n              }\r\n              \r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              instanceA.kinematic = false;\r\n              instanceB.kinematic = false;\r\n              if (instanceA.body) {\r\n                instanceA.body.gravityScale = 1;\r\n              }\r\n              if (instanceB.body) {\r\n                instanceB.body.gravityScale = 1;\r\n              }\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              if (instanceB.type === 251) {\r\n                this.shake();\r\n                (instanceB as any).changePosition();\r\n              }  else {\r\n                this.shake();\r\n                (instanceA as any).changePosition();\r\n              } \r\n          } else if ((instanceA.kinematic && instanceB.type === CircleBlock.skullType) ||\r\n          (instanceB.kinematic && instanceA.type === CircleBlock.skullType)) {\r\n            (instanceB.type === CircleBlock.skullType) ? instanceA.setSkull() : instanceB.setSkull();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected heartDeath() {\r\n    (stateManager.activeState as GameViewState).heartDeath();\r\n  }\r\n  protected shake() {\r\n    (stateManager.activeState as GameViewState).shakeScreen(Math.random() < 0.5);\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      sounds.add(\"ball hit 0\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 1\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 2\", { volume: 0.4 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}