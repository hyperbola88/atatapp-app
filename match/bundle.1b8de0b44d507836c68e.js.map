{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","rotateView","angle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","sendAdEvent","EGAAdAction","Show","EGAAdType","Interstitial","Promise","resolve","RewardedVideo","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","getTexture","getTexture2","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","cos","sin","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","sendEvent","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","log","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","sendStartLevelEvent","maximum","addActiveBlock","levelStartTime","Date","getTime","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","time","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","getLevelTime","idealTime","sendFinishLevelEvent","EGAProgressionStatus","Complete","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","customs","sendProgressionEvent","Start","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","bonusBalls","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","includes","createGoalBlock","createBottomExit","onGameOver","obstacle","Static","Random","Fail","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","playRandom","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdError","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","status","addProgressionEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","RewardReceived","category","label","addDesignEvent","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.1b8de0b44d507836c68e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.angle);\r\n                } else {\r\n                  sprite.rotation = body.angle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          //new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { EGAAdAction, EGAAdType, sendAdEvent } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"28b00d27d31d5bb1a89f2f95461df103\",\r\n      secretKey: \"b527d253099947040f78d2b1e70f06725391e3a1\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n    return new Promise<void>((resolve)=> {\r\n      const r = Math.random() < 0.5;\r\n      window.setTimeout(()=> {\r\n        resolve();\r\n      }, r ? 1000 : 0);\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    sendAdEvent(\r\n      EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return new Promise<boolean>((resolve)=> {\r\n      window.setTimeout(()=> {\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")!) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p: string[] = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            \r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../../..\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private async onPressed() {\r\n        sendEvent(\"Game\", \"Powerup\", \"Click\");\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            let success = await showADS(AdType.RewardedVideo);\r\n            success = true;\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        if (!won) timeBonus = 0;\r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate, onComplete: ()=> {\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onUpdate});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    private okBut: Button;\r\n    private xBut: Button;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        this.okBut = okBut;\r\n        this.xBut = xBut;\r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        this.okBut.disabled = false;\r\n        this.xBut.disabled = false;\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.okBut.disabled = true;\r\n        this.xBut.disabled = true;\r\n        this.visible = false;\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { AdType, gameplayStart, setStorageData, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number,\r\n    bonusBalls: number[]\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Game\", \"Menu\", \"Click\");\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n            this.sendStartLevelEvent({iaps:iaps.toString()});\r\n        } else {\r\n            this.sendStartLevelEvent();\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        \r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show(async(exit: boolean)=> {\r\n            \r\n            if (exit) {\r\n                await showADS(AdType.Interstitial);\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                sendEvent(\"Game\", \"Pause\", \"Exit\");\r\n                stateManager.start(MenuState);\r\n            } else {\r\n                sendEvent(\"Game\", \"Pause\", \"Cancel\");\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        sendEvent(\"Game\", \"Bonus\", \"Activate\", bonus);\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.GOAL_TYPE) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.position.y > 450) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = this.getLevelTime();\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n            this.sendFinishLevelEvent(EGAProgressionStatus.Complete, this.score + timeBonus, {score: this.score, time, timeBonus});\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private getLevelTime() {\r\n        return  new Date().getTime() - this.levelStartTime;\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        showADS(AdType.Interstitial).then(()=> {\r\n            this.createMoveWalls();\r\n            this.generateNewBlocks().then(()=> {\r\n                const iaps = this.generateIAPS();\r\n                this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                    if (this.currentLevelData.iaps) {\r\n                        this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                        this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                        this.powerup1.visible = true;\r\n                        this.powerup2.visible = true;\r\n                        this.sendStartLevelEvent({iaps:iaps.toString()});\r\n                    } else {\r\n                        this.sendStartLevelEvent();\r\n                    }\r\n                    \r\n                    this.generateLineBlocks();\r\n                    this.addActiveBlock();\r\n                    this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                    this.nextTimer.unFreeze();\r\n                    this.levelStartTime = new Date().getTime();\r\n                });\r\n            });\r\n            gameSettings.paused = false;\r\n        });\r\n        this.isTransition = false;\r\n    }\r\n    private sendStartLevelEvent(customs?:{[id: string]: any}) {\r\n        console.log(\"send start\",\"level\"+this.currentLevelData.key,customs);\r\n        sendProgressionEvent(EGAProgressionStatus.Start,\"level\"+this.currentLevelData.key, 0, customs);\r\n    }\r\n    private sendFinishLevelEvent(s: EGAProgressionStatus.Complete | EGAProgressionStatus.Fail ,score: number, customs?:{[id: string]: any}) {\r\n        console.log(\"send finish\",\"level\"+this.currentLevelData.key,score);\r\n        sendProgressionEvent(s,\"level\"+this.currentLevelData.key, score, customs);\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.currentLevelData.bonusBalls.length > 0 && Math.random() < 0.08) {\r\n            if (this.currentLevelData.bonusBalls.length === 2) {\r\n                return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n            } else if (this.currentLevelData.bonusBalls.length === 1) {\r\n                if (this.currentLevelData.bonusBalls[0] === 1) {\r\n                    return CircleBlock.ANY_TYPE;\r\n                } else {\r\n                    return CircleBlock.RAINBOW_TYPE;\r\n                }\r\n            }\r\n            \r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.SKULL_TYPE;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.sendFinishLevelEvent(EGAProgressionStatus.Fail, 0, {score: this.score, time: this.getLevelTime(), timeBonus: 0});\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE && !instanceB.isGoal()) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE && !instanceA.isGoal());\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && !notRainbow.isGoal() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Mute\", \"click\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Unmute\", \"click\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Menu\", \"View\", \"Start\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Menu\", \"View\", \"Close\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Prev\", \"Click\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Next\", \"Click\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        sendEvent(\"Menu\", \"Play\", \"Click\", this.activeLevelId + 1);\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Next\", \"Click\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Prev\", \"Click\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Comics\", \"View\", \"Start\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Comics\", \"View\", \"Close\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      sounds.add(\"ball hit 0\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 1\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 2\", { volume: 0.4 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"28b00d27d31d5bb1a89f2f95461df103\", \"b527d253099947040f78d2b1e70f06725391e3a1\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    console.log(\"GA\", gameKey, sKey);\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"App\", \"Network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"App\", \"Game\", \"Start\");\r\n    new Game();\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, level: string, score?:number, customs?:{[id: string]: any}) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"world\", \"stage\", level, score, customs);\r\n    /*gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });*/\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    /*gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });*/\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}