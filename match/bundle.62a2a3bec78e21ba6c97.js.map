{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","floor","CircleBlock","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","Text","toString","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","random","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","getTexture","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","prizeIcon","okBut","Emitter","conditions","callback","level","prizes","prize","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","words","Expo","h","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","activeBonus","None","randomBodiesPositions","nextType","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","MapState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","time","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","clearActiveBlocks","stopBonuses","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","KINEMATIC","velocity","goalType","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","moveBalls","boom","log","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","startRocket","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","toLocal","eventData","global","draw","lp","switchBlockes","setLines","startAmount","wasHeartMiddle","createObstacle","HeartMiddle","onGameOver","createBottomExit","obstacle","Static","Random","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","calculateStars","repeat","content","Logo","face","logo","Elastic","playBtn","onPlayClicked","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","instB","changePosition","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.62a2a3bec78e21ba6c97.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([202,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n    }\r\n    private async onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            await setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 300;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        const title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -340;\r\n        this.popup.addChild(title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public async show(score: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | undefined) {\r\n        const prize = prizes ? prizes[0] : undefined;\r\n        if (prize !== undefined && score >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        gsap.delayedCall(1, ()=> {\r\n            this.emitter.emit = true;\r\n            Ticker.shared.add(this.onTickEvent);\r\n        });\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonuses && bonuses.length > 0) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 8 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n\r\n        setSlowMo(false);\r\n        this.boltsActive = false;\r\n        this.nextTimer.clear();\r\n        this.boomMeter.reset(true);\r\n        this.levelStart.clear();\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.activeBonus = EBonus.None;\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        this.preview.visible = false;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.nextLines = [];\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        this.fxContainer.removeChildren();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n        const l = this.gameContainer.children.length;\r\n        for (let i = l - 1; i >= 0; i--) {\r\n            const c = this.gameContainer.children[i];\r\n            if ((c as any).createBody) {\r\n                this.gameContainer.removeChild(c);\r\n            }\r\n        }\r\n        gsap.globalTimeline.clear();\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MapState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | undefined {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.levelFinished.show(this.score, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                amount += b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType() {\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        //if (this.mousePressed) {\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            this.preview.draw(p);\r\n        //}\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                }\r\n            });\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle) return;\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"LEVELS:\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            \r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good level to play today.\";\r\n            } else {\r\n                text = \"The level is completed: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.okBtn = undefined;\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new ComicsState());\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(ComicsState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type) && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type) && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              (instanceB.type === 251) ? (instanceB as any).changePosition() : (instanceA as any).changePosition();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}