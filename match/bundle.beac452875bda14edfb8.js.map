{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","checkPlaying","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","rotateView","angle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","sendAdEvent","EGAAdAction","Show","EGAAdType","Interstitial","Promise","resolve","RewardedVideo","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","getTexture","getTexture2","savedType","kinematic","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","cos","sin","playRandom","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","sendEvent","Date","getTime","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","log","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","startTime","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","time","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStartTime","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","sendStartLevelEvent","maximum","addActiveBlock","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","delta","MenuState","pauseTime","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","playArgue","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","getLevelTime","idealTime","sendFinishLevelEvent","EGAProgressionStatus","Complete","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","customs","sendProgressionEvent","Start","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","bonusBalls","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","skullsArr","includes","createGoalBlock","createBottomExit","addBeginSkulls","circle","setPermanentSkull","onGameOver","obstacle","Static","Random","Fail","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdError","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","status","addProgressionEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","RewardReceived","category","label","addDesignEvent","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.beac452875bda14edfb8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing || !checkPlaying) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.angle);\r\n                } else {\r\n                  sprite.rotation = body.angle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          //new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { EGAAdAction, EGAAdType, sendAdEvent } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"28b00d27d31d5bb1a89f2f95461df103\",\r\n      secretKey: \"b527d253099947040f78d2b1e70f06725391e3a1\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n    return new Promise<void>((resolve)=> {\r\n      const r = Math.random() < 0.5;\r\n      window.setTimeout(()=> {\r\n        resolve();\r\n      }, r ? 1000 : 0);\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    sendAdEvent(\r\n      EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return new Promise<boolean>((resolve)=> {\r\n      window.setTimeout(()=> {\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")!) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p: string[] = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setPermanentSkull() {\r\n        this.permanentSkull = true;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            sounds.playRandom(\"ball pop \", 3);\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            sounds.play(\"ball grow\");\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../../..\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private async onPressed() {\r\n        sendEvent(\"Game\", \"Powerup\", \"Click\");\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            const start = new Date().getTime();\r\n            gameSettings.paused = true;\r\n            let success = await showADS(AdType.RewardedVideo);\r\n            success = true;\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id, new Date().getTime() - start);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    private startTime: number;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        this.startTime = new Date().getTime();\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n        this.emit(\"hide\", new Date().getTime() - this.startTime);\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        if (!won) timeBonus = 0;\r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate, onComplete: ()=> {\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onUpdate});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    private okBut: Button;\r\n    private xBut: Button;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        this.okBut = okBut;\r\n        this.xBut = xBut;\r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        this.okBut.disabled = false;\r\n        this.xBut.disabled = false;\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.okBut.disabled = true;\r\n        this.xBut.disabled = true;\r\n        this.visible = false;\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { AdType, gameplayStart, setStorageData, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number,\r\n    bonusBalls: number[]\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Game\", \"Menu\", \"Click\");\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.tutorial.on(\"hide\", (d)=> {\r\n            this.levelStartTime += d;\r\n        });\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n            this.sendStartLevelEvent({iaps:iaps.toString()});\r\n        } else {\r\n            this.sendStartLevelEvent();\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        \r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        const delta = new Date().getTime();\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show(async(exit: boolean)=> {\r\n            if (exit) {\r\n                await showADS(AdType.Interstitial);\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                sendEvent(\"Game\", \"Pause\", \"Exit\");\r\n                stateManager.start(MenuState);\r\n            } else {\r\n                sendEvent(\"Game\", \"Pause\", \"Cancel\");\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                const pauseTime = new Date().getTime() - delta;\r\n                this.levelStartTime += pauseTime;\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        const r = Math.random() < 0.5;\r\n        if (amount === 3) {\r\n            sounds.play(\"emoji yeah\");\r\n        } else if (amount === 4) {\r\n            if (r) {\r\n                sounds.play(\"emoji wah\");\r\n            } else {\r\n                sounds.play(\"emoji oh\");\r\n            }\r\n        }\r\n        if (amount >= 5) {\r\n            if (r) {\r\n                sounds.playRandom(\"emoji wow \", 2);\r\n            } else {\r\n                sounds.play(\"emoji ahh\");\r\n            }\r\n            \r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        sendEvent(\"Game\", \"Bonus\", \"Activate\", bonus);\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.playArgue(2);\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.position.y > 450) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = this.getLevelTime();\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n            this.sendFinishLevelEvent(EGAProgressionStatus.Complete, this.score + timeBonus, {score: this.score, time, timeBonus});\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private getLevelTime() {\r\n        return  new Date().getTime() - this.levelStartTime;\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        showADS(AdType.Interstitial).then(()=> {\r\n            this.createMoveWalls();\r\n            this.generateNewBlocks().then(()=> {\r\n                const iaps = this.generateIAPS();\r\n                this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                    if (this.currentLevelData.iaps) {\r\n                        this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                        this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                        this.powerup1.visible = true;\r\n                        this.powerup2.visible = true;\r\n                        this.sendStartLevelEvent({iaps:iaps.toString()});\r\n                    } else {\r\n                        this.sendStartLevelEvent();\r\n                    }\r\n                    \r\n                    this.generateLineBlocks();\r\n                    this.addActiveBlock();\r\n                    this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                    this.nextTimer.unFreeze();\r\n                    this.levelStartTime = new Date().getTime();\r\n                });\r\n            });\r\n            gameSettings.paused = false;\r\n        });\r\n        this.isTransition = false;\r\n    }\r\n    private sendStartLevelEvent(customs?:{[id: string]: any}) {\r\n        console.log(\"send start\",\"level\"+this.currentLevelData.key,customs);\r\n        sendProgressionEvent(EGAProgressionStatus.Start,\"level\"+this.currentLevelData.key, 0, customs);\r\n    }\r\n    private sendFinishLevelEvent(s: EGAProgressionStatus.Complete | EGAProgressionStatus.Fail ,score: number, customs?:{[id: string]: any}) {\r\n        console.log(\"send finish\",\"level\"+this.currentLevelData.key,score);\r\n        sendProgressionEvent(s,\"level\"+this.currentLevelData.key, score, customs);\r\n    }\r\n    private async startPowerup(id: EIAPBonus, time?: number) {\r\n        sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n        if (time) {\r\n            this.levelStartTime += time;\r\n        }\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.currentLevelData.bonusBalls.length > 0 && Math.random() < 0.08) {\r\n            if (this.currentLevelData.bonusBalls.length === 2) {\r\n                return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n            } else if (this.currentLevelData.bonusBalls.length === 1) {\r\n                if (this.currentLevelData.bonusBalls[0] === 1) {\r\n                    return CircleBlock.ANY_TYPE;\r\n                } else {\r\n                    return CircleBlock.RAINBOW_TYPE;\r\n                }\r\n            }\r\n            \r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        const skullsArr: CircleBlock[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        this.playArgue();\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            if (skullsIds.includes(i)) {\r\n                skullsArr.push(f);\r\n            }\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n        if (skullsArr.length > 0) {\r\n            await this.delay(0.5);\r\n            await this.addBeginSkulls(skullsArr);\r\n        }\r\n    }\r\n    private playArgue(amount: number = 3) {\r\n        sounds.play(\"emoji argue 0\");\r\n        if (amount > 1) {\r\n            this.delay(0.9).then(()=> {\r\n                sounds.play(\"emoji argue 1\");\r\n                if (amount > 2) {\r\n                    this.delay(0.9).then(()=> {\r\n                        sounds.play(\"emoji argue 2\");\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n    private async addBeginSkulls(skulls: CircleBlock[]) {\r\n        let i = 0;\r\n        for (let circle of skulls) {\r\n            if (circle) {\r\n                gsap.to(circle.scale, {x: 5, y: 5, delay: i*0.6, duration: 0.1, ease: Expo.easeOut, onComplete: ()=> {\r\n                    circle.setPermanentSkull();\r\n                }});\r\n                gsap.to(circle.scale, {x: 1, y: 1, delay: i, duration: 0.5, ease: Expo.easeIn});\r\n                i += 0.05;\r\n            }\r\n        }\r\n        await this.delay(0.7);\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.sendFinishLevelEvent(EGAProgressionStatus.Fail, 0, {score: this.score, time: this.getLevelTime(), timeBonus: 0});\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        !instanceA.isGoal() && !instanceB.isGoal() && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE && !instanceB.isGoal()) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE && !instanceA.isGoal());\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && !notRainbow.isGoal() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        sounds.play(\"startup explosion\");\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Mute\", \"click\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Unmute\", \"click\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Menu\", \"View\", \"Start\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Menu\", \"View\", \"Close\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Prev\", \"Click\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Next\", \"Click\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        sendEvent(\"Menu\", \"Play\", \"Click\", this.activeLevelId + 1);\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Next\", \"Click\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Prev\", \"Click\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Comics\", \"View\", \"Start\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Comics\", \"View\", \"Close\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.5 });\r\n      const sVol = 1;\r\n      sounds.add(\"ball hit 0\", { volume: sVol });\r\n      sounds.add(\"ball hit 1\", { volume: sVol });\r\n      sounds.add(\"ball hit 2\", { volume: sVol });\r\n      sounds.add(\"ball grow\", { volume: sVol });\r\n      sounds.add(\"ball pop 0\", { volume: sVol });\r\n      sounds.add(\"ball pop 1\", { volume: sVol });\r\n      sounds.add(\"ball pop 2\", { volume: sVol });\r\n      sounds.add(\"click\", { volume: sVol });\r\n      sounds.add(\"emoji ahh\", { volume: sVol });\r\n      sounds.add(\"emoji argue 0\", { volume: sVol });\r\n      sounds.add(\"emoji argue 1\", { volume: sVol });\r\n      sounds.add(\"emoji argue 2\", { volume: sVol });\r\n      sounds.add(\"emoji oh\", { volume: sVol });\r\n      sounds.add(\"emoji wah\", { volume: sVol });\r\n      sounds.add(\"emoji wow 0\", { volume: sVol });\r\n      sounds.add(\"emoji wow 1\", { volume: sVol });\r\n      sounds.add(\"emoji yeah\", { volume: sVol });\r\n      sounds.add(\"startup explosion\", { volume: sVol });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"28b00d27d31d5bb1a89f2f95461df103\", \"b527d253099947040f78d2b1e70f06725391e3a1\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    console.log(\"GA\", gameKey, sKey);\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"App\", \"Network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"App\", \"Game\", \"Start\");\r\n    new Game();\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, level: string, score?:number, customs?:{[id: string]: any}) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"world\", \"stage\", level, score, customs);\r\n    /*gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });*/\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    /*gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });*/\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}