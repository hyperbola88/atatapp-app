{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/YASocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Block.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","material","undefined","BaseGame","options","autoDensity","resolution","min","floor","devicePixelRatio","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","shape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","Block","clean","busy","increase","stepsAmount","steps","goalType","endType","fromBoom","max","sameColorNeighbors","size","k","CircleBlock","radius","g","Graphics","colors","beginFill","drawCircle","createCircleBody","Circle","createBody","DYNAMIC","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","drawRect","Box","STATIC","DEG_TO_RAD","Explosion","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","drawRoundedRect","sensor","KINEMATIC","Cubic","easeIn","GameViewState","powerup1","startPowerup","powerup2","preview","previewBlocks","gameplayStart","nextType","nextLines","isActivePowerup","level","generateLineBlocks","tick","moving","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","addActiveBlock","onClick","onTapStart","Ticker","shared","update","copyFrom","pos","moveBox","addLineBlocks","drawMouse","velocity","moveBalls","id","startVerticalRocket","startHorizontalRocket","random","startRocket","rocket","nextBlock","activeBlock","kinematic","generateActiveBlock","mousePressed","toLocal","mouse","global","atan2","clear","lineStyle","moveTo","xx","cos","yy","sin","abs","lineTo","lp","a","delayedCall","lines","removeChildren","f","staticBox","wall","leftWall","rightWall","wall2","generateNewBlocks","MenuState","playBtn","onPlayClicked","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","Game","evt","bodyA","bodyB","instanceA","instanceB","correctType","difColorNeighbors","levelComplete","inst","animateAndDestroy","block","boom","big","small","middle","limit","activeState","bigBall","createExplosion","startLoading","loader","onProgress","onError","error","url","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","console","log","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.423c266bdd415832892d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([213,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: Math.min(Math.floor(window.devicePixelRatio), 3),\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.width = 1080;\r\n        back.height = 1920;\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > 1080 / 1920 ? width / 1080 : height / 1920;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / 1920;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import {\r\n  sendAdEvent,\r\n  EGAAdAction,\r\n  EGAAdType,\r\n  EGAAdError,\r\n  sendError,\r\n  live,\r\n} from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\nlet yasdk: any;\r\nlet yaPlayer: any;\r\nlet leaders: any;\r\nexport class YASocial implements ISocial {\r\n  private player: IPlayerEntry;\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n  public shouldPlayFirstAds(): boolean {\r\n    return false;\r\n  }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return true;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    if (!live) return; \r\n    return new Promise<void>((resolve) => {\r\n      yasdk.feedback.canReview().then(({ value, reason }) => {\r\n        if (value) {\r\n          yasdk.feedback.requestReview().then(({ feedbackSent }) => {\r\n            resolve();\r\n          });\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    if (!live) return []; \r\n    const r = [];\r\n    leaders = await yasdk.getLeaderboards(\"main\");\r\n    console.log(leaders);\r\n    const res = await leaders.getLeaderboardEntries(\"main\", {\r\n      quantityTop: 20,\r\n      includeUser: false,\r\n      quantityAround: 1,\r\n    });\r\n    console.log(res);\r\n    if (res && res.entries.length > 0) {\r\n      for (let e of res.entries) {\r\n        const entry = {\r\n          rank: 1,\r\n          score: e.score,\r\n          player: {\r\n            name: e.player.publicName,\r\n            photo: e.player.getAvatarSrc(\"large\"),\r\n            player_id: e.player.uniqueID,\r\n          },\r\n        };\r\n        r.push(entry);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    if (!live) return; \r\n    if (!this.player && yaPlayer) {\r\n      this.player = {\r\n        name: yaPlayer.getName(),\r\n        player_id: yaPlayer.getUniqueID(),\r\n        photo: yaPlayer.getPhoto(\"large\"),\r\n      };\r\n    }\r\n    return this.player;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    if (!live) return; \r\n    await yaPlayer.setStats({ score: value });\r\n    leaders.setLeaderboardScore(\"main\", value);\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    if (!live) return 0; \r\n    const data = await yaPlayer.getStats([\"score\"]);\r\n    let score = 0;\r\n    if (!data || (data && !data.score)) {\r\n      score = 0;\r\n      await this.setScore(0);\r\n    } else {\r\n      score = data.score;\r\n    }\r\n    return score;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n      if (!live) return; \r\n    await yaPlayer.setData({ [key]: value });\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n       if (!live) return value; \r\n    const current = await yaPlayer.getData([key]);\r\n    if (!current) {\r\n      await yaPlayer.setData({ [key]: value });\r\n      return value;\r\n    } else {\r\n      return current[key] || value;\r\n    }\r\n  }\r\n  public async init(): Promise<IInited> {\r\n      let success = false;\r\n      yasdk = await YaGames.init();\r\n      try {\r\n        yaPlayer = await yasdk.getPlayer();\r\n        leaders = await yasdk.getLeaderboards(\"main\");\r\n        success = true;\r\n      } catch(e) {\r\n        \r\n      }\r\n    const language = yasdk.environment.i18n.lang === \"ru\" ? \"ru\" : \"en\";\r\n    return {\r\n      success,\r\n      language,\r\n      gameKey: \"fe62158b9e723b4ef28865b07e79b439\",\r\n      secretKey: \"65d9709dc8029d19ab3694b15307320430627f17\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await new Promise<void>((resolve) => {\r\n      yasdk.adv.showFullscreenAdv({\r\n        callbacks: {\r\n          onClose: function (wasShown) {\r\n            sendAdEvent(\r\n              wasShown ? EGAAdAction.Show : EGAAdAction.FailedShow,\r\n              EGAAdType.Interstitial\r\n            );\r\n            resolve();\r\n          },\r\n          onError: function (e) {\r\n            sendAdEvent(\r\n              EGAAdAction.FailedShow,\r\n              EGAAdType.Interstitial,\r\n              EGAAdError.Unknown\r\n            );\r\n            sendError(e);\r\n            resolve();\r\n          },\r\n        },\r\n      });\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    let r = false;\r\n    try {\r\n      r = await new Promise<boolean>((resolve) => {\r\n        yasdk.adv.showRewardedVideo({\r\n          callbacks: {\r\n            onRewarded: () => {\r\n              sendAdEvent(EGAAdAction.RewardReceived, EGAAdType.RewardedVideo);\r\n              resolve(true);\r\n            },\r\n            onError: (e) => {\r\n              sendAdEvent(\r\n                EGAAdAction.FailedShow,\r\n                EGAAdType.RewardedVideo,\r\n                EGAAdError.Unknown\r\n              );\r\n              sendError(e);\r\n              resolve(false);\r\n            },\r\n          },\r\n        });\r\n      });\r\n    } catch (e) {\r\n      sendAdEvent(\r\n        EGAAdAction.FailedShow,\r\n        EGAAdType.RewardedVideo,\r\n        EGAAdError.Unknown\r\n      );\r\n      sendError(e);\r\n      r = false;\r\n    }\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nimport { VKSocial } from \"./social/VKSocial\";\r\nimport { YASocial } from \"./social/YASocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"2\") {\r\n            instance = new VKSocial();\r\n        } else if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"3\") {\r\n            instance = new YASocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    protected shape : p2.Shape;\r\n    protected view: Sprite;\r\n    \r\n    constructor(view: Sprite) {\r\n        super();\r\n        this.view = view;\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(shape: Shape, type: 1|2|4, position: [number, number] = [0,0]) {\r\n        this.view.alpha = 1;\r\n        this.shape = shape;\r\n        this.body = new Body({type, position, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap from \"gsap\";\r\nexport class Block extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public sameColorNeighbors: Map<Block, boolean> = new Map<Block, boolean>();\r\n    public difColorNeighbors: Map<Block, boolean> = new Map<Block, boolean>();\r\n    public type: number;\r\n    protected static stepsAmount = 3;\r\n    protected static scaleFactor = 1;\r\n    public steps = 1;\r\n    public kinematic = false;\r\n    protected busy = false;\r\n    constructor(view: Sprite) {\r\n        super(view);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom() {\r\n        this.increase(Block.stepsAmount-this.steps, true);\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type !== Block.goalType && this.type !== Block.endType;\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        if (this.busy || !this.body) return;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= Block.stepsAmount) {\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    k.increase(Block.stepsAmount-k.steps, fromBoom);\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        }\r\n    }\r\n}","import { Graphics, Sprite } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport { Block } from \"./Block\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle } from \"p2\";\r\n\r\nexport class CircleBlock extends Block {\r\n    private static colors = [0xCCCC00,0xFF0000,0xFF00FF,0xAAFF00,0x00FFFF,0xFFFF00,0x252994,0xebab34];\r\n    private static radius = 35;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        const radius = (type != Block.goalType) ? CircleBlock.radius : CircleBlock.radius*1.5;\r\n        const g = new Graphics();\r\n        const c = (type < Block.goalType) ? CircleBlock.colors[type] : 0x000000;\r\n        g.beginFill(c, 1);\r\n        g.drawCircle(0, 0, radius);\r\n        const view = new Sprite();\r\n        view.addChild(g);\r\n        super(view);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createCircleBody(radius);\r\n        }\r\n        this.type = type;\r\n    }\r\n    public createCircleBody(radius: number = CircleBlock.radius) {\r\n        const shape = new Circle({radius: radius / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        this.createBody(shape,Body.DYNAMIC,[this.position.x / METER_SIZE, this.position.y / METER_SIZE]);\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        super.increase(s, fromBoom);\r\n        if (this.body && this.steps < Block.stepsAmount) {\r\n            const i = Block.scaleFactor * this.steps;\r\n            //const r = i * CircleBlock.radius;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = CircleBlock.radius * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n    }\r\n}","import { Graphics } from \"@pixi/graphics\";\r\nimport { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box } from \"p2\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { Block } from \"./Block\";\r\n\r\nexport class StaticBlock extends Block {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        const g = new Graphics();\r\n        g.beginFill(0, 1);\r\n        g.drawRect(-width*0.5, -height*0.5, width, height);\r\n        const view = new Sprite();\r\n        view.addChild(g);\r\n        super(view);\r\n\r\n        const shape = new Box({width: width/METER_SIZE, height:height/METER_SIZE});\r\n        this.createBody(shape,Body.STATIC,[x / METER_SIZE, y / METER_SIZE]);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n        this.type = 0;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box } from \"p2\";\r\nimport { Graphics, Sprite } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(new Sprite());\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        const size = 100;\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawRoundedRect(-size*0.5, -size*0.5, size, size, 10);\r\n        this.view.addChild(g);\r\n        this.position.set(startX, startY);\r\n\r\n        const shape = new Box({width: size / METER_SIZE, height: size / METER_SIZE});\r\n        shape.sensor = true;\r\n        this.createBody(shape,Body.KINEMATIC,[this.position.x / METER_SIZE, this.position.y / METER_SIZE]);\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import { Container, Graphics, ObservablePoint, Point, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Block } from \"./game/Block\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\n\r\nexport class GameViewState extends BaseState {\r\n    private moveBox: Block;\r\n    private staticBox: Block;\r\n    private leftWall: Block;\r\n    private rightWall: Block;\r\n    private activeBlock: CircleBlock;\r\n    private level: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Container;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n\r\n    public create(): void {\r\n        const powerup1 = new Button(\"bonus1\",\"bonus1\");\r\n        powerup1.position.set(-300, 900);\r\n        this.addChild(powerup1);\r\n        powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(1);\r\n        });\r\n\r\n        const powerup2 = new Button(\"bonus2\",\"bonus2\");\r\n        powerup2.position.set(-100, 900);\r\n        this.addChild(powerup2);\r\n        powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(2);\r\n        });\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Container();\r\n        this.addChild(this.previewBlocks);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.level = 4;\r\n        this.generateLineBlocks(this.level - 3);\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addActiveBlock();\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      public levelComplete() {\r\n          gameSettings.paused = true;\r\n      }\r\n    public moveBalls() {\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.moveBox.body.position = [m.x, m.y];\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks(this.level - 3);\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > 660 / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : 660/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n        });\r\n        if (this.moving) return;\r\n        this.tick+=1;\r\n        \r\n        if (this.tick%((this.level-3)*700) === 0) {\r\n            if (this.tick >= (this.level-3) * 2100) {\r\n                this.tick = 0;\r\n                this.level+=1;\r\n                if (this.level > 7) {\r\n                    this.level = 7;\r\n                }\r\n            }\r\n            this.moveBalls();\r\n        }/* else if (i <= 10) {\r\n            this.tick = 0;\r\n            this.level+=1;\r\n            if (this.level > 7) {\r\n                this.level = 7;\r\n            }\r\n            this.moveBalls();\r\n        }*/\r\n    }\r\n    private async startPowerup(id: number) {\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 1:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 2:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, 650, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const y = Math.random() * 800 - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock() {\r\n        if (this.nextBlock) {\r\n            this.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = Math.floor(Math.random() * (this.nextLines.length + 3)) + 1;\r\n        this.nextBlock = new CircleBlock(-140, 650, this.nextType, false);\r\n        this.addChild(this.nextBlock);\r\n    }\r\n    private addActiveBlock() {\r\n        if (!this.nextType) {\r\n            this.nextType = Math.floor(Math.random() * (this.nextLines.length + 3)) + 1;\r\n        }\r\n        this.activeBlock = new CircleBlock(0, 650, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock();\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = 650;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.mouse.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (gameSettings.paused || !this.activeBlock || this.isActivePowerup || lp.y > 800) return;\r\n        this.mousePressed = true;\r\n        this.drawMouse();\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (gameSettings.paused || !this.activeBlock || this.isActivePowerup || lp.y > 800) return;\r\n        this.activeBlock.createCircleBody();\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-650) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n        //console.log(a.body);\r\n    }\r\n    private generateLineBlocks(lines: number) {\r\n        this.previewBlocks.removeChildren();\r\n        let yy = -620 - lines*70;\r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = -300;\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.level) + 1;\r\n                const f = new CircleBlock(xx,yy,this.nextLines[j][i],false);\r\n                this.addChild(f);\r\n                xx += 74;\r\n            }\r\n            yy+=70;\r\n        }\r\n    }\r\n    private addLineBlocks() {\r\n        this.previewBlocks.removeChildren();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async generateNewBlocks() {\r\n        const delay = async(t: number)=> {\r\n            return new Promise<void>((resolve)=> {\r\n                gsap.delayedCall(t, ()=> {\r\n                    resolve();\r\n                })\r\n            });\r\n        }\r\n        for (let i = 0; i < 70; i++) {\r\n            const type = Math.floor(Math.random() * this.level) + 1;\r\n            const f = new CircleBlock(Math.random()*600-300,-100,type);\r\n            this.addChild(f);\r\n            await delay(0.001);\r\n        }\r\n        await delay(1);\r\n        const f = new CircleBlock(0,200,CircleBlock.goalType);\r\n        this.addChild(f);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = Block.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.addChild(wall);\r\n        this.leftWall = new StaticBlock(-400, 50, 100, 1600, 0);\r\n        this.addChild(this.leftWall);\r\n        this.rightWall = new StaticBlock(400, 50, 100, 1600, 0);\r\n        this.addChild(this.rightWall);\r\n\r\n        const wall2 = new StaticBlock(0, 800, 700, 100, 0);\r\n        this.addChild(wall2);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    public close(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { GameViewState } from \"./GameViewState\";\r\n\r\nexport class MenuState extends BaseState {\r\n    public create(): void {\r\n        const playBtn = new Button(\"playButton0\", \"playButton1\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Block } from \"./states/game/Block\";\r\nimport { Body } from \"p2\";\r\n\r\nexport let increaseBlocks: {block:Block,steps:number}[] = [];\r\nexport default class Game extends BaseGame {\r\n  \r\n  constructor() {\r\n    super(756, 1344);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt)=> {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as Block;\r\n      const instanceB = (bodyB as any).userData as Block;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.delete(instanceB);\r\n          instanceB.sameColorNeighbors.delete(instanceA);\r\n      } else if (instanceA.type !== instanceB.type && instanceA.correctType() && instanceB.correctType()) {\r\n        instanceA.difColorNeighbors.delete(instanceB);\r\n        instanceB.difColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as Block;\r\n      const instanceB = (bodyB as any).userData as Block;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n      } else if (instanceA.type !== instanceB.type && instanceA.correctType() && instanceB.correctType()) {\r\n        instanceA.difColorNeighbors.set(instanceB, true);\r\n        instanceB.difColorNeighbors.set(instanceA, true);\r\n      }\r\n      if ((instanceA.type === Block.goalType && instanceB.type === Block.endType) || (instanceB.type === Block.goalType && instanceA.type === Block.endType)) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      let body = undefined;\r\n      let inst = undefined;\r\n      if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n      } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n      }\r\n      if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instanceA.type === instanceB.type) {\r\n              const steps = inst.steps;\r\n              inst.animateAndDestroy();\r\n              increaseBlocks.push({block: (inst === instanceA) ? instanceB: instanceA, steps});\r\n          }\r\n      } else {\r\n          if (instanceA.type === instanceB.type && instanceA.type !== 0 && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({block: instanceB, steps});\r\n          }\r\n      }\r\n      } else {\r\n        let rocket = undefined;\r\n        let block: Block = undefined;\r\n        if ((instanceA as any).rocket && instanceB.correctType && instanceB.type !== Block.goalType) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if ((instanceB as any).rocket && instanceA.correctType && instanceA.type !== Block.goalType) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const big = unusedBodies.length >= 5;\r\n    const small = unusedBodies.length === 2;\r\n    const middle = unusedBodies.length >= 3;\r\n    const limit = small ? 25 : (middle ? 50 : 100);\r\n    const state = stateManager.activeState as GameViewState;\r\n    unusedBodies.forEach((body) => {\r\n      const block = (body as any).userData as Block;\r\n      const bigBall = block.steps === 3 && !(big || middle || small);\r\n\r\n      if ((big || middle || small || bigBall) && body) {\r\n        \r\n        if (block) {\r\n          block.difColorNeighbors.forEach((k,b)=> {\r\n            const r = Math.random() * 100;\r\n            if (r < limit) {\r\n              state.createExplosion(b.position);\r\n              b.boom();\r\n            }\r\n          });\r\n        }\r\n      } \r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    /*if (gameSettings.allQuests) {\r\n          const d = new Date();\r\n          gameSettings.dateString = `${d.getFullYear()}${d.getMonth()+1}${d.getDate()}`;\r\n          const level = gameSettings.allQuests.all.find((a)=>a.date === gameSettings.dateString);\r\n          gameSettings.quest = level || undefined;\r\n        }*/\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}