{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/BonusPopup.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/RainbowBallBonus.ts","webpack:///./game/states/game/bonuses/CrazyShipBonus.ts","webpack:///./game/states/game/bonuses/AlienBonus.ts","webpack:///./game/states/game/bonuses/MagicBonus.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","material","undefined","BaseGame","options","autoDensity","resolution","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","btn","normalState","downState","normalTexture","downTexture","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","rainbowType","stepsAmount","createBody","DYNAMIC","_kinematic","filters","GlowFilter","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","fromBoom","increase","steps","v","max","sameColorNeighbors","k","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","a","NextBlocksTimer","bar","isFrozen","seconds","EBonus","BoomMeter","NineSlicePlane","initialWidth","barMask","mask","current","min","wasEnd","BonusChooser","bell","AnimatedSprite","animationSpeed","align","bonus","CrazySheep","Alien","RainbowBall","Magic","gotoAndStop","Message","blocks","clear","nextLines","lines","xx","f","addBlock","BaseBonus","Rectangle","RainbowBallBonus","posY","ball","callback","tween","bound","CrazyShipBonus","sheep","random","yy","AlienBonus","getPoint","points","alienRight","alienLeft","arr","point","playDelay","playJump","currentPoint","acid","Expo","splash","copyFrom","EIAPBonus","MagicBonus","wizard","easeOut","GameViewState","pad","topBack","menuBtn","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","lineStyle","moveTo","lineTo","nextTimer","boomMeter","bonusChooser","padRect","levelId","activeBonus","None","randomBodiesPositions","powerups","isTransition","nextType","isActivePowerup","generateLineBlocks","tick","maxY","moving","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","maximum","currentLevelData","addActiveBlock","onClick","onTapStart","Ticker","shared","update","getRandomBonus","setActiveBonus","meterBonus","createRainbowBallBonus","createCrazySheepBonus","createAlienBonus","createMagicBonus","args","doActionMeterBonus","clearMeterBonus","getRandomType","block","boom","bonuses","floor","missle","atan2","time","createExplosion","explodePoints","nextBlock","activeBlock","clearActiveBlocks","stopBonuses","bottomOpenWall","animateAndDestroy","moveBox","staticBox","mousePressed","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","velocity","BottomPoint","goalType","contains","moveToNextLevel","createMoveWalls","freeze","generateNewBlocks","unFreeze","startCountDeath","setProgress","moveBalls","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","cos","sin","abs","lp","switchBlockes","setLines","startAmount","onGameOver","createBottomExit","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","remove","goOut","Logo","explosion","face","logo","Elastic","Bounce","playBtn","onPlayClicked","stop","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","activeState","updateBoomMeter","small","middle","fireMissle","wasRainbow","hitTest","startLoading","loader","onProgress","onError","url","resources","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","log","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.c42de571dfc8cb6ad878.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([199,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [],\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    private txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static rainbowType = 250;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        if (type === CircleBlock.rainbowType) {\r\n            this.stepsAmount = 10;\r\n        }\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type < 20;\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        if (this.busy || !this.body) return;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.bar = new Sprite(Texture.WHITE);\r\n        this.bar.width = 700;\r\n        this.bar.height = 50;\r\n        this.addChild(this.bar);\r\n        this.bar.anchor.set(0.5,0.5);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.bar.width = 700*p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: NineSlicePlane;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 420;\r\n    private barMask: Sprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),30,25,30,25);\r\n        back.width = this.initialWidth;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 30,25,30,25);\r\n        this.bar.width = this.initialWidth;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public update(amount: number): boolean {\r\n        if (amount === 0) {\r\n            this.current = 0;\r\n        } else if (amount < 3) {\r\n            amount = 0;\r\n        } else {\r\n            this.current += amount;\r\n            this.current = Math.min(this.current, this.max);\r\n        }\r\n        const wasEnd = this.current >= this.max;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * (this.current / this.max), duration: 0.2});\r\n        if (wasEnd) {\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Text, Texture } from \"pixi.js\";\r\nexport enum EBonus {\r\n    None = 0,\r\n    CrazySheep,\r\n    Alien,\r\n    RainbowBall,\r\n    Magic,\r\n    All\r\n}\r\nexport class BonusChooser extends Container {\r\n    public bonus: EBonus;\r\n    private bell: AnimatedSprite;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n\r\n        this.txt = new Text(\"\",{fontSize: 25, fill: 0x000000, align: \"right\"});\r\n        this.txt.anchor.set(1, 0.5);\r\n        this.txt.position.set(-55, 7);\r\n        this.addChild(this.txt);\r\n    }\r\n    public async show(bonus: EBonus) {\r\n        this.bonus = bonus;\r\n        this.visible = true;\r\n        let n = \"\";\r\n        switch(bonus) {\r\n            case EBonus.CrazySheep:\r\n                n = \"Crazy Sheep\";\r\n                break;\r\n            case EBonus.Alien:\r\n                n = \"Unexpected Guest\";\r\n                break;\r\n            case EBonus.RainbowBall:\r\n                n = \"Rainbow Ball\";\r\n                break;\r\n            case EBonus.Magic:\r\n                n = \"Some Magic is here!\";\r\n                break;\r\n        }\r\n        this.bell.play();\r\n        this.txt.text = n;\r\n        this.delay(2).then(()=> {\r\n            this.txt.text = \"\";\r\n            this.bell.gotoAndStop(0);\r\n        });\r\n        await this.delay(2);\r\n        //this.hide();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, Rectangle } from \"pixi.js\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    public abstract get activeBound(): Rectangle[];    \r\n    public abstract start(callback: (args?: any)=>void): void;    \r\n    public abstract clean(): void;\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\n\r\nexport class RainbowBallBonus extends BaseBonus {\r\n    private ball: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor(posY: number) {\r\n        super();\r\n        this.ball = Sprite.from(Texture.from(\"250.png\"));\r\n        this.ball.anchor.set(0.5, 0.5);\r\n        this.ball.scale.set(1, 1);\r\n        this.ball.position.set(-500, posY);\r\n        this.addChild(this.ball);\r\n    }\r\n    public start(callback: ()=>void): void {\r\n        this.tween = gsap.to(this.ball, {x: 500, duration: 1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.ball.angle += 5;\r\n        }, onComplete: ()=> {\r\n            callback();\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }\r\n    public get activeBound() {\r\n        if (this.tween) {\r\n            this.bound.x = (this.ball.x - this.ball.width * 0.5) / METER_SIZE;\r\n            this.bound.y = (this.ball.y - this.ball.height * 0.5) / METER_SIZE;\r\n            this.bound.width = this.ball.width / METER_SIZE;\r\n            this.bound.height = this.ball.height / METER_SIZE;\r\n            return [this.bound];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\n\r\nexport class CrazyShipBonus extends BaseBonus {\r\n    private sheep: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.sheep = Sprite.from(Texture.from(\"sheep.png\"));\r\n        this.sheep.anchor.set(0.5, 0.5);\r\n        this.sheep.scale.set(1, 1);\r\n        this.sheep.position.set(Math.random() * 700 - 350, -800);\r\n        this.addChild(this.sheep);\r\n    }\r\n    public get activeBound() {\r\n        if (this.tween) {\r\n            this.bound.x = (this.sheep.x - this.sheep.width * 0.5) / METER_SIZE;\r\n            this.bound.y = (this.sheep.y - this.sheep.height * 0.5) / METER_SIZE;\r\n            this.bound.width = this.sheep.width / METER_SIZE;\r\n            this.bound.height = this.sheep.height / METER_SIZE;\r\n            return [this.bound];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    public start(callback: () => void): void {\r\n        const yy = Math.random() * 800 - 400;\r\n        this.tween = gsap.to(this.sheep, {y: yy, duration: 1.5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.tween = gsap.to(this.sheep, {x: 600, duration: 1.6, ease: Linear.easeNone, onComplete: ()=> {\r\n                callback();\r\n            }});\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }    \r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\n\r\nexport class AlienBonus extends BaseBonus {\r\n    private alienRight: Sprite;\r\n    private alienLeft: Sprite;\r\n    //private acid: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    private step: number;\r\n    //private currentPoint: [number, number];\r\n    private callback: () => void;\r\n    private getPoint: () => [number, number];\r\n    private points: [number, number][];\r\n    constructor(getPoint: () => [number, number]) {\r\n        super();\r\n        this.getPoint = getPoint;\r\n        this.step = 0;\r\n        this.points = [];\r\n\r\n        this.alienRight = Sprite.from(Texture.from(\"alien.png\"));\r\n        this.alienRight.anchor.set(1, 0.5);\r\n        this.alienRight.position.set(600, 0);\r\n        this.addChild(this.alienRight);\r\n\r\n        this.alienLeft = Sprite.from(Texture.from(\"alien.png\"));\r\n        this.alienLeft.anchor.set(1, 0.5);\r\n        this.alienLeft.scale.set(-1, 1);\r\n        this.alienLeft.position.set(-600, 0);\r\n        this.addChild(this.alienLeft);\r\n    }\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            this.playDelay();\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public start(callback: () => void): void {\r\n        this.callback = callback;\r\n        gsap.to(this.alienLeft, {x: -350, duration: 0.6, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.playJump();\r\n        }});\r\n        gsap.to(this.alienRight, {x: 350, duration: 0.5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.playJump();\r\n        }});\r\n        \r\n    }\r\n    public goOut(): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.to(this.alienLeft, {x: -600, duration: 0.2, ease: Linear.easeNone, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n            gsap.to(this.alienRight, {x: 600, duration: 0.2, ease: Linear.easeNone});\r\n        });\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        this.callback = undefined;\r\n        this.getPoint = undefined;\r\n    }\r\n    private playDelay() {\r\n        gsap.delayedCall(0.1, ()=> this.playJump());\r\n    }\r\n    private playJump() {\r\n        if (this.step < 10 && this.getPoint) {\r\n            const currentPoint = this.getPoint();\r\n            if (!currentPoint) {\r\n                this.callback && this.callback();\r\n                return;\r\n            }\r\n            const acid = Sprite.from(Texture.from(\"alien_acid.png\"));\r\n            acid.anchor.set(0.5, 0.5);\r\n            this.addChild(acid);\r\n            const m = this.step%2 === 0 ? 1 : -1;\r\n            acid.scale.set(0.7 * m, 0.7);\r\n            acid.position.set(m * 300, -40);\r\n            acid.visible = true;\r\n            this.step++;\r\n            this.tween = gsap.to(acid, {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.3, ease: Expo.easeIn, onComplete: ()=> {\r\n                this.points.push(currentPoint);\r\n                acid.visible = false;\r\n                const splash = Sprite.from(Texture.from(\"splash.png\"));\r\n                splash.anchor.set(0.5, 0.5);\r\n                splash.position.copyFrom(acid.position);\r\n                this.addChild(splash);\r\n                gsap.to(splash, {alpha: 0, duration: 1, ease: Linear.easeNone});\r\n                gsap.to(splash.scale, {y: 1.5, duration: 1, ease: Linear.easeNone, onComplete: ()=> {\r\n                    this.removeChild(splash);\r\n                }});\r\n            }});\r\n        } else {\r\n            this.callback && this.callback();\r\n        }\r\n        \r\n    }\r\n    \r\n}","import gsap, { Expo, Linear } from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\n\r\nexport class MagicBonus extends BaseBonus {\r\n    private wizard: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.wizard = Sprite.from(Texture.from(\"wizard.png\"));\r\n        this.wizard.anchor.set(0.5, 0.5);\r\n        this.wizard.scale.set(1, 1);\r\n        this.wizard.position.set(0, 1000);\r\n        this.addChild(this.wizard);\r\n    }\r\n    public start(callback: ()=>void): void {\r\n        this.tween = gsap.to(this.wizard, {y: 200, duration: 1.5, ease: Expo.easeOut, onComplete: ()=> {\r\n            callback();\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }\r\n    public get activeBound() {\r\n        return undefined;\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.to(this.wizard, {y: 1000, duration: 0.2, ease: Linear.easeNone, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { BonusChooser, EBonus } from \"./game/BonusPopup\";\r\nimport { Message } from \"./game/Message\";\r\nimport { RainbowBallBonus } from \"./game/bonuses/RainbowBallBonus\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { CrazyShipBonus } from \"./game/bonuses/CrazyShipBonus\";\r\nimport { AlienBonus } from \"./game/bonuses/AlienBonus\";\r\nimport { MagicBonus } from \"./game/bonuses/MagicBonus\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp,\r\n    RocketLeft,\r\n    All\r\n}\r\nexport interface ILevelData {\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: number[]\r\n}\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private bonusChooser: BonusChooser;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n\r\n    public create(): void {\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(top);\r\n\r\n        const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);\r\n\r\n        const menuBtn = new Sprite(Texture.from(\"pause_button.png\"));\r\n        menuBtn.anchor.set(0.5);\r\n        menuBtn.position.set(-250, topBack.height * 0.5);\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-390, 900);\r\n        this.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(-265, 900);\r\n        this.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Message();\r\n        this.addChild(this.previewBlocks);\r\n\r\n        const line = new Graphics();\r\n        line.lineStyle(4, 0x000000, 0.3);\r\n        line.moveTo(-400, 500);\r\n        line.lineTo(400, 500);\r\n        this.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.rotation = Math.PI / 2;\r\n        this.nextTimer.position.set(-400, 0);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(-170, -667);\r\n\r\n        this.bonusChooser = new BonusChooser();\r\n        this.bonusChooser.position.set(270,-648);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addChild(this.nextTimer);\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addChild(this.boomMeter);\r\n        this.addActiveBlock();\r\n\r\n        this.addChild(this.bonusChooser);\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public async updateBoomMeter(amount: number) {\r\n        if (this.isTransition || this.activeBonus) return;\r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            //gameSettings.paused = true;\r\n            const bonus = this.getRandomBonus();\r\n            this.bonusChooser.show(bonus);\r\n            this.setActiveBonus(this.bonusChooser.bonus);\r\n            //gameSettings.paused = false;\r\n        }\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.RainbowBall:\r\n                this.meterBonus = this.createRainbowBallBonus();\r\n                break;\r\n            case EBonus.CrazySheep:\r\n                this.meterBonus = this.createCrazySheepBonus();\r\n                break;\r\n            case EBonus.Alien:\r\n                this.meterBonus = this.createAlienBonus();\r\n                break;\r\n            case EBonus.Magic:\r\n                this.meterBonus = this.createMagicBonus();\r\n                break;\r\n            default: return;\r\n        }\r\n        this.addChild(this.meterBonus);\r\n        this.meterBonus.start((args) => {\r\n            this.doActionMeterBonus(bonus, args);\r\n            this.clearMeterBonus(false);\r\n        });\r\n    }\r\n    private doActionMeterBonus(bonus: EBonus, args: any) {\r\n        if (bonus === EBonus.Magic) {\r\n            const type: number = this.getRandomType();\r\n            world.bodies.forEach((body)=> {\r\n                const block = (body as any).userData as CircleBlock; \r\n                if (block && block.type === type) {\r\n                    block.boom();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //OLD BONUSES\r\n    /*private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                this.clearActiveBlocks();\r\n                this.addActiveBlock();\r\n                break;\r\n            case EBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break;\r\n            case EBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }*/\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 0.8;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.randomBodiesPositions[i];\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`rocket1.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1, y: 1, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        gsap.to(this.previewBlocks, {y: -600, duration: 1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        if (this.isTransition && !wasEnd) {\r\n            this.nextTimer.clear();\r\n            this.boomMeter.update(0);\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.moveToNextLevel();\r\n            this.createMoveWalls();\r\n            this.addChild(this.nextTimer);\r\n            this.nextTimer.freeze();\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.nextTimer.unFreeze();\r\n            });\r\n            this.addChild(this.bonusChooser);\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=1;\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(1 - p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            meterBonusBlocks.forEach((body)=> {\r\n                ((body as any).userData as CircleBlock).boom(false); \r\n            });\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            this.levelId+=1;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n    }\r\n    private async startPowerup(id: number) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        //this.nextBlock.scale.set(0.7);\r\n        this.pad.addChild(this.nextBlock);\r\n    }\r\n    private getRandomType() {\r\n        //if (this.activeBonus === EBonus.Rainbow) return CircleBlock.rainbowType;\r\n        //const rainbowChance = Math.random() < 0.15;\r\n        //if (rainbowChance) return CircleBlock.rainbowType;\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n       /* if (this.nextType === CircleBlock.rainbowType) {\r\n            this.activeBonus = true;\r\n        }*/\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.padRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks} = this.currentLevelData;\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n    }\r\n\r\n    //BONUSES\r\n    private createRainbowBallBonus() {\r\n        return new RainbowBallBonus(-400);\r\n    }\r\n    private createCrazySheepBonus() {\r\n        return new CrazyShipBonus();\r\n    }\r\n    private createMagicBonus() {\r\n        return new MagicBonus();\r\n    }\r\n    private createAlienBonus() {\r\n        return new AlienBonus(()=> {\r\n            if (this.isTransition) return undefined; \r\n            let p = this.randomBodiesPositions[Math.floor(Math.random()*this.randomBodiesPositions.length)];\r\n            if (Math.abs(p[1]) >= 20) {\r\n                p = undefined;\r\n            }\r\n            return p;\r\n        });\r\n    }\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new TextedButton(\"PLAY\", 100, 0x000000, 0xFFFFFF);\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, 0);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else {\r\n            (stateManager.activeState as GameViewState).updateBoomMeter(1);\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const small = unusedBodies.length >= 2;\r\n    const middle = unusedBodies.length >= 3;\r\n    const big = unusedBodies.length >= 5;\r\n    const amount = (big) ? 3 : (middle ? 2 : (small ? 1 : 0));\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (!state || !state.updateBoomMeter) return; \r\n    if (amount === 3) {\r\n      const body = unusedBodies[Math.floor(Math.random()*unusedBodies.length)];\r\n      if (body) {\r\n        const block = (body as any).userData as CircleBlock;\r\n        state.fireMissle(1, block.position);\r\n      }\r\n    }\r\n    if (unusedBodies.length > 0) {\r\n      state.updateBoomMeter((amount > 0) ? unusedBodies.length + 1 : 1);\r\n    }\r\n    let wasRainbow = false;\r\n    unusedBodies.forEach((body) => {\r\n      const block = (body as any).userData as CircleBlock;\r\n      if (block && block.type === CircleBlock.rainbowType && block.steps > 3) {\r\n        wasRainbow = true;\r\n      }\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType) {\r\n          block.boom();\r\n        }\r\n      }\r\n    });\r\n    explodePoints = [];\r\n\r\n    if (wasRainbow) {\r\n      world.bodies.forEach((body)=> {\r\n        const block = (body as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.correctType()) {\r\n          state.createExplosion(block.position);\r\n          block.boom();\r\n        }\r\n      });\r\n      state.stopBonuses();\r\n    }\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}