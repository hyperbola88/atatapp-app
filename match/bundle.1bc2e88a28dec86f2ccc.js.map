{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","rotateView","angle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","getTexture","getTexture2","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","cos","sin","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","log","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","levelStartTime","Date","getTime","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","time","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","idealTime","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","includes","createGoalBlock","createBottomExit","onGameOver","obstacle","Static","Random","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","playRandom","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.1bc2e88a28dec86f2ccc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.angle);\r\n                } else {\r\n                  sprite.rotation = body.angle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          //new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            \r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = true;//await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        \r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate, onComplete: ()=> {\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onUpdate});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MenuState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.GOAL_TYPE) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.type === CircleBlock.GOAL_TYPE && this.goalBlock.position.y > 450) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = new Date().getTime() - this.levelStartTime;\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n                this.levelStartTime = new Date().getTime();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.levelId > 9 && Math.random() < 0.1) {\r\n            return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.SKULL_TYPE;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE);\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"sound1\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"sound2\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"left\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"right\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      sounds.add(\"ball hit 0\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 1\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 2\", { volume: 0.4 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}