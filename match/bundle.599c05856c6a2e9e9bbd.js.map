{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","material","undefined","BaseGame","options","autoDensity","resolution","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","createBody","DYNAMIC","_kinematic","filters","GlowFilter","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","k","a","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","NextBlocksTimer","NineSlicePlane","initialWidth","bar","barMask","mask","bell","AnimatedSprite","animationSpeed","gotoAndStop","isFrozen","seconds","BoomMeter","lineStyle","drawRect","current","min","wasEnd","Message","blocks","fontWeight","align","clear","nextLines","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","letters","getLetters","item","getPoint","dAngle","w","dx","items","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","floor","rest","BackButton","arrow","lineTo","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","BaseObstacle","StaticObstacle","EIAPBonus","EBonus","EObstacle","RandomObstacle","lives","moving","finish","rx","random","ry","GameViewState","pad","menuBtn","MapState","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","moveTo","nextTimer","boomMeter","scorePlace","padRect","topRect","levelId","activeBonus","None","randomBodiesPositions","obstacles","powerups","isTransition","nextType","isActivePowerup","generateLineBlocks","tick","maxY","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","maximum","currentLevelData","addActiveBlock","onClick","onTapStart","Ticker","shared","update","startPosition","fireMissle","addScore","bonus","getRandomBonus","setActiveBonus","abs","freeze","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","unFreeze","bonuses","missle","copyFrom","atan2","time","createExplosion","explodePoints","nextBlock","activeBlock","clearActiveBlocks","stopBonuses","bottomOpenWall","animateAndDestroy","moveBox","staticBox","mousePressed","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","velocity","BottomPoint","goalType","bound","contains","moveToNextLevel","createMoveWalls","generateNewBlocks","startCountDeath","setProgress","moveBalls","boom","log","unusedBlocksRemoved","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","getRandomType","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","cos","sin","lp","switchBlockes","setLines","startAmount","createObstacle","onGameOver","createBottomExit","obstacle","Static","Random","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","remove","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","stars","parseInt","calculateStars","starsConditions","repeat","content","removeChildren","Logo","explosion","face","logo","Elastic","easeOut","Bounce","playBtn","onPlayClicked","stop","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","conditions","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","block","inst","instB","changePosition","activeState","hitTest","startLoading","loader","onProgress","onError","url","resources","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.599c05856c6a2e9e9bbd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([201,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    protected txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type < 20 && (this.type === 250 || this.type === 251);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: NineSlicePlane;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 600;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private bell: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),30,25,30,25);\r\n        back.width = this.initialWidth;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 30,25,30,25);\r\n        this.bar.width = this.initialWidth;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.bell.position.set(440,21);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n        this.bell.visible=false;\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        if (p === 1) {\r\n            this.bell.play();\r\n            gsap.delayedCall(2, ()=> {\r\n                this.bell.gotoAndStop(0);\r\n            });\r\n        }\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 100;\r\n    private barMask: Sprite;\r\n    constructor() {\r\n        super();\r\n        const back = new Graphics();\r\n        back.lineStyle(4,0x2ab909,1);\r\n        back.drawRect(0,0,this.initialWidth, 40);\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.WHITE);\r\n        this.bar.width = this.initialWidth;\r\n        this.bar.height = 40;\r\n        this.bar.tint = 0x2ab909;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public update(amount: number): boolean {\r\n        //console.log(amount);\r\n        if (amount < 2) {\r\n            amount = 0;\r\n        } else {\r\n            this.current += amount;\r\n            this.current = Math.min(this.current, this.max);\r\n        }\r\n        const wasEnd = this.current >= this.max;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * (this.current / this.max), duration: 0.2});\r\n        if (wasEnd) {\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = 80;\r\n        back.height = 80;\r\n        back.tint = 0xcacaca;\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontWeight: \"bold\", fontSize: 70});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        const letters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < letters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const letters = this.getLetters();\r\n        return new Promise<void>((resolve) => {\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let angle = -30;\r\n            const dAngle = 60 / (letters.length - 1);\r\n            const w = 80 * letters.length;\r\n            let x = -w*0.5;\r\n            const dx = w / (letters.length - 1);\r\n            const items = [];\r\n            for (let i = 0; i < letters.length; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = letters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y: -400, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                angle += dAngle;\r\n                x += dx;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (letters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.width = 300;\r\n        back.height = 70;\r\n        back.tint = 0x3a3a3a;\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 10});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Graphics } from \"pixi.js\";\r\nimport { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class BackButton extends TextedButton {\r\n    constructor() {\r\n        super(\"Menu\", 40, 0xffffff, 0x000000);\r\n        this.txt.style.fontWeight = \"bold\";\r\n        this.btn.alpha = 0.000001;\r\n        this.btn.width = 180;\r\n        this.btn.height = 50;\r\n\r\n        const arrow = new Graphics();\r\n        arrow.beginFill(0,1);\r\n        arrow.lineTo(25, -15);\r\n        arrow.lineTo(25, 15);\r\n        arrow.lineTo(0, 0);\r\n        this.addChild(arrow);\r\n        arrow.position.set(-95, 0);\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    protected getLetters(): string[] {\r\n        return [\"D\", \"A\", \"B\", \"O\", \"O\", \"M\"];\r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0xBBBBBB;\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontSize: 10, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.view.addChild(this.txt);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.clean();\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x777777;\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, getStorageData, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { calculateStars, explodePoints } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp,\r\n    RocketLeft,\r\n    All\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n\r\n    public create(): void {\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-220, 25);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            stateManager.start(MapState);\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-390, 900);\r\n        this.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(-265, 900);\r\n        this.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Message();\r\n        this.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new Graphics();\r\n        line.lineStyle(4, 0x000000, 0.3);\r\n        line.moveTo(-400, 500);\r\n        line.lineTo(400, 500);\r\n        this.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-300, -630);\r\n        this.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(205, -710);\r\n        this.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addChild(this.nextTimer);\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addChild(this.boomMeter);\r\n        this.addActiveBlock();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n\r\n    //OLD BONUSES\r\n    /*private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                this.clearActiveBlocks();\r\n                this.addActiveBlock();\r\n                break;\r\n            case EBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break;\r\n            case EBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }*/\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 0.8;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`rocket1.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1, y: 1, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        if (this.isTransition && !wasEnd) {\r\n            this.nextTimer.clear();\r\n            this.boomMeter.update(0);\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.moveToNextLevel();\r\n            this.score = 0;\r\n            this.scorePlace.score = 0;\r\n            this.createMoveWalls();\r\n            this.addChild(this.nextTimer);\r\n            this.nextTimer.freeze();\r\n            this.obstacles.forEach((o)=> {\r\n                o.clean();\r\n            });\r\n            this.obstacles=[];\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.nextTimer.unFreeze();\r\n            });\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=1;\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                amount += ((body as any).userData as CircleBlock).boom(true); \r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\", this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n    }\r\n    private async startPowerup(id: number) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        //this.nextBlock.scale.set(0.7);\r\n        this.pad.addChild(this.nextBlock);\r\n    }\r\n    private getRandomType() {\r\n        //if (this.activeBonus === EBonus.Rainbow) return CircleBlock.rainbowType;\r\n        //const rainbowChance = Math.random() < 0.15;\r\n        //if (rainbowChance) return CircleBlock.rainbowType;\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n       /* if (this.nextType === CircleBlock.rainbowType) {\r\n            this.activeBonus = true;\r\n        }*/\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.padRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n            });\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n\r\n        //todo clear everything\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"TODO List\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            \r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good task to do today.\";\r\n            } else {\r\n                text = \"The task is done: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new TextedButton(\"PLAY\", 100, 0x000000, 0xFFFFFF);\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (!state || !state.unusedBlocksRemoved) return;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (amount > 0) {\r\n      const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n      if (body) {\r\n        pos = ((body as any).userData as CircleBlock).position;\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType) {\r\n         amount += block.boom();\r\n        }\r\n      }\r\n    });\r\n    amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}