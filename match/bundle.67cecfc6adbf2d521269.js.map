{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/fps.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/pools/items/ScoreItem.ts","webpack:///./game/states/game/pools/ScorePool.ts","webpack:///./game/states/game/pools/items/Bolt.ts","webpack:///./game/states/game/pools/BoltsPool.ts","webpack:///./game/states/game/pools/MisslesPool.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/pools/ExplosionsPool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","checkPlaying","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Stats","require","world","app","FPS","original","pixiHooks","PIXIHooks","stat","StatsJSAdapter","stats","element","dom","domElement","style","left","addEventListener","event","shiftX","clientX","getBoundingClientRect","shiftY","clientY","top","dragged","moveAt","pageX","pageY","onMouseMove","document","mouseUpHandler","e","removeEventListener","stopPropagation","makeDraggable","body","appendChild","ticker","add","update","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","renderer","plugins","interaction","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","lastTimeMilliseconds","Date","getTime","step","now","timeSinceLastCall","min","bodies","forEach","userData","transform","v2","interpolatedPosition","position","rotateView","interpolatedAngle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","DummySocial","score","txt","success","language","gameKey","secretKey","sendAdEvent","EGAAdAction","Show","EGAAdType","Interstitial","Promise","resolve","RewardedVideo","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","STATIC_OBSTACLE_TYPE","RANDOM_OBSTACLE_TYPE","SKULL_TYPE","ANY_TYPE","permanentSkull","createBody","DYNAMIC","view2","createView2","angle","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","getTexture","getTexture2","savedType","kinematic","BOMB_TYPE","onUpdate","updateShape","delay","explosion","explosionsPool","obtain","animate","release","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","a","cos","sin","playRandom","SCALE_FACTOR","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","reset","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","GOAL_TYPE","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","sendEvent","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","level","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","allTexts","arr","log","split","points","point","getAllByAmount","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","startTime","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","timeBonus","conditions","callback","prizes","prize","None","powerupDone","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","ScorePool","Bolt","BoltsPool","MisslesPool","createMissle","Explosion","art","ExplosionsPool","frame","nf","EBonus","EObstacle","_textures","bonusesWeights","lagSmoothing","prepareTextures","createTextures","scorePool","boltsPool","misslesPool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","time","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStartTime","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","RAINBOW_TYPE","levelStarted","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","sendStartLevelEvent","maximum","addActiveBlock","rocketPowerup","onClick","onTapStart","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","delta","MenuState","pauseTime","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","addScore","SmallBoomLetters","BoomLetters","BigBoomLetters","BONUS_SCORE","getLettersAmount","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","mappedWeights","summ","el","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","playArgue","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","meterBonusBlocks","isGoal","bound","contains","getLevelTime","idealTime","sendFinishLevelEvent","EGAProgressionStatus","Complete","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","customs","sendProgressionEvent","Start","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","createCircle","forActive","bonusBalls","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","skullsArr","includes","createGoalBlock","createBottomExit","addBeginSkulls","circle","setPermanentSkull","onGameOver","obstacle","Static","Random","Fail","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","END_TYPE","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","muteBtn","unmuteBtn","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdError","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","status","addProgressionEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","RewardReceived","category","label","addDesignEvent","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.67cecfc6adbf2d521269.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([201,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing || !checkPlaying) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { PIXIHooks, StatsJSAdapter } from \"gstats/dist/main\";\r\nimport { Application } from \"pixi.js\";\r\n\r\nwindow.Stats = require(\"stats.js/build/stats.min.js\");\r\n\r\nexport class FPS {\r\n    constructor(app: Application) {\r\n        // We're silencing the error message (not the actual error) from the PIXIHooks constructor\r\n        // so it does not flood the analytics when WebGL is not supported\r\n\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        const original = console.error;\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        console.error = () => undefined;\r\n        const pixiHooks = new PIXIHooks(app);\r\n        // eslint-disable-next-line no-console,@typescript-eslint/unbound-method\r\n        console.error = original;\r\n\r\n        const stat = new StatsJSAdapter(pixiHooks);\r\n        const stats = stat.stats as { dom?: HTMLElement; domElement?: HTMLElement };\r\n        const element = (stats.dom ?? stats.domElement) as HTMLElement;\r\n        element.style.left = \"200px\";\r\n        makeDraggable(element);\r\n        document.body.appendChild(element);\r\n        app.ticker.add(stat.update.bind(stat));\r\n    }\r\n}\r\n\r\nfunction makeDraggable(element: HTMLElement) {\r\n    element.addEventListener(\"mousedown\", (event) => {\r\n        const shiftX = event.clientX - element.getBoundingClientRect().left;\r\n        const shiftY = event.clientY - element.getBoundingClientRect().top;\r\n        let dragged = false;\r\n\r\n        function moveAt(pageX: number, pageY: number) {\r\n            element.style.left = `${pageX - shiftX}px`;\r\n            element.style.top = `${pageY - shiftY}px`;\r\n        }\r\n\r\n        moveAt(event.pageX, event.pageY);\r\n\r\n        function onMouseMove(event: MouseEvent) {\r\n            moveAt(event.pageX, event.pageY);\r\n            dragged = true;\r\n        }\r\n\r\n        // move the element on mousemove\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // drop the element, remove unneeded handlers\r\n        const mouseUpHandler = (e: MouseEvent) => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n            document.removeEventListener(\"mouseup\", mouseUpHandler);\r\n            if (dragged) e.stopPropagation();\r\n        };\r\n\r\n        element.addEventListener(\"mouseup\", mouseUpHandler);\r\n    });\r\n}\r\n","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\nimport { FPS } from \"./fps\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -50]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          let lastTimeMilliseconds = new Date().getTime();\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            const now = new Date().getTime();\r\n            const timeSinceLastCall = Math.min((now - lastTimeMilliseconds) / 1000, 1/10);\r\n            //console.log(step,timeSinceLastCall);\r\n            lastTimeMilliseconds = now;\r\n            \r\n            world.step(step, timeSinceLastCall, 1);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.interpolatedPosition;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.interpolatedAngle);\r\n                } else {\r\n                  sprite.rotation = body.interpolatedAngle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n\r\n          new FPS(app);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { EGAAdAction, EGAAdType, sendAdEvent } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"28b00d27d31d5bb1a89f2f95461df103\",\r\n      secretKey: \"b527d253099947040f78d2b1e70f06725391e3a1\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n    return new Promise<void>((resolve)=> {\r\n      const r = Math.random() < 0.5;\r\n      window.setTimeout(()=> {\r\n        resolve();\r\n      }, r ? 1000 : 0);\r\n    });\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    sendAdEvent(\r\n      EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return new Promise<boolean>((resolve)=> {\r\n      window.setTimeout(()=> {\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")!) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p: string[] = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 50) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === CircleBlock.STATIC_OBSTACLE_TYPE || this.type === CircleBlock.RANDOM_OBSTACLE_TYPE || this.type === CircleBlock.SKULL_TYPE || this.type === CircleBlock.ANY_TYPE);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../GameViewState\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n\r\n    public static GOAL_TYPE = 1000;\r\n    public static END_TYPE = 500;\r\n    public static STATIC_OBSTACLE_TYPE = 250;\r\n    public static RANDOM_OBSTACLE_TYPE = 251;\r\n    public static BOMB_TYPE = 2000;\r\n    public static SKULL_TYPE = 3000;\r\n    public static RAINBOW_TYPE = 4000;\r\n    public static ANY_TYPE = 5000;\r\n\r\n    protected static SCALE_FACTOR = 0.5;\r\n\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    public steps = 1;\r\n\r\n    protected stepsAmount = 3;\r\n    protected view2: Sprite;\r\n    \r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.SKULL_TYPE;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC, 50);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 50): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 50;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.SKULL_TYPE && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.SKULL_TYPE;\r\n    }\r\n    public setPermanentSkull() {\r\n        this.permanentSkull = true;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.SKULL_TYPE;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.BOMB_TYPE;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = explosionsPool.obtain();\r\n            this.addChild(explosion);\r\n            explosion.animate().then(()=> {\r\n                explosionsPool.release(explosion);\r\n            });\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            sounds.playRandom(\"ball pop \", 3);\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            sounds.play(\"ball grow\");\r\n            const i = CircleBlock.SCALE_FACTOR * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.SCALE_FACTOR * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor() {\r\n        super(300);\r\n        this.createBody(Body.DYNAMIC);\r\n        this.reset();\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate(startX: number, startY: number, endX: number, endY: number) {\r\n        return new Promise<void>((r)=>{\r\n            this.visible = true;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.endX = endX;\r\n            this.endY = endY;\r\n            this.position.set(startX, startY);\r\n            if (startX !== endX) this.view.angle = 90;\r\n            const s = {x: this.startX, y: this.startY};\r\n            this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.reset();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body!.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n    private reset() {\r\n        this.body!.gravityScale = 0;\r\n        this.visible = false;\r\n        this.body!.position = [-2000/METER_SIZE, -2000/METER_SIZE];\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.GOAL_TYPE, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../../..\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private async onPressed() {\r\n        sendEvent(\"Game\", \"Powerup\", \"Click\");\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            const start = new Date().getTime();\r\n            gameSettings.paused = true;\r\n            let success = await showADS(AdType.RewardedVideo);\r\n            success = true;\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id, new Date().getTime() - start);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n       // if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor(level: 0|1|2|3) {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters(level);\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(amount: number): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private static allTexts: Map<0|1|2|3, string[]>;\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(level: 0|1|2|3): string[] {\r\n        return BoomLettersBonus.getAllByAmount(level);\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    private static getAllByAmount(level: 0|1|2|3): string[] {\r\n        if (level === 0) return [];\r\n        if (!BoomLettersBonus.allTexts) {\r\n            const texts = [\r\n                \"BANG!\",\r\n                \"BONUS\", \r\n                \"SMASH\",\r\n                \"KABOOM\",\r\n                \"CRASH\",\r\n                \"CLANK\",\r\n                \"THUMP\",\r\n                \"WHAM!\",\r\n                \"SUPER BOOM\",\r\n                \"SUPER BONUS\",\r\n                \"LET'S JAZZ\",\r\n                \"YOU ARE JUST GREAT\",\r\n                \"YOU ARE GREAT\",\r\n                \"SUPER PUPER BOOM\",\r\n                \"WISH YOU LUCK, DUDE!\",\r\n                \"THAT WAS DOOM!\",\r\n                \"OH MY GOD!\"\r\n            ];\r\n            BoomLettersBonus.allTexts = new Map<0|1|2|3, string[]>();\r\n            texts.forEach((t)=> {\r\n                const i = (t.length >= 17) ? 3 : (t.length >= 10 ? 2 : 1);\r\n                let arr: string[] = [];\r\n                if (BoomLettersBonus.allTexts.get(i)) {\r\n                    arr = BoomLettersBonus.allTexts.get(i)!;\r\n                }\r\n                arr.push(t);\r\n                BoomLettersBonus.allTexts.set(i, arr);\r\n            });\r\n            console.log(BoomLettersBonus.allTexts);\r\n        }\r\n        const arr = BoomLettersBonus.allTexts.get(level)!;\r\n        return arr[Math.floor(Math.random()*arr.length)].split(\"\");\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super(0);\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint!();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = CircleBlock.STATIC_OBSTACLE_TYPE;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { explosionsPool } from \"../../GameViewState\";\r\nimport { CircleBlock } from \"../CircleBlock\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = CircleBlock.RANDOM_OBSTACLE_TYPE;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = explosionsPool.obtain();\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    explosionsPool.release(this.explosion);\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    private startTime: number;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        this.startTime = new Date().getTime();\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n        this.emit(\"hide\", new Date().getTime() - this.startTime);\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, timeBonus: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        if (!won) timeBonus = 0;\r\n        console.log(level.toString(), prizes, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate, onComplete: ()=> {\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onUpdate});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    private okBut: Button;\r\n    private xBut: Button;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        this.okBut = okBut;\r\n        this.xBut = xBut;\r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        this.okBut.disabled = false;\r\n        this.xBut.disabled = false;\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.okBut.disabled = true;\r\n        this.xBut.disabled = true;\r\n        this.visible = false;\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.ANY_TYPE, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./items/ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Score pool exceed\");\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Bolt extends Sprite {\r\n    private _id: number;\r\n    constructor(id: number) {\r\n        super(Texture.from(`bolt${id}.png`));\r\n        this._id = id;\r\n    }\r\n    public get id () {\r\n        return this._id;\r\n    }\r\n}","import { Bolt } from \"./items/Bolt\";\r\n\r\nexport class BoltsPool {\r\n    private all: Map<number, Bolt[]>;\r\n    constructor() {\r\n        const types = 4;\r\n        const amount = 20;\r\n        this.all = new Map<number, Bolt[]>();\r\n        for (let t = 0; t < types; t++) {\r\n            const arr: Bolt[] = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                arr.push(new Bolt(t));\r\n            }\r\n            this.all.set(t, arr);\r\n        }\r\n    }\r\n    public obtain(type: number): Bolt {\r\n        const arr = this.all.get(type);\r\n        if (arr && arr.length === 0) {\r\n            console.log(\"Bolts pool exceed\");\r\n            arr.push(new Bolt(type));\r\n        }\r\n        return arr?.pop()!;\r\n    }\r\n    public release(b: Bolt) {\r\n        const arr = this.all.get(b.id);\r\n        arr!.push(b);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class MisslesPool {\r\n    private all: Sprite[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n    }\r\n    public obtain(): Sprite {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(MisslesPool.createMissle());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Sprite) {\r\n        this.all.push(b);\r\n    }\r\n    private static createMissle() {\r\n        return new Sprite(Texture.from(`like.png`));\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { ExplosionsPool } from \"./pools/ExplosionsPool\";\r\n\r\nexport class Explosion extends Container{\r\n    private art: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.art = Sprite.from(ExplosionsPool.getTexture(0));\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = ExplosionsPool.getTexture(frame);\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    public clean() {\r\n        this.art.texture = ExplosionsPool.getTexture(0);\r\n        this.scale.set(0, 0);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        gsap.killTweensOf(this.scale);\r\n        gsap.killTweensOf(this);\r\n    }\r\n}","import { Texture } from \"pixi.js\";\r\nimport { Explosion } from \"../Explosion\";\r\n\r\nexport class ExplosionsPool {\r\n    private static _textures;\r\n    private all: Explosion[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new Explosion());\r\n        }\r\n    }\r\n    public obtain(): Explosion {\r\n        if (this.all.length === 0) {\r\n            console.log(\"Missles pool exceed\");\r\n            this.all.push(new Explosion());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: Explosion) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n\r\n    public static getTexture(id: number) {\r\n        return ExplosionsPool._textures[id];\r\n    }\r\n    public static createTextures() {\r\n        if (!ExplosionsPool._textures) {\r\n            ExplosionsPool._textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { AdType, gameplayStart, setStorageData, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/pools/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/pools/items/ScoreItem\";\r\nimport { BoltsPool } from \"./game/pools/BoltsPool\";\r\nimport { MisslesPool } from \"./game/pools/MisslesPool\";\r\nimport { ExplosionsPool } from \"./game/pools/ExplosionsPool\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    SmallBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    key: number,\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number,\r\n    bonusBalls: number[]\r\n}\r\nconst bonusesWeights = [0,0.2,0.3,0.1,0.4];\r\n\r\nexport let explosionsPool;\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private boltsPool: BoltsPool;\r\n    private misslesPool: MisslesPool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n    private rocketPowerup: RocketPowerup;\r\n    private levelStarted: boolean;\r\n\r\n    public create(): void {\r\n        gsap.ticker.lagSmoothing(1000, 16);\r\n        WheelBox.prepareTextures();\r\n        ExplosionsPool.createTextures();\r\n        explosionsPool = new ExplosionsPool(90);\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.boltsPool = new BoltsPool();\r\n        this.misslesPool = new MisslesPool(3);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Game\", \"Menu\", \"Click\");\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id, time?) => {\r\n            this.startPowerup(id, time);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.tutorial.on(\"hide\", (d)=> {\r\n            this.levelStartTime += d;\r\n        });\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.ANY_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.RAINBOW_TYPE, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.levelStarted = false;\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n            this.powerup1.disabled = false;\r\n            this.powerup2.disabled = false;\r\n            this.sendStartLevelEvent({iaps:iaps.toString()});\r\n        } else {\r\n            this.sendStartLevelEvent();\r\n        }\r\n        this.levelStarted = true;\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        \r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n        this.rocketPowerup = new RocketPowerup();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        const delta = new Date().getTime();\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show(async(exit: boolean)=> {\r\n            if (exit) {\r\n                await showADS(AdType.Interstitial);\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                sendEvent(\"Game\", \"Pause\", \"Exit\");\r\n                stateManager.start(MenuState);\r\n            } else {\r\n                sendEvent(\"Game\", \"Pause\", \"Cancel\");\r\n                gameSettings.paused = false;\r\n                gsap.globalTimeline.resume();\r\n                const pauseTime = new Date().getTime() - delta;\r\n                this.levelStartTime += pauseTime;\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        const r = Math.random() < 0.5;\r\n        if (amount === 3) {\r\n            sounds.play(\"emoji yeah\");\r\n        } else if (amount === 4) {\r\n            if (r) {\r\n                sounds.play(\"emoji wah\");\r\n            } else {\r\n                sounds.play(\"emoji oh\");\r\n            }\r\n        }\r\n        if (amount >= 5) {\r\n            if (r) {\r\n                sounds.playRandom(\"emoji wow \", 2);\r\n            } else {\r\n                sounds.play(\"emoji ahh\");\r\n            }\r\n            \r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = this.boltsPool.obtain(r);\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n                this.boltsPool.release(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (!p || Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private getLettersAmount(bonus: EBonus): 0|1|2|3 {\r\n        if (bonus === EBonus.SmallBoomLetters) {\r\n            return 1;\r\n        } else if (bonus === EBonus.BoomLetters) {\r\n            return 2;\r\n        } else if (bonus === EBonus.BigBoomLetters) {\r\n            return 3;\r\n        } else\r\n        return 0;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScoreItem(0, 0, CircleBlock.BONUS_SCORE);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        const level = this.getLettersAmount(bonus);\r\n        console.log(\"set bonus\", bonus, level);\r\n        sendEvent(\"Game\", \"Bonus\", \"Activate\", bonus);\r\n        switch(bonus) {\r\n            case EBonus.SmallBoomLetters:\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = new BoomLettersBonus(level);\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus();\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        //console.log(bonuses);\r\n        const mappedWeights: number[] = [];\r\n        let summ = 0;\r\n        for (let i = 0; i < bonuses.length; i++) {\r\n            const w = bonusesWeights[bonuses[i]];\r\n            //console.log(i,bonuses[i],w);\r\n            summ += w;\r\n            mappedWeights.push(summ);\r\n        }\r\n        //console.log(mappedWeights,summ);\r\n        const r = Math.random()*summ;\r\n        const index = mappedWeights.filter(el => r >= el).length;\r\n        //console.log(\"rand:\",r,\"index:\",index);\r\n        return bonuses[index];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = this.misslesPool.obtain();\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n                this.misslesPool.release(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public async createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = explosionsPool.obtain();\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n        await e.animate(delay);\r\n        explosionsPool.release(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.playArgue(2);\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (!this.isTransition && this.goalBlock && this.goalBlock.position.y > 450 && this.levelStarted) {\r\n            wasGameOver = true;\r\n        }\r\n        \r\n        if (this.goalBlock && !wasGameOver) {\r\n            this.goalBlock.resetDeathCounter();\r\n        }\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = this.getLevelTime();\r\n            const {idealTime} = gameSettings.levels[this.levelId];\r\n            const timeBonus = (time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n            this.sendFinishLevelEvent(EGAProgressionStatus.Complete, this.score + timeBonus, {score: this.score, time, timeBonus});\r\n            this.levelStarted = false;\r\n            this.levelFinished.show(true, this.score, timeBonus, this.currentLevelData.starsConditions, ()=> {\r\n                this.score += timeBonus;\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (this.goalBlock && wasGameOver) {\r\n            this.goalBlock.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private getLevelTime() {\r\n        return  new Date().getTime() - this.levelStartTime;\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(`${this.currentLevelData.key}`,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(`${this.currentLevelData.key}`,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        showADS(AdType.Interstitial).then(()=> {\r\n            this.createMoveWalls();\r\n            this.generateNewBlocks().then(()=> {\r\n                const iaps = this.generateIAPS();\r\n                this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                    if (this.currentLevelData.iaps) {\r\n                        this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                        this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                        this.powerup1.visible = true;\r\n                        this.powerup2.visible = true;\r\n                        this.sendStartLevelEvent({iaps:iaps.toString()});\r\n                    } else {\r\n                        this.sendStartLevelEvent();\r\n                    }\r\n                    this.levelStarted = true;\r\n                    this.generateLineBlocks();\r\n                    this.addActiveBlock();\r\n                    this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                    this.nextTimer.unFreeze();\r\n                    this.levelStartTime = new Date().getTime();\r\n                });\r\n            });\r\n            gameSettings.paused = false;\r\n        });\r\n        this.isTransition = false;\r\n    }\r\n    private sendStartLevelEvent(customs?:{[id: string]: any}) {\r\n        console.log(\"send start\",\"level\"+this.currentLevelData.key,customs);\r\n        sendProgressionEvent(EGAProgressionStatus.Start,\"level\"+this.currentLevelData.key, 0, customs);\r\n    }\r\n    private sendFinishLevelEvent(s: EGAProgressionStatus.Complete | EGAProgressionStatus.Fail ,score: number, customs?:{[id: string]: any}) {\r\n        console.log(\"send finish\",\"level\"+this.currentLevelData.key,score);\r\n        sendProgressionEvent(s,\"level\"+this.currentLevelData.key, score, customs);\r\n    }\r\n    private async startPowerup(id: EIAPBonus, time?: number) {\r\n        sendEvent(\"Game\", \"Powerup\", \"Activate\", id);\r\n        if (time) {\r\n            this.levelStartTime += time;\r\n        }\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        this.powerup1.disabled = true;\r\n        this.powerup2.disabled = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                this.startVerticalRocket();\r\n                await this.delay(2);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                await this.delay(1);\r\n                this.shakeScreen();\r\n                await this.delay(1);\r\n                this.powerup1.disabled = false;\r\n                this.powerup2.disabled = false;\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                this.delay(10).then(()=> {\r\n                    this.powerup1.disabled = false;\r\n                    this.powerup2.disabled = false;\r\n                });\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        this.gameContainer.addChild(this.rocketPowerup);\r\n        await this.rocketPowerup.animate(startX, startY, endX, endY);\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.currentLevelData.bonusBalls.length > 0 && Math.random() < 0.08) {\r\n            if (this.currentLevelData.bonusBalls.length === 2) {\r\n                return (Math.random() < 0.5) ? CircleBlock.ANY_TYPE : CircleBlock.RAINBOW_TYPE;\r\n            } else if (this.currentLevelData.bonusBalls.length === 1) {\r\n                if (this.currentLevelData.bonusBalls[0] === 1) {\r\n                    return CircleBlock.ANY_TYPE;\r\n                } else {\r\n                    return CircleBlock.RAINBOW_TYPE;\r\n                }\r\n            }\r\n            \r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 50);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 2000;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.SKULL_TYPE) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        const skullsArr: CircleBlock[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        this.playArgue();\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            if (skullsIds.includes(i)) {\r\n                skullsArr.push(f);\r\n            }\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                this.createGoalBlock();\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            this.createGoalBlock();\r\n        }\r\n        \r\n        this.delay(3).then(()=> {\r\n            this.createBottomExit();\r\n        });\r\n        \r\n        if (skullsArr.length > 0) {\r\n            await this.delay(0.5);\r\n            await this.addBeginSkulls(skullsArr);\r\n        }\r\n    }\r\n    private playArgue(amount: number = 3) {\r\n        sounds.play(\"emoji argue 0\");\r\n        if (amount > 1) {\r\n            this.delay(0.9).then(()=> {\r\n                sounds.play(\"emoji argue 1\");\r\n                if (amount > 2) {\r\n                    this.delay(0.9).then(()=> {\r\n                        sounds.play(\"emoji argue 2\");\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n    private async addBeginSkulls(skulls: CircleBlock[]) {\r\n        let i = 0;\r\n        for (let circle of skulls) {\r\n            if (circle) {\r\n                gsap.to(circle.scale, {x: 5, y: 5, delay: i*0.6, duration: 0.1, ease: Expo.easeOut, onComplete: ()=> {\r\n                    circle.setPermanentSkull();\r\n                }});\r\n                gsap.to(circle.scale, {x: 1, y: 1, delay: i, duration: 0.5, ease: Expo.easeIn});\r\n                i += 0.05;\r\n            }\r\n        }\r\n        await this.delay(0.7);\r\n    }\r\n    private createGoalBlock() {\r\n        this.goalBlock = this.createCircle(0,1100,CircleBlock.GOAL_TYPE) as GoalBlock;\r\n        this.goalBlock.on(\"gameover\", this.onGameOver, this);\r\n        this.gameContainer.addChild(this.goalBlock);\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.levelStarted = false;\r\n        this.sendFinishLevelEvent(EGAProgressionStatus.Fail, 0, {score: this.score, time: this.getLevelTime(), timeBonus: 0});\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.END_TYPE;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.GOAL_TYPE) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.ANY_TYPE) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus() {\r\n        if (this.meterBonus) {\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.GOAL_TYPE) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.ANY_TYPE || instanceB.type === CircleBlock.ANY_TYPE) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        !instanceA.isGoal() && !instanceB.isGoal() && \r\n        instanceA.type !== CircleBlock.STATIC_OBSTACLE_TYPE && instanceB.type !== CircleBlock.STATIC_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && instanceB.type !== CircleBlock.RANDOM_OBSTACLE_TYPE && \r\n        instanceA.type !== CircleBlock.SKULL_TYPE && instanceB.type !== CircleBlock.SKULL_TYPE;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.RAINBOW_TYPE || instanceB.type === CircleBlock.RAINBOW_TYPE)\r\n        {\r\n            if (instanceA.type === CircleBlock.RAINBOW_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.END_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.END_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.END_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.GOAL_TYPE && instanceB.type === CircleBlock.SKULL_TYPE) ||\r\n            (instanceB.type === CircleBlock.GOAL_TYPE && instanceA.type === CircleBlock.SKULL_TYPE))\r\n        {\r\n            if (instanceA.type === CircleBlock.SKULL_TYPE) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.ANY_TYPE && instanceB.type === CircleBlock.SKULL_TYPE && !instanceB.isGoal()) ||\r\n                (instanceB.type === CircleBlock.ANY_TYPE && instanceA.type === CircleBlock.SKULL_TYPE && !instanceA.isGoal());\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === CircleBlock.RANDOM_OBSTACLE_TYPE)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.SKULL_TYPE) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && !notRainbow.isGoal() && notRainbow.type !== CircleBlock.STATIC_OBSTACLE_TYPE && notRainbow.type !== CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.END_TYPE || notRainbow.type === CircleBlock.STATIC_OBSTACLE_TYPE || notRainbow.type === CircleBlock.RANDOM_OBSTACLE_TYPE)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === CircleBlock.RANDOM_OBSTACLE_TYPE) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === CircleBlock.STATIC_OBSTACLE_TYPE) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.GOAL_TYPE && instanceB.type !== CircleBlock.GOAL_TYPE) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.SKULL_TYPE) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.GOAL_TYPE || instanceB.type === CircleBlock.GOAL_TYPE) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { sounds } from \"../../../core/SoundManager\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        sounds.play(\"startup explosion\");\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n    private muteBtn: Button;\r\n    private unmuteBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            this.onPlayClicked();\r\n        });\r\n\r\n        this.muteBtn = new Button(\"sound1.png\", \"sound1.png\");\r\n        this.muteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.muteBtn);\r\n        this.muteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Mute\", \"click\");\r\n            this.mute = true;\r\n        });\r\n\r\n        this.unmuteBtn = new Button(\"sound2.png\", \"sound2.png\");\r\n        this.unmuteBtn.position.set(gameSettings.originalWidth / 2 - 50, -gameSettings.originalHeight / 2 + 70);\r\n        this.addChild(this.unmuteBtn);\r\n        this.unmuteBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Unmute\", \"click\");\r\n            this.mute = false;\r\n        });\r\n        getStorageData(\"emoji_mute\", \"0\").then((m)=> {\r\n            this.mute = m === \"1\";\r\n        });\r\n\r\n        this.createMapItems();\r\n    }\r\n    private set mute(m: boolean) {\r\n        this.muteBtn.visible = !m;\r\n        this.unmuteBtn.visible = m;\r\n        setStorageData(\"emoji_mute\", m ? \"1\" : \"0\");\r\n        sounds.muteMusic = m;\r\n        sounds.muteSounds = m;\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Menu\", \"View\", \"Start\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Menu\", \"View\", \"Close\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(`${data.key}`,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Prev\", \"Click\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"Menu\", \"Next\", \"Click\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(`${data.key}`,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = this.activeLevelId === 0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        sendEvent(\"Menu\", \"Play\", \"Click\", this.activeLevelId + 1);\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Next\", \"Click\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"Comics\", \"Prev\", \"Click\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"Comics\", \"View\", \"Start\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"Comics\", \"View\", \"Close\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.5 });\r\n      const sVol = 1;\r\n      sounds.add(\"ball hit 0\", { volume: sVol });\r\n      sounds.add(\"ball hit 1\", { volume: sVol });\r\n      sounds.add(\"ball hit 2\", { volume: sVol });\r\n      sounds.add(\"ball grow\", { volume: sVol });\r\n      sounds.add(\"ball pop 0\", { volume: sVol });\r\n      sounds.add(\"ball pop 1\", { volume: sVol });\r\n      sounds.add(\"ball pop 2\", { volume: sVol });\r\n      sounds.add(\"click\", { volume: sVol });\r\n      sounds.add(\"emoji ahh\", { volume: sVol });\r\n      sounds.add(\"emoji argue 0\", { volume: sVol });\r\n      sounds.add(\"emoji argue 1\", { volume: sVol });\r\n      sounds.add(\"emoji argue 2\", { volume: sVol });\r\n      sounds.add(\"emoji oh\", { volume: sVol });\r\n      sounds.add(\"emoji wah\", { volume: sVol });\r\n      sounds.add(\"emoji wow 0\", { volume: sVol });\r\n      sounds.add(\"emoji wow 1\", { volume: sVol });\r\n      sounds.add(\"emoji yeah\", { volume: sVol });\r\n      sounds.add(\"startup explosion\", { volume: sVol });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"28b00d27d31d5bb1a89f2f95461df103\", \"b527d253099947040f78d2b1e70f06725391e3a1\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    console.log(\"GA\", gameKey, sKey);\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"App\", \"Network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"App\", \"Game\", \"Start\");\r\n    new Game();\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, level: string, score?:number, customs?:{[id: string]: any}) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"world\", \"stage\", level, score, customs);\r\n    /*gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });*/\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    /*gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });*/\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    /*gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });*/\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}