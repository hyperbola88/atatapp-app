{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","skullType","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","floor","permanentSkull","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","skullMeter","savedType","kinematic","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","Text","toString","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","random","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","getTexture","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","prizeIcon","okBut","Emitter","won","conditions","callback","level","prizes","log","prize","powerupDone","showed","round","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","words","Expo","h","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","waitForOver","activeBonus","None","randomBodiesPositions","nextType","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MapState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","time","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","clearActiveBlocks","stopBonuses","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","KINEMATIC","velocity","goalType","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","moveBalls","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","startRocket","rocket","Skulls","next","generateActiveBlock","tempActive","tempNext","toLocal","eventData","global","draw","lp","switchBlockes","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","skullsIds","includes","onGameOver","createBottomExit","obstacle","Static","Random","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","ChatItem","message","grey","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","scoreS","calculateStars","repeat","content","Logo","face","logo","Elastic","MenuState","playBtn","onPlayClicked","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","gameOver","inst","instB","changePosition","setSkull","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.a5f9c809233a61c4298a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([202,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251 || this.type === CircleBlock.skullType);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public static skullType = 3000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.skullType;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.skullType && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.type = this.savedType;\r\n                this.savedType = -1;\r\n                this.view.texture = Texture.from(`${this.type}.png`);\r\n            }\r\n        }\r\n        \r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        this.type = CircleBlock.skullType;\r\n        this.view.texture = Texture.from(`${this.type}.png`);\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.BALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS | ECollisionGroups.MOVER;\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n    }\r\n    private async onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            await setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 300;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -340;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public async show(won: boolean, score: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | undefined) {\r\n        console.log(level.toString(), prizes);\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes ? prizes[0] : undefined;\r\n        if (prize !== undefined && score >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonuses && bonuses.length > 0) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { MapState } from \"./MapState\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: this.bottomOpenWall && this.levelId === 13 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MapState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | undefined {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.levelFinished.show(true, this.score, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                amount += b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType() {\r\n        if (this.obstacles.filter(o => o.type === EObstacle.Skulls).length > 0 && Math.random() < 0.01) {\r\n            return CircleBlock.skullType;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        //if (this.mousePressed) {\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            this.preview.draw(p);\r\n        //}\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.skullType;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver, this);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver, this);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, undefined);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(20, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(20, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\nimport { calculateStars } from \"../Game\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"LEVELS:\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            let stars = undefined;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            stars = 3;\r\n            const disabled = i !== 0 && stars === undefined;\r\n            let text = \"\";\r\n            if (i === 0 && stars === 0) {\r\n                text = \"Let's start from here. Tap to play.\";\r\n            } else if (disabled) {\r\n                text = \"...\";\r\n            } else if (stars === 0) {\r\n                text = \"This is a good level to play today.\";\r\n            } else {\r\n                text = \"The level is completed: \" + (\"★ \".repeat(stars));\r\n            }\r\n            const item = new ChatItem(i, data.name, text, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.okBtn = undefined;\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new ComicsState());\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(ComicsState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type) && instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        this.gameOver();\r\n        return;\r\n      }\r\n\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type) && instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type && instanceA.type !== CircleBlock.skullType) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else if (instB.type === CircleBlock.skullType) {\r\n            inst.setSkull();\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              (instanceB.type === 251) ? (instanceB as any).changePosition() : (instanceA as any).changePosition();\r\n          } else if ((instanceA.kinematic && instanceB.type === CircleBlock.skullType) ||\r\n          (instanceB.kinematic && instanceA.type === CircleBlock.skullType)) {\r\n            (instanceB.type === CircleBlock.skullType) ? instanceA.setSkull() : instanceB.setSkull();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected gameOver() {\r\n    (stateManager.activeState as GameViewState).onGameOver();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}