{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/game/AnyBlock.ts","webpack:///./game/states/game/ScoreItem.ts","webpack:///./game/states/game/ScorePool.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","amount","Math","floor","random","playing","toString","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","Material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","rotateView","angle","customLogic","hide","preCleanUnused","cleanUnusedBobies","postCleanUnused","removeBody","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","skullType","anyType","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","permanentSkull","createBody","DYNAMIC","view2","createView2","_kinematic","sensorShape","Circle","radius","getRadius","sensor","gravityScale","updateMassProperties","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","getTexture","getTexture2","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","oldSteps","max","sameColorNeighbors","size","k","cos","sin","scaleFactor","updateBoundingRadius","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","goalType","kill","delayedCall","emit","resetDeathCounter","PowerupButton","Text","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","RainbowType","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","EMPTY","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","timeBonusTxt","heart","h1","h2","stars","star","prizeIcon","okBut","Emitter","won","time","conditions","callback","level","prizes","idealTime","timeBonus","round","log","prize","None","powerupDone","showed","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","bonusesExist","words","Expo","h","tween","PausePopup","xBut","exit","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","abs","AnyBlock","reGenerateTextures","currentIcon","ScoreItem","EBonus","EObstacle","ScorePool","prepareTextures","scorePool","allScore","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","rainbowType","waitForOver","activeBonus","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","levelStartTime","Date","getTime","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","positions","startPosition","addScoreItem","BALL_SCORE","fireMissle","EXPLOSION_SCORE","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","obtain","addScore","release","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopAllScores","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","isGoal","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","rocket","createCircle","forActive","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","includes","onGameOver","createBottomExit","obstacle","Static","Random","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","ret","other","increaseBlocks","hitTest","evt","bodyA","bodyB","instanceA","instanceB","sameType","getEnd","levelComplete","getBlockByRocket","rainbow","getRainbow","notRainbow","correctType","skull","getSkullByGoal","heartDeath","wasAnyAndSkull","shapeA","shapeB","vec2","distance","previousPosition","playRandom","kinematicInstance","getKinematic","otherInstance","enableGravity","changePosition","nonKinematic","randomObstacle","getRandomObstacle","getKinematicBySkull","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","playBtn","onPlayClicked","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","physicsOnly","timeScale","Game","skip","activeState","endContact","beginContact","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","KINEMATIC","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.0c44cbc9afa29096de29.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public playRandom(name: string, amount: number, checkPlaying: boolean = true) {\r\n        const r = Math.floor(Math.random()*amount);\r\n        let playing = false;\r\n        for (let i = 0; i < amount; i++) {\r\n            if (this.all[name + i.toString()].playing()) {\r\n                playing = true; \r\n                break;\r\n            }\r\n        }\r\n        if (!playing) {\r\n            this.play(name + r.toString());\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\nexport interface ICleanUnusedParams{\r\n  step: number;\r\n  other: any;\r\n}\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: new Material(),\r\n    bounceMaterial: new Material(),\r\n    activeBallMaterial: new Material(),\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                if ((sprite as any).rotateView) {\r\n                  (sprite as any).rotateView(body.angle);\r\n                } else {\r\n                  sprite.rotation = body.angle;\r\n                }\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        const params = this.preCleanUnused(step);\r\n        this.cleanUnusedBobies();\r\n        this.postCleanUnused(params);\r\n    }\r\n    protected cleanUnusedBobies() {\r\n      unusedBodies.forEach((body) => world.removeBody(body));\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n    protected abstract preCleanUnused(step: number): ICleanUnusedParams;\r\n    protected abstract postCleanUnused(params: ICleanUnusedParams);\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body?: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251 || this.type === CircleBlock.skullType || this.type === CircleBlock.anyType);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static BALL_SCORE = 5;\r\n    public static BONUS_SCORE = 100;\r\n    public static EXPLOSION_SCORE = 50;\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public static skullType = 3000;\r\n    public static rainbowType = 4000;\r\n    public static anyType = 5000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    protected view2: Sprite;\r\n    public steps = 1;\r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.skullType;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        this.view2 = this.createView2();\r\n        this.view2.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view2);\r\n    }\r\n    public rotateView(angle: number) {\r\n        this.view.rotation = angle;\r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body?.addShape(this.sensorShape);\r\n    }\r\n    public enableGravity() {\r\n        if (!this.body) return;\r\n        this.body.gravityScale = 1;\r\n        this.body.mass = 5;\r\n        this.body.updateMassProperties();\r\n        this.shape.material = gameSettings.material;\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.killTweensOf(this.view2.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.skullType && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.skullType;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        if (this.body) this.body.gravityScale = 1;\r\n        this.type = CircleBlock.skullType;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.view2.visible = true;\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.view2.visible = false;\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected getTexture2() {\r\n        return Texture.from(`${this.type}_.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    protected createView2() {\r\n        const v = new Sprite(this.getTexture2());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        const oldSteps = this.steps;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            if (oldSteps < 2) {\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                gsap.to(this.view2.scale, {x: 0, y: 0, duration: 0.2});\r\n            } else {\r\n                let radius = this.view.width / 2;\r\n                let a = 0;\r\n                gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.3, onUpdate: ()=> {\r\n                    this.view.position.set(Math.cos(a)*radius, Math.sin(a)*radius);\r\n                    a += Math.PI/15;\r\n                    radius -= 1;\r\n                }, onComplete: ()=> {\r\n                    this.clean();\r\n                }});\r\n                this.view2.scale.set(0,0);\r\n            }\r\n            \r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n            gsap.to(this.view2.scale, {x: i, y: i, duration: 0.2});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body?.updateBoundingRadius();\r\n        this.body?.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        if (this.body) {\r\n            this.body.mass = 0;\r\n            this.body.angle = DEG_TO_RAD * rot;\r\n        }\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.BALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS | ECollisionGroups.MOVER;\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                if (this.body) this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay?: gsap.core.Tween;\r\n    constructor(x: number, y: number) {\r\n        super(x, y, CircleBlock.goalType, true);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n        this.view2.texture = Texture.from(`3001_.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    protected createView2() {\r\n        return new Sprite(this.getTexture2());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`hero_.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = true;//await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    public isFrozen: boolean;\r\n    private delay?: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items: BonusIntroLetter[] = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                if (item) {\r\n                    items.push(item);\r\n                    item.visible = true;\r\n                    item.letter = this.stringLetters[i];\r\n                    item.position.set(-400, 700);\r\n                    item.scale.set(0.1, 0.1);\r\n                    item.angle = angle - 30;\r\n                    gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                    gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                    if (this.stringLetters[i] === \" \") {\r\n                        counter++;\r\n                        angle = -30;\r\n                        currentLength = amounts[counter];\r\n                        dAngle = 60 / (currentLength - 1);\r\n                        w = stepX * currentLength;\r\n                        x = -w*0.5;\r\n                        y += stepY;\r\n                        dx = w / (currentLength - 1);\r\n                    } else {\r\n                        angle += dAngle;\r\n                        x += dx;\r\n                    }\r\n                }\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[] | undefined;  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr: Rectangle[] = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect?: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.laser.height = 500;\r\n        this.laser.rotation = Math.PI / 2;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound() {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint !== undefined || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 1, duration: 0.2 });\r\n                    gsap.delayedCall(0.2, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.2 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.2 });\r\n                        gsap.delayedCall(0.2, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body?.updateBoundingRadius();\r\n            this.body?.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                if (this.body) this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body?.updateBoundingRadius();\r\n                    this.body?.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n    RainbowType = \"rainbowtype\"\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n        this.textMap.set(ETutorial.RainbowType, \"This ball is destroying everything!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        if (!text) return;\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 80, this.txt.height + 80);\r\n        this.tutorial.width = this.txt.width + 80;\r\n        this.tutorial.height = this.txt.height + 80;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 150;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 200)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 1, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 20;\r\n            this.iconR0.y += 20;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        const t = this.allTextures.get(k);\r\n        if (t) {\r\n            return t;\r\n        }\r\n        return Texture.EMPTY;\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private timeBonusTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    private heart: Container;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -310;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 80;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.timeBonusTxt = new Text(\"+ Time Bonus!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x5f40e3, align: \"center\"})\r\n        this.timeBonusTxt.anchor.set(0.5, 0.5);\r\n        this.popup.addChild(this.timeBonusTxt);\r\n        this.timeBonusTxt.visible = false;\r\n\r\n        this.heart = new Container();\r\n        \r\n        const h1 = new Sprite(Texture.from(\"hero.png\"));\r\n        h1.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h1);\r\n        const h2 = new Sprite(Texture.from(\"hero_.png\"));\r\n        h2.anchor.set(0.5, 0.5);\r\n        this.heart.addChild(h2);\r\n\r\n        this.heart.scale.set(1.3, 1.3);\r\n        this.heart.position.y = -1000;\r\n        this.addChild(this.heart);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles!);\r\n    }\r\n    public async show(won: boolean, score: number, time: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | EIAPBonus.None) {\r\n        this.timeBonusTxt.visible = false;\r\n        this.heart.position.y = -1000;\r\n        this.heart.alpha = 1;\r\n        const {idealTime} = gameSettings.levels[level];\r\n        const timeBonus = (won && time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n        console.log(level.toString(), prizes, time, timeBonus);\r\n        //score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes !== EIAPBonus.None ? prizes[0] : EIAPBonus.None;\r\n        if (prize !== EIAPBonus.None && score + timeBonus >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        const onUpdate = ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate, onComplete: ()=> {\r\n            o.s = score;\r\n            if (timeBonus > 0) {\r\n                score += timeBonus;\r\n                this.timeBonusTxt.visible = true;\r\n                this.timeBonusTxt.scale.set(5,5);\r\n                gsap.to(this.timeBonusTxt.scale, {x: 1, y: 1, duration: 0.5, onComplete: ()=> {\r\n                    gsap.to(o, {s: score, duration: 1, onUpdate});\r\n                }});\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.to(this.heart, {y: -410, delay: 1, duration: 1.5, ease: Bounce.easeOut});\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.heart, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses: EIAPBonus[] | EIAPBonus.None) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const bonusesExist = bonuses !== EIAPBonus.None;\r\n            const delay = (bonusesExist) ? 3 : 1.4;\r\n            const introTime = 0.2;\r\n            gsap.to(this.back, {alpha: 0.7, duration: introTime});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: introTime});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop()!;\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 0.5, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - introTime, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n            \r\n            if (bonusesExist) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 0.6, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - introTime, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonusesExist) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback?: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        if (this.callback) this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part0 = Sprite.from(Texture.WHITE);\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        // this.part1 = Sprite.from(Texture.WHITE);\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n\r\n        // this.part0.tint = 0;\r\n        // this.part1.tint = 0;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * (boundX) / Math.cos(angle);\r\n            xx = (d)*Math.cos(angle);\r\n            yy = (d)*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d + 8;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class AnyBlock extends CircleBlock {\r\n    private currentIcon: number;\r\n    private temp:number;\r\n    constructor(x: number, y: number, create: boolean) {\r\n        super(x, y, CircleBlock.anyType, create);\r\n        this.reGenerateTextures();\r\n    }\r\n    private reGenerateTextures() {\r\n        if (!this.currentIcon) {\r\n            this.currentIcon = 1;\r\n        } else {\r\n            this.currentIcon++;\r\n        }\r\n        if (this.currentIcon > 7) {\r\n            this.currentIcon = 1;\r\n        }\r\n        this.view.texture = this.getTexture();\r\n        this.view2.texture = this.getTexture2();\r\n        this.temp = 0;\r\n        gsap.to(this, {temp: 1, duration: 0.15, onComplete: ()=> {\r\n            this.reGenerateTextures();\r\n        }});\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`${this.currentIcon || 1}.png`);\r\n    }\r\n    override getTexture2() {\r\n        return Texture.from(`${this.currentIcon || 1}_.png`);\r\n    }\r\n    override clean() {\r\n        gsap.killTweensOf(this);\r\n        super.clean();\r\n    }\r\n}","import gsap, {Expo} from \"gsap\";\r\nimport { Container, Text } from \"pixi.js\";\r\n\r\nexport class ScoreItem extends Container {\r\n    private txt: Text;\r\n    private score: number;\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 40, fill: 0x3e2996, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public start(x: number, y: number, score: number) {\r\n        this.score = score;\r\n        this.txt.text = \"+\" + score.toString();\r\n        this.x = x;\r\n        this.y = y;\r\n        gsap.to(this, {x: 0, y: -700, duration: 0.7, delay: Math.random()*0.15, ease: Expo.easeIn, onComplete: ()=> {\r\n            this.finish();\r\n        }});\r\n    }\r\n    public finish() {\r\n        gsap.killTweensOf(this);\r\n        this.emit(\"done\", this.score);\r\n    }\r\n    public clean() {\r\n        gsap.killTweensOf(this);\r\n        this.off(\"done\");\r\n        this.score = 0;\r\n        this.alpha = 1;\r\n        this.txt.text = \"\";\r\n    }\r\n}","import { ScoreItem } from \"./ScoreItem\";\r\n\r\nexport class ScorePool {\r\n    private all: ScoreItem[];\r\n    constructor(amount: number) {\r\n        this.all = [];\r\n        for (let i = 0; i < amount; i++) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n    }\r\n    public obtain(): ScoreItem {\r\n        if (this.all.length === 0) {\r\n            this.all.push(new ScoreItem());\r\n        }\r\n        return this.all.pop()!;\r\n    }\r\n    public release(b: ScoreItem) {\r\n        b.clean();\r\n        this.all.push(b);\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, ICleanUnusedParams, METER_SIZE, stateManager, unusedBodies, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport p2, { Body, vec2 } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\nimport { AnyBlock } from \"./game/AnyBlock\";\r\nimport { ScorePool } from \"./game/ScorePool\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { ScoreItem } from \"./game/ScoreItem\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall?: StaticBlock;\r\n    private activeBlock?: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType?: number;\r\n    private nextBlock?: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus?: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock?: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay?: gsap.core.Tween;\r\n    private scorePool: ScorePool;\r\n    private increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\n    private explodePoints: [number, number][] = [];\r\n    private allScore: Map<ScoreItem, boolean>;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.scorePool = new ScorePool(80);\r\n        this.allScore = new Map<ScoreItem, boolean>();\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && !!position && position.y < -100, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: !!this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position && position.x < -10) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 5 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: !!this.bottomOpenWall && this.levelId === 12 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.anyType, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.RainbowType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: !!this.bottomOpenWall && this.powerup1.visible && this.levelId > 8 && this.nextType === CircleBlock.rainbowType, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.allScore.clear();\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MenuState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | EIAPBonus.None {\r\n        if (!this.currentLevelData.iaps) {\r\n            return EIAPBonus.None;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    private unusedBlocksRemoved(positions: ObservablePoint[]) {\r\n        if (this.isTransition) return;\r\n        const startPosition = positions[Math.floor(Math.random() * positions.length)];\r\n        const amount = positions.length;\r\n        positions.forEach((p)=> {\r\n            this.addScoreItem(p.x, p.y, CircleBlock.BALL_SCORE);\r\n        });\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                this.addScoreItem(startPosition.x, startPosition.y, CircleBlock.EXPLOSION_SCORE);\r\n            }\r\n        }\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    public addScoreItem(x:number, y:number, score: number) {\r\n        const item = this.scorePool.obtain();\r\n        this.allScore.set(item, true);\r\n        this.fxContainer.addChild(item);\r\n        item.on(\"done\", (s)=> {\r\n            this.addScore(s);\r\n            this.scorePool.release(item);\r\n            this.allScore.delete(item);\r\n        });\r\n        item.start(x, y, score);\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        //this.addScore(100);\r\n        let getPoint: (() => any) | undefined = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                this.explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.15, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        if (this.activeBlock) gsap.killTweensOf(this.activeBlock);\r\n        if (this.nextBlock) gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      private stopAllScores() {\r\n        this.allScore.forEach((value, key)=> {\r\n            key.finish();\r\n        });\r\n      }\r\n      private levelComplete() {\r\n          this.stopAllScores();\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (!this.goalBlock || this.goalBlock && this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body!.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body!.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock | undefined = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks: Body[] = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                /*if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else */\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    //body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                    //body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && !(body as any).userData.isGoal()) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.isGoal() ) {\r\n                goal = (body as any).userData as GoalBlock;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = new Date().getTime() - this.levelStartTime;\r\n            this.levelFinished.show(true, this.score, time, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            const positions:ObservablePoint[] = [];\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                positions.push(b.position);\r\n                const s = b.boom(false);\r\n                //if (s > 0) this.addScoreItem(b.position.x, b.position.y, s);\r\n                amount += s;\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            this.unusedBlocksRemoved(positions);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (!this.currentLevelData.score || this.score > this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n                this.levelStartTime = new Date().getTime();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                gsap.delayedCall(1,()=> {\r\n                    this.shakeScreen();\r\n                })\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        if (type === -1) {\r\n            this.nextBlock = this.createCircle(-90, 40, this.nextType, false);\r\n        } else {\r\n            this.nextBlock = this.createCircle(-90, -20, this.nextType, false);\r\n        }\r\n        \r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            //this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {y: -20, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.levelId > 9 && Math.random() < 0.1) {\r\n            return (Math.random() < 0.5) ? CircleBlock.anyType : CircleBlock.rainbowType;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        if (next === -1) {\r\n            this.activeBlock = this.createCircle(-90, GameViewState.BottomPoint+35, this.nextType, false);\r\n        } else {\r\n            this.activeBlock = this.createCircle(0, GameViewState.BottomPoint, this.nextType, false);\r\n        }\r\n        \r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.set(0, GameViewState.BottomPoint);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            //this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {x: 0, y: GameViewState.BottomPoint, duration: 0.15});\r\n            gsap.to(this.preview, {alpha: 0.6, duration: 0.15});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock?.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            if (this.nextBlock) gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            if (this.activeBlock) {\r\n                gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            } else {\r\n                gsap.to({a:0}, {a: 1, duration: 0.2, onComplete: ()=> {resolve();}});\r\n            }\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        if (a.body) {\r\n            a.body.gravityScale = 0;\r\n            a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n            //a.body.type = Body.KINEMATIC;\r\n            //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        }\r\n        \r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = this.createCircle(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount!;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.skullType;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = this.createCircle(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = this.createCircle(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver, this);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = this.createCircle(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver, this);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle | undefined = undefined;\r\n        if (obstacle.position) {\r\n            switch(obstacle.type) {\r\n                case EObstacle.Static:\r\n                    o = new StaticObstacle(obstacle.position);\r\n                    break;\r\n                case EObstacle.Random:\r\n                    o = new RandomObstacle(obstacle.position, obstacle.lives!);\r\n                    break;\r\n            }\r\n        }\r\n        if (o) {\r\n            this.gameContainer.addChild(o);\r\n            this.obstacles.push(o);\r\n        }\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, EIAPBonus.None);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n    private createCircle(x: number, y: number, type: number, create: boolean = true) {\r\n        if (type === CircleBlock.goalType) {\r\n            return new GoalBlock(x, y);\r\n        } else if (type === CircleBlock.anyType) {\r\n            return new AnyBlock(x, y, create);\r\n        }\r\n        return new CircleBlock(x, y, type, create);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n    //PRE/POST UNUSED REMOVAL\r\n    public preCleanUnused(step: number): ICleanUnusedParams {\r\n        const ret: ICleanUnusedParams = {\r\n            step,\r\n            other: {\r\n              amount: 0,\r\n              positions: []\r\n            }\r\n          }\r\n        ret.other.amount = unusedBodies.length;\r\n        this.update(step);\r\n        if (ret.other.amount > 0) {\r\n            unusedBodies.forEach((body)=> {\r\n                ret.other.positions.push(((body as any).userData as CircleBlock).position);\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    public postCleanUnused(params: ICleanUnusedParams) {\r\n        this.increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n        this.increaseBlocks = [];\r\n\r\n        this.explodePoints.forEach((pos) => {\r\n            const bodies = world.hitTest(pos, world.bodies, 0);\r\n            if (bodies && bodies.length > 0) {\r\n                const block = (bodies[0] as any).userData as CircleBlock;\r\n                if (block && block instanceof CircleBlock && block.type !== CircleBlock.goalType) {\r\n                    params.other.amount += block.boom();\r\n                }\r\n                bodies.forEach((b)=> {\r\n                    const block = (b as any).userData as CircleBlock;\r\n                    params.other.positions.push(block.position);\r\n                });\r\n            }\r\n        });\r\n        if (params.other.amount > 0) {\r\n            this.unusedBlocksRemoved(params.other.positions);\r\n        }\r\n        this.explodePoints = [];\r\n      }\r\n    //CONTACTS\r\n    private static sameType (instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return (instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) &&\r\n        instanceA.type !== 0 && instanceB.type !== 0 && \r\n        instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType && \r\n        instanceA.type !== 250 && instanceB.type !== 250 && \r\n        instanceA.type !== 251 && instanceB.type !== 251 && \r\n        instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType;\r\n    }\r\n    private static getRainbow(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA.type === CircleBlock.rainbowType || instanceB.type === CircleBlock.rainbowType)\r\n        {\r\n            if (instanceA.type === CircleBlock.rainbowType) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getEnd(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.endType) ||\r\n            (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.endType))\r\n        {\r\n            if (instanceA.type === CircleBlock.endType) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getSkullByGoal(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if ((instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.skullType) ||\r\n            (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.skullType))\r\n        {\r\n            if (instanceA.type === CircleBlock.skullType) {\r\n                return instanceA;\r\n            } else {\r\n                return instanceB;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static wasAnyAndSkull(instanceA: PhysicsSprite, instanceB: PhysicsSprite): boolean {\r\n        return  (instanceA.type === CircleBlock.anyType && instanceB.type === CircleBlock.skullType) ||\r\n                (instanceB.type === CircleBlock.anyType && instanceA.type === CircleBlock.skullType);\r\n    }\r\n    private static getBlockByRocket(instanceA: PhysicsSprite, instanceB: PhysicsSprite): PhysicsSprite | undefined {\r\n        if (instanceA instanceof RocketPowerup && instanceB.correctType() && !instanceB.isGoal()) \r\n        {\r\n            return instanceB;\r\n        } \r\n        else if (instanceB instanceof RocketPowerup && instanceA.correctType() && !instanceA.isGoal()) \r\n        {\r\n            return instanceA;\r\n        } else \r\n        {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getKinematic(instanceA: PhysicsSprite, instanceB: PhysicsSprite): CircleBlock | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceA.type !== 0) {\r\n            return instanceA;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceB.type !== 0) {\r\n            return instanceB\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    private static getRandomObstacle(instanceA: PhysicsSprite, instanceB: PhysicsSprite): RandomObstacle | undefined {\r\n        if (instanceA instanceof CircleBlock && instanceA.kinematic && instanceB instanceof RandomObstacle && instanceB.type === 251)\r\n        {\r\n            return instanceB;\r\n        } else if (instanceB instanceof CircleBlock && instanceB.kinematic && instanceA instanceof RandomObstacle && instanceA.type === 251) {\r\n            return instanceA;\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    private static getKinematicBySkull(instanceA: CircleBlock, instanceB: CircleBlock): CircleBlock | undefined {\r\n        if (instanceA.kinematic && instanceB.type === CircleBlock.skullType) {\r\n            return instanceA;\r\n        } else if (instanceB.kinematic && instanceA.type === CircleBlock.skullType) {\r\n            return instanceB;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    public endContact(evt: p2.EndContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB && instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n            if (GameViewState.sameType(instanceA, instanceB)) \r\n            {\r\n                instanceA.sameColorNeighbors.delete(instanceB);\r\n                instanceB.sameColorNeighbors.delete(instanceA);\r\n            }\r\n        }\r\n    }\r\n    public beginContact(evt: p2.BeginContactEvent) {\r\n        const bodyA: Body = evt.bodyA;\r\n        const bodyB: Body = evt.bodyB;\r\n        const instanceA = (bodyA as any).userData as PhysicsSprite;\r\n        const instanceB = (bodyB as any).userData as PhysicsSprite;\r\n        if (instanceA && instanceB) {\r\n            if (GameViewState.getEnd(instanceA, instanceB)) {\r\n                this.levelComplete();\r\n                return;\r\n            }\r\n            if (instanceA instanceof RocketPowerup || instanceB instanceof RocketPowerup) {\r\n                const block = GameViewState.getBlockByRocket(instanceA, instanceB);\r\n                if (block && block instanceof CircleBlock) {\r\n                    block.boom();\r\n                    this.createExplosion(block.position, Math.random()*0.15);\r\n                    this.addScoreItem(block.position.x, block.position.y, CircleBlock.BALL_SCORE);\r\n                }\r\n            }\r\n            const rainbow = GameViewState.getRainbow(instanceA, instanceB);\r\n            if (rainbow) {\r\n                const notRainbow = (rainbow === instanceA) ? instanceB : instanceA;\r\n                if (notRainbow instanceof CircleBlock && notRainbow.correctType() && notRainbow.type !== 250 && notRainbow.type !== 251) {\r\n                    notRainbow.boom();\r\n                    this.createExplosion(notRainbow.position, Math.random()*0.15);\r\n                    this.addScoreItem(notRainbow.position.x, notRainbow.position.y, CircleBlock.BALL_SCORE);\r\n                } else if (rainbow instanceof CircleBlock && (notRainbow.type === 0 || notRainbow.type === CircleBlock.endType || notRainbow.type === 250 || notRainbow.type === 251)) {\r\n                    rainbow.boom();\r\n                    this.createExplosion(rainbow.position, Math.random()*0.15);\r\n                }\r\n            }\r\n            const skull = GameViewState.getSkullByGoal(instanceA, instanceB) as CircleBlock;\r\n            if (skull) {\r\n                skull.boom();\r\n                this.heartDeath();\r\n                return\r\n            }\r\n            \r\n            if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                if (GameViewState.sameType(instanceA, instanceB)) {\r\n                    instanceA.sameColorNeighbors.set(instanceB, true);\r\n                    instanceB.sameColorNeighbors.set(instanceA, true);\r\n                }\r\n\r\n                if (GameViewState.wasAnyAndSkull(instanceA, instanceB)) {\r\n                    this.addScoreItem(instanceA.position.x, instanceA.position.y, CircleBlock.BALL_SCORE);\r\n                    instanceA.boom();\r\n                    instanceB.boom();\r\n                    return;\r\n                }\r\n            }\r\n            //no shapes\r\n            if (!(evt.shapeA as any).data || !(evt.shapeB as any).data) return;\r\n\r\n            if (vec2.distance(evt.bodyA.position, evt.bodyA.previousPosition) * METER_SIZE > 0.5 || \r\n                vec2.distance(evt.bodyB.position, evt.bodyB.previousPosition) * METER_SIZE > 0.5) {\r\n                sounds.playRandom(\"ball hit \", 3);\r\n            }      \r\n                    \r\n            //main logic\r\n            if (instanceA && instanceB) {\r\n                const kinematicInstance = GameViewState.getKinematic(instanceA, instanceB);\r\n                if (kinematicInstance && kinematicInstance.body) {\r\n                    const otherInstance = (kinematicInstance === instanceA) ? instanceB : instanceA;\r\n                    kinematicInstance.enableGravity();\r\n                    if (otherInstance instanceof RandomObstacle && otherInstance.type === 251) {\r\n                        otherInstance.changePosition();\r\n                        this.addScoreItem(otherInstance.position.x, otherInstance.position.y, CircleBlock.BALL_SCORE);\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    } else if (otherInstance.type === 250) {\r\n                        this.shakeScreen(Math.random() < 0.5);\r\n                    }\r\n                    if (instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType) {\r\n                        if (GameViewState.sameType(instanceA, instanceB) &&\r\n                            instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                                instanceA.kinematic = false;\r\n                                instanceB.kinematic = false;\r\n                                instanceA.enableGravity();\r\n                                instanceB.enableGravity();\r\n                                const steps = kinematicInstance.steps;\r\n                                kinematicInstance.animateAndDestroy();\r\n                                this.increaseBlocks.push({\r\n                                    block: kinematicInstance === instanceA ? instanceB : instanceA,\r\n                                    steps,\r\n                                });\r\n                        } else if (otherInstance.type === CircleBlock.skullType) {\r\n                            kinematicInstance.setSkull();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (instanceA instanceof CircleBlock && instanceA.kinematic) {\r\n                        instanceA.enableGravity();\r\n                    } \r\n                    if (instanceB instanceof CircleBlock && instanceB.kinematic) {\r\n                        instanceB.enableGravity();\r\n                    }\r\n\r\n                    if (instanceA.type === CircleBlock.goalType || instanceB.type === CircleBlock.goalType) return;\r\n                    if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock &&\r\n                        GameViewState.sameType(instanceA, instanceB) && (instanceA.steps !== instanceB.steps || instanceA.kinematic || instanceB.kinematic)) \r\n                    {\r\n                        const kinematic = (instanceA.kinematic) ? instanceA : instanceB;\r\n                        const nonKinematic = (kinematic === instanceA) ? instanceB : instanceA;\r\n                        kinematic.kinematic = false;\r\n                        nonKinematic.kinematic = false;\r\n                        if (kinematic.body) {\r\n                            kinematic.body.gravityScale = 1;\r\n                        }\r\n                        if (nonKinematic.body) {\r\n                            nonKinematic.body.gravityScale = 1;\r\n                        }\r\n                        \r\n                        const steps = kinematic.steps;\r\n                        kinematic.animateAndDestroy();\r\n                        this.increaseBlocks.push({ block: nonKinematic, steps });\r\n                    }\r\n                    else \r\n                    {\r\n                        const randomObstacle = GameViewState.getRandomObstacle(instanceA, instanceB);\r\n                        if (randomObstacle) {\r\n                            this.shakeScreen(Math.random() < 0.5);\r\n                            randomObstacle.changePosition();\r\n                            this.addScoreItem(randomObstacle.position.x, randomObstacle.position.y, CircleBlock.BALL_SCORE);\r\n                        } else if (instanceA instanceof CircleBlock && instanceB instanceof CircleBlock) {\r\n                            const skull = GameViewState.getKinematicBySkull(instanceA, instanceB);\r\n                            if (skull) {\r\n                                skull.setSkull();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n        this.createMapItems();\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i ===0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"left\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"right\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(data.name,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, ICleanUnusedParams, stateManager, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.4 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.endContact(evt);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      if (stateManager.activeState instanceof GameViewState) {\r\n        stateManager.activeState.beginContact(evt);\r\n      }\r\n    });\r\n  }\r\n  protected preCleanUnused(step: number): ICleanUnusedParams {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      return state.preCleanUnused(step);\r\n    } else {\r\n      return {step, other: undefined}\r\n    }\r\n  }\r\n  protected postCleanUnused(params: ICleanUnusedParams) {\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (state && state instanceof GameViewState) {\r\n      state.postCleanUnused(params);\r\n    }\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      sounds.add(\"ball hit 0\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 1\", { volume: 0.4 });\r\n      sounds.add(\"ball hit 2\", { volume: 0.4 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}