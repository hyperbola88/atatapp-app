{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","ECollisionGroups","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","skullType","anyType","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","floor","permanentSkull","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","gravityScale","getTexture","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","size","k","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","Text","toString","fontFamily","fontSize","fill","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","text","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","random","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","AnyType","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","prizeIcon","okBut","Emitter","won","time","conditions","callback","level","prizes","idealTime","timeBonus","round","log","prize","powerupDone","showed","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","words","Expo","h","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","nextType","waitForOver","activeBonus","None","randomBodiesPositions","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","levelStartTime","Date","getTime","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","activeBlockDelay","clearActiveBlocks","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","horizontal","yoyo","repeat","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","goalType","isGoal","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","shakeScreen","startRocket","rocket","forActive","next","generateActiveBlock","tempActive","tempNext","lp","toLocal","eventData","global","draw","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","Skulls","skullsIds","includes","onGameOver","createBottomExit","obstacle","Static","Random","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","heart","playBtn","onPlayClicked","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","skip","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","heartDeath","inst","instB","changePosition","shake","activeState","noState","hitTest","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","KINEMATIC","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.1a50b964c84788f3fa8e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    bounceMaterial: undefined,\r\n    activeBallMaterial: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251 || this.type === CircleBlock.skullType || this.type === CircleBlock.anyType);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public static skullType = 3000;\r\n    public static anyType = 4000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.skullType;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.skullType && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.skullType;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        this.body.gravityScale = 1;\r\n        this.type = CircleBlock.skullType;\r\n        this.view.texture = Texture.from(`${this.type}.png`);\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.BALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS | ECollisionGroups.MOVER;\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n        this.txt.text = this.amount.toString();\r\n    }\r\n    private onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = true;//await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n    AnyType = \"anytype\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n        this.textMap.set(ETutorial.AnyType, \"This ball is matching with any emoji!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 300;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -340;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public async show(won: boolean, score: number, time: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | undefined) {\r\n        \r\n        const {idealTime} = gameSettings.levels[level];\r\n        const timeBonus = (won && time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n        console.log(level.toString(), prizes, time, timeBonus);\r\n        score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes ? prizes[0] : undefined;\r\n        if (prize !== undefined && score >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonuses && bonuses.length > 0) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n    private activeBlockDelay: gsap.core.Tween;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: this.bottomOpenWall && this.levelId === 13 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.AnyType, () => {\r\n            const position = {x: -100, y: GameViewState.BottomPoint + 20};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId > 9 && this.nextType === CircleBlock.anyType, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MenuState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | undefined {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        //console.log(\"clear\",this.nextBlock,this.activeBlock);\r\n        if (this.activeBlockDelay) {\r\n            this.activeBlockDelay.kill();\r\n        }\r\n        gsap.killTweensOf(this.activeBlock);\r\n        gsap.killTweensOf(this.nextBlock);\r\n        gsap.killTweensOf(this.preview);\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public shakeScreen(horizontal = false) {\r\n        if (!horizontal) {\r\n            gsap.to(this, {y:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {y:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        } else {\r\n            gsap.to(this, {x:\"+5\", yoyo: true, repeat: 3, duration: 0.05});\r\n            gsap.to(this, {x:\"-5\", yoyo: true, repeat: 3, duration: 0.05});\r\n        }\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                /*if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else */\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    //body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                    //body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.isGoal() ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = new Date().getTime() - this.levelStartTime;\r\n            this.levelFinished.show(true, this.score, time, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                amount += b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n                this.levelStartTime = new Date().getTime();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                gsap.delayedCall(1,()=> {\r\n                    this.shakeScreen();\r\n                })\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType(true);\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType(forActive = false) {\r\n        if (forActive && this.levelId > 9 && Math.random() < 0.02) {\r\n            return CircleBlock.anyType;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType(true);\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        const lp = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.preview.draw(lp);\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    \r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        a.body.gravityScale = 0;\r\n        a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n        //a.body.type = Body.KINEMATIC;\r\n        //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.activeBlockDelay = gsap.delayedCall(0.4, ()=> {\r\n            this.activeBlockDelay = undefined;\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.skullType;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver, this);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver, this);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, undefined);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        back.tint = 0xDDDDDD;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -90;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`like.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.6);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 90;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 || id === 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = id !== 0 && stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: Button;\r\n    private right: Button;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n        this.createMapItems();\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = i ===0 || stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.left.position.set(-240, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.right.position.set(250, this.activeLevelItem.y+5);\r\n        this.addChild(this.right);\r\n\r\n        this.left.scale.set(0.5, 0.5);\r\n        this.right.scale.set(0.5, 0.5);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"left\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"right\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(data.name,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.okBtn = undefined;\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      // heart + the end\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      // heart + skull\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType && instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.goalType && instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        if (instanceA.type === CircleBlock.skullType) {\r\n          instanceA.boom();\r\n        } else {\r\n          instanceB.boom();\r\n        }\r\n        this.heartDeath();\r\n        return;\r\n      }\r\n      // type Any + skull\r\n      if (\r\n        (instanceA.type === CircleBlock.anyType &&\r\n          instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.anyType &&\r\n          instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        instanceA.boom();\r\n        instanceB.boom();\r\n        return;\r\n      }\r\n      //rocket\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType &&\r\n          !instanceB.isGoal()\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType &&\r\n          !instanceA.isGoal()\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      //no shapes\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      //main logic\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== CircleBlock.goalType && instanceB.type !== CircleBlock.goalType && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body: Body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (instanceA.kinematic && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (instanceB.kinematic && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.gravityScale = 1;\r\n          inst.shape.material = gameSettings.material;\r\n          body.mass = 5;\r\n          body.updateMassProperties();\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n            this.shake();\r\n          } else if (instB.type === 250) {\r\n            this.shake();\r\n          }\r\n          if (instanceA.type === CircleBlock.goalType || instanceB.type === CircleBlock.goalType) return;\r\n          if ((instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType) {\r\n            instanceA.kinematic = false;\r\n            instanceB.kinematic = false;\r\n            instanceA.body.gravityScale = 1;\r\n            instanceB.body.gravityScale = 1;\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else if (instB.type === CircleBlock.skullType) {\r\n            inst.setSkull();\r\n          }\r\n        } else {\r\n          if (instanceA.kinematic) {\r\n            bodyA.gravityScale = 1;\r\n            instanceA.shape.material = gameSettings.material;\r\n            bodyA.mass = 5;\r\n            bodyA.updateMassProperties();\r\n          } else if (instanceB.kinematic) {\r\n            bodyB.gravityScale = 1;\r\n            instanceB.shape.material = gameSettings.material;\r\n            bodyB.mass = 5;\r\n            bodyB.updateMassProperties();\r\n          }\r\n          if (instanceA.type === CircleBlock.goalType || instanceB.type === CircleBlock.goalType) return;\r\n          if (\r\n            (instanceA.type === instanceB.type || instanceA.type === CircleBlock.anyType || instanceB.type === CircleBlock.anyType) && instanceA.type !== 0 && instanceB.type !== 0 && instanceA.type !== 250 && instanceB.type !== 250 && instanceA.type !== 251 && instanceB.type !== 251 && instanceA.type !== CircleBlock.skullType && instanceB.type !== CircleBlock.skullType &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              instanceA.kinematic = false;\r\n              instanceB.kinematic = false;\r\n              if (instanceA.body) {\r\n                instanceA.body.gravityScale = 1;\r\n              }\r\n              if (instanceB.body) {\r\n                instanceB.body.gravityScale = 1;\r\n              }\r\n              \r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              instanceA.kinematic = false;\r\n              instanceB.kinematic = false;\r\n              if (instanceA.body) {\r\n                instanceA.body.gravityScale = 1;\r\n              }\r\n              if (instanceB.body) {\r\n                instanceB.body.gravityScale = 1;\r\n              }\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              if (instanceB.type === 251) {\r\n                this.shake();\r\n                (instanceB as any).changePosition();\r\n              }  else {\r\n                this.shake();\r\n                (instanceA as any).changePosition();\r\n              } \r\n          } else if ((instanceA.kinematic && instanceB.type === CircleBlock.skullType) ||\r\n          (instanceB.kinematic && instanceA.type === CircleBlock.skullType)) {\r\n            (instanceB.type === CircleBlock.skullType) ? instanceA.setSkull() : instanceB.setSkull();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected heartDeath() {\r\n    (stateManager.activeState as GameViewState).heartDeath();\r\n  }\r\n  protected shake() {\r\n    (stateManager.activeState as GameViewState).shakeScreen(Math.random() < 0.5);\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}