{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/BonusPopup.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/RainbowBallBonus.ts","webpack:///./game/states/game/bonuses/CrazyShipBonus.ts","webpack:///./game/states/game/bonuses/AlienBonus.ts","webpack:///./game/states/game/bonuses/MagicBonus.ts","webpack:///./core/ui/IconButton.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/map/ChatItem.ts","webpack:///./game/states/MapState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","messages","material","undefined","BaseGame","options","autoDensity","resolution","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","scaleBack","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","PhysicsSprite","createView","physType","pos","shape","createShape","Body","mass","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","rainbowType","stepsAmount","createBody","DYNAMIC","_kinematic","filters","GlowFilter","quality","outerStrength","sensorShape","Circle","radius","getRadius","sensor","clean","busy","fromBoom","increase","steps","v","max","sameColorNeighbors","k","scaleFactor","onUpdate","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","Explosion","g","Graphics","beginFill","drawCircle","animate","destroy","delay","RocketPowerup","startX","startY","endX","endY","KINEMATIC","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","a","NextBlocksTimer","NineSlicePlane","initialWidth","bar","barMask","mask","bell","AnimatedSprite","animationSpeed","gotoAndStop","isFrozen","seconds","EBonus","BoomMeter","current","min","wasEnd","BonusChooser","align","bonus","CrazySheep","Alien","RainbowBall","Magic","Message","blocks","fontWeight","clear","nextLines","lines","xx","f","addBlock","BaseBonus","Rectangle","RainbowBallBonus","posY","ball","callback","tween","bound","CrazyShipBonus","sheep","random","yy","AlienBonus","getPoint","points","alienRight","alienLeft","arr","point","playDelay","playJump","currentPoint","acid","Expo","splash","copyFrom","MagicBonus","wizard","easeOut","EIAPBonus","IconButton","icon","GameViewState","pad","topBack","menuBtn","MapState","powerup1","id","startPowerup","powerup2","powerupButtons","preview","previewBlocks","line","lineStyle","moveTo","lineTo","nextTimer","boomMeter","bonusChooser","padRect","topRect","levelId","activeBonus","None","randomBodiesPositions","powerups","isTransition","nextType","isActivePowerup","generateLineBlocks","tick","maxY","moving","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","maximum","currentLevelData","addActiveBlock","onClick","onTapStart","Ticker","shared","update","getRandomBonus","setActiveBonus","meterBonus","createRainbowBallBonus","createCrazySheepBonus","createAlienBonus","createMagicBonus","args","doActionMeterBonus","clearMeterBonus","getRandomType","block","boom","bonuses","floor","missle","atan2","time","createExplosion","explodePoints","nextBlock","activeBlock","clearActiveBlocks","stopBonuses","bottomOpenWall","animateAndDestroy","moveBox","staticBox","mousePressed","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","velocity","BottomPoint","goalType","contains","moveToNextLevel","createMoveWalls","freeze","generateNewBlocks","unFreeze","startCountDeath","setProgress","moveBalls","stars","startVerticalRocket","startHorizontalRocket","startRocket","h","rocket","next","kinematic","generateActiveBlock","tempActive","tempNext","centerY","toLocal","eventData","global","cos","sin","abs","lp","switchBlockes","setLines","startAmount","onGameOver","createBottomExit","MenuState","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","remove","goOut","ChatItem","message","grey","pic","txt1","scrollbox","Scrollbox","boxWidth","boxHeight","parseInt","item","repeat","content","removeChildren","Logo","explosion","face","logo","Elastic","Bounce","playBtn","onPlayClicked","stop","shouldPlayFirstAds","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","Game","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","inst","activeState","updateBoomMeter","small","middle","fireMissle","wasRainbow","hitTest","startLoading","loader","onProgress","onError","url","resources","startAfterLoading","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","log","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj"],"mappings":"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","file":"bundle.ccc2f25c9063f8c89412.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([201,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"].mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Material } from \"p2\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [],\r\n    messages: [],\r\n    material: undefined\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          gameSettings.material = material;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            world.step(1 / 60, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic();\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic() {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): void;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    private normalTexture: Texture;\r\n    private downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    private txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"Arial\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        //this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass: 5, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean() {\r\n        this.destroyBody();\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static rainbowType = 250;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private _kinematic = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        if (type === CircleBlock.rainbowType) {\r\n            this.stepsAmount = 10;\r\n        }\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        \r\n    }\r\n    override createBody(physType: 1 | 2 | 4): void {\r\n        super.createBody(physType);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(Texture.from(`${this.type}.png`));\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && this.type < 20;\r\n    }\r\n    public increase(s: number, fromBoom: boolean = false) {\r\n        if (this.busy || !this.body) return;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            gsap.killTweensOf(this.view.scale);\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.shape.updateBoundingRadius();\r\n                (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n                this.sensorShape.updateBoundingRadius();\r\n                this.body.updateBoundingRadius();\r\n                this.body.updateMassProperties();\r\n                this.busy = false;\r\n            }});\r\n        }\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        return new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Graphics } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    constructor() {\r\n        super();\r\n        const g = new Graphics();\r\n        g.beginFill(0xFF0000, 1);\r\n        g.drawCircle(0, 0, 70);\r\n        this.addChild(g);\r\n        this.scale.set(0,0);\r\n        this.animate();\r\n    }\r\n    public animate() {\r\n        const duration = 0.3;\r\n        gsap.to(this.scale, {x: 1.5, y: 1.5, duration, onComplete: ()=> {\r\n            this.destroy();\r\n        }});\r\n        gsap.to(this, {alpha: 0, delay:duration*0.4, duration: duration*0.6});\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(0);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.KINEMATIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 100 / METER_SIZE, height: 100 / METER_SIZE});\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`rocket1.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(Texture.from(`hero.png`));\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n}","import { TextedButton } from \"../../../core/ui/TextedButton\";\r\n\r\nexport class PowerupButton extends TextedButton {\r\n    public id: number;\r\n    private a: number;\r\n    constructor(amount: number, color: number, textColor: number) {\r\n        super(amount.toString(), 30, color, textColor);\r\n        this.a = amount;\r\n    }\r\n    public set amount(i: number) {\r\n        this.a = i;\r\n        this.text = this.a.toString();\r\n    }\r\n    public get amount(): number {\r\n        return this.a;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: NineSlicePlane;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 420;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private bell: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),30,25,30,25);\r\n        back.width = this.initialWidth;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 30,25,30,25);\r\n        this.bar.width = this.initialWidth;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.bell.position.set(440,21);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        if (p === 1) {\r\n            this.bell.play();\r\n            gsap.delayedCall(2, ()=> {\r\n                this.bell.gotoAndStop(0);\r\n            });\r\n        }\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.isFrozen = false;\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: NineSlicePlane;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 420;\r\n    private barMask: Sprite;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"progress_back.png\"),30,25,30,25);\r\n        back.width = this.initialWidth;\r\n        this.addChild(back);\r\n\r\n        this.bar = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 30,25,30,25);\r\n        this.bar.width = this.initialWidth;\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public update(amount: number): boolean {\r\n        if (amount === 0) {\r\n            this.current = 0;\r\n        } else if (amount < 3) {\r\n            amount = 0;\r\n        } else {\r\n            this.current += amount;\r\n            this.current = Math.min(this.current, this.max);\r\n        }\r\n        const wasEnd = this.current >= this.max;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * (this.current / this.max), duration: 0.2});\r\n        if (wasEnd) {\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Sprite, Text, Texture } from \"pixi.js\";\r\nexport enum EBonus {\r\n    None = 0,\r\n    CrazySheep,\r\n    Alien,\r\n    RainbowBall,\r\n    Magic,\r\n    All\r\n}\r\nexport class BonusChooser extends Container {\r\n    public bonus: EBonus;\r\n    private bell: AnimatedSprite;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.bell = new AnimatedSprite([Texture.from(\"bell0.png\"), Texture.from(\"bell1.png\")], true);\r\n        this.bell.animationSpeed = 0.1;\r\n        this.bell.anchor.set(0.5, 0.5);\r\n        this.addChild(this.bell);\r\n        this.bell.loop = true;\r\n\r\n        this.txt = new Text(\"\",{fontSize: 25, fill: 0x000000, align: \"right\"});\r\n        this.txt.anchor.set(1, 0.5);\r\n        this.txt.position.set(-55, 7);\r\n        this.addChild(this.txt);\r\n    }\r\n    public async show(bonus: EBonus) {\r\n        this.bonus = bonus;\r\n        this.visible = true;\r\n        let n = \"\";\r\n        switch(bonus) {\r\n            case EBonus.CrazySheep:\r\n                n = \"Crazy Sheep\";\r\n                break;\r\n            case EBonus.Alien:\r\n                n = \"Unexpected Guest\";\r\n                break;\r\n            case EBonus.RainbowBall:\r\n                n = \"Rainbow Ball\";\r\n                break;\r\n            case EBonus.Magic:\r\n                n = \"Some Magic is here!\";\r\n                break;\r\n        }\r\n        this.bell.play();\r\n        this.txt.text = n;\r\n        this.delay(2).then(()=> {\r\n            this.txt.text = \"\";\r\n            this.bell.gotoAndStop(0);\r\n        });\r\n        await this.delay(2);\r\n        //this.hide();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][], name: string) {\r\n        this.txt.text = \"From: \" + name;\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, Rectangle } from \"pixi.js\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    public abstract get activeBound(): Rectangle[];    \r\n    public abstract start(callback: (args?: any)=>void): void;    \r\n    public abstract clean(): void;\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }\r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\n\r\nexport class RainbowBallBonus extends BaseBonus {\r\n    private ball: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor(posY: number) {\r\n        super();\r\n        this.ball = Sprite.from(Texture.from(\"250.png\"));\r\n        this.ball.anchor.set(0.5, 0.5);\r\n        this.ball.scale.set(1, 1);\r\n        this.ball.position.set(-500, posY);\r\n        this.addChild(this.ball);\r\n    }\r\n    public start(callback: ()=>void): void {\r\n        this.tween = gsap.to(this.ball, {x: 500, duration: 1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.ball.angle += 5;\r\n        }, onComplete: ()=> {\r\n            callback();\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }\r\n    public get activeBound() {\r\n        if (this.tween) {\r\n            this.bound.x = (this.ball.x - this.ball.width * 0.5) / METER_SIZE;\r\n            this.bound.y = (this.ball.y - this.ball.height * 0.5) / METER_SIZE;\r\n            this.bound.width = this.ball.width / METER_SIZE;\r\n            this.bound.height = this.ball.height / METER_SIZE;\r\n            return [this.bound];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\n\r\nexport class CrazyShipBonus extends BaseBonus {\r\n    private sheep: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.sheep = Sprite.from(Texture.from(\"sheep.png\"));\r\n        this.sheep.anchor.set(0.5, 0.5);\r\n        this.sheep.scale.set(1, 1);\r\n        this.sheep.position.set(Math.random() * 700 - 350, -800);\r\n        this.addChild(this.sheep);\r\n    }\r\n    public get activeBound() {\r\n        if (this.tween) {\r\n            this.bound.x = (this.sheep.x - this.sheep.width * 0.5) / METER_SIZE;\r\n            this.bound.y = (this.sheep.y - this.sheep.height * 0.5) / METER_SIZE;\r\n            this.bound.width = this.sheep.width / METER_SIZE;\r\n            this.bound.height = this.sheep.height / METER_SIZE;\r\n            return [this.bound];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    public start(callback: () => void): void {\r\n        const yy = Math.random() * 800 - 400;\r\n        this.tween = gsap.to(this.sheep, {y: yy, duration: 1.5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.tween = gsap.to(this.sheep, {x: 600, duration: 1.6, ease: Linear.easeNone, onComplete: ()=> {\r\n                callback();\r\n            }});\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }    \r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\n\r\nexport class AlienBonus extends BaseBonus {\r\n    private alienRight: Sprite;\r\n    private alienLeft: Sprite;\r\n    //private acid: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    private step: number;\r\n    //private currentPoint: [number, number];\r\n    private callback: () => void;\r\n    private getPoint: () => [number, number];\r\n    private points: [number, number][];\r\n    constructor(getPoint: () => [number, number]) {\r\n        super();\r\n        this.getPoint = getPoint;\r\n        this.step = 0;\r\n        this.points = [];\r\n\r\n        this.alienRight = Sprite.from(Texture.from(\"alien.png\"));\r\n        this.alienRight.anchor.set(1, 0.5);\r\n        this.alienRight.position.set(600, 0);\r\n        this.addChild(this.alienRight);\r\n\r\n        this.alienLeft = Sprite.from(Texture.from(\"alien.png\"));\r\n        this.alienLeft.anchor.set(1, 0.5);\r\n        this.alienLeft.scale.set(-1, 1);\r\n        this.alienLeft.position.set(-600, 0);\r\n        this.addChild(this.alienLeft);\r\n    }\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            this.playDelay();\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public start(callback: () => void): void {\r\n        this.callback = callback;\r\n        gsap.to(this.alienLeft, {x: -350, duration: 0.6, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.playJump();\r\n        }});\r\n        gsap.to(this.alienRight, {x: 350, duration: 0.5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.playJump();\r\n        }});\r\n        \r\n    }\r\n    public goOut(): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.to(this.alienLeft, {x: -600, duration: 0.2, ease: Linear.easeNone, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n            gsap.to(this.alienRight, {x: 600, duration: 0.2, ease: Linear.easeNone});\r\n        });\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        this.callback = undefined;\r\n        this.getPoint = undefined;\r\n    }\r\n    private playDelay() {\r\n        gsap.delayedCall(0.1, ()=> this.playJump());\r\n    }\r\n    private playJump() {\r\n        if (this.step < 10 && this.getPoint) {\r\n            const currentPoint = this.getPoint();\r\n            if (!currentPoint) {\r\n                this.callback && this.callback();\r\n                return;\r\n            }\r\n            const acid = Sprite.from(Texture.from(\"alien_acid.png\"));\r\n            acid.anchor.set(0.5, 0.5);\r\n            this.addChild(acid);\r\n            const m = this.step%2 === 0 ? 1 : -1;\r\n            acid.scale.set(0.7 * m, 0.7);\r\n            acid.position.set(m * 300, -40);\r\n            acid.visible = true;\r\n            this.step++;\r\n            this.tween = gsap.to(acid, {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.3, ease: Expo.easeIn, onComplete: ()=> {\r\n                this.points.push(currentPoint);\r\n                acid.visible = false;\r\n                const splash = Sprite.from(Texture.from(\"splash.png\"));\r\n                splash.anchor.set(0.5, 0.5);\r\n                splash.position.copyFrom(acid.position);\r\n                this.addChild(splash);\r\n                gsap.to(splash, {alpha: 0, duration: 1, ease: Linear.easeNone});\r\n                gsap.to(splash.scale, {y: 1.5, duration: 1, ease: Linear.easeNone, onComplete: ()=> {\r\n                    this.removeChild(splash);\r\n                }});\r\n            }});\r\n        } else {\r\n            this.callback && this.callback();\r\n        }\r\n        \r\n    }\r\n    \r\n}","import gsap, { Expo, Linear } from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\n\r\nexport class MagicBonus extends BaseBonus {\r\n    private wizard: Sprite;\r\n    private tween: gsap.core.Tween;\r\n    constructor() {\r\n        super();\r\n        this.wizard = Sprite.from(Texture.from(\"wizard.png\"));\r\n        this.wizard.anchor.set(0.5, 0.5);\r\n        this.wizard.scale.set(1, 1);\r\n        this.wizard.position.set(0, 1000);\r\n        this.addChild(this.wizard);\r\n    }\r\n    public start(callback: ()=>void): void {\r\n        this.tween = gsap.to(this.wizard, {y: 200, duration: 1.5, ease: Expo.easeOut, onComplete: ()=> {\r\n            callback();\r\n        }});\r\n    }\r\n    public clean(): void {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n    }\r\n    public get activeBound() {\r\n        return undefined;\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.to(this.wizard, {y: 1000, duration: 0.2, ease: Linear.easeNone, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n    }\r\n}","import { BitmapText, Sprite } from \"pixi.js\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class IconButton extends Button {\r\n    constructor(icon: Sprite) {\r\n        super(\"levelItem_right0\", \"levelItem_right1\");\r\n        icon.anchor.set(0.5,0.5);\r\n        this.addChild(icon);\r\n    }\r\n}","import { Container, Graphics, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture, Ticker } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { BonusChooser, EBonus } from \"./game/BonusPopup\";\r\nimport { Message } from \"./game/Message\";\r\nimport { RainbowBallBonus } from \"./game/bonuses/RainbowBallBonus\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { CrazyShipBonus } from \"./game/bonuses/CrazyShipBonus\";\r\nimport { AlienBonus } from \"./game/bonuses/AlienBonus\";\r\nimport { MagicBonus } from \"./game/bonuses/MagicBonus\";\r\nimport { IconButton } from \"../../core/ui/IconButton\";\r\nimport { MapState } from \"./MapState\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp,\r\n    RocketLeft,\r\n    All\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    icon: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    bonuses: number[],\r\n    obstacles: number[],\r\n    stars?: number\r\n}\r\nexport class GameViewState extends BaseState {\r\n    private static BottomPoint = 670;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: Graphics;\r\n    private mousePressed: boolean;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private powerups: number[];\r\n    private powerupButtons: PowerupButton[];\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private bonusChooser: BonusChooser;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n\r\n    public create(): void {\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(top);\r\n\r\n        const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);\r\n\r\n        const menuBtn = new IconButton(new Sprite(Texture.from(\"pause_button.png\")));\r\n        menuBtn.position.set(-250, topBack.height * 0.5);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            stateManager.start(MapState);\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton(0, 0x000000, 0xFFFFFF);\r\n        this.powerup1.id = 0;\r\n        this.powerup1.position.set(-390, 900);\r\n        this.addChild(this.powerup1);\r\n        this.powerup1.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup1.id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton(0, 0xFF0000, 0x000000);\r\n        this.powerup2.id = 1;\r\n        this.powerup2.position.set(-265, 900);\r\n        this.addChild(this.powerup2);\r\n        this.powerup2.on(\"pointerup\", () => {\r\n            this.startPowerup(this.powerup2.id);\r\n        });\r\n        this.powerupButtons = [];\r\n        this.powerupButtons.push(this.powerup1);\r\n        this.powerupButtons.push(this.powerup2);\r\n\r\n        this.preview = new Graphics();\r\n        this.addChild(this.preview);\r\n\r\n        this.previewBlocks = new Message();\r\n        this.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new Graphics();\r\n        line.lineStyle(4, 0x000000, 0.3);\r\n        line.moveTo(-400, 500);\r\n        line.lineTo(400, 500);\r\n        this.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        //this.nextTimer.rotation = Math.PI / 2;\r\n        this.nextTimer.position.set(-170, -667);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(-170, -667);\r\n        this.boomMeter.alpha = 0;\r\n\r\n        this.bonusChooser = new BonusChooser();\r\n        this.bonusChooser.position.set(270,-648);\r\n        this.bonusChooser.alpha = 0;\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.powerups = [2, 3];\r\n        for (let i = 0; i < this.powerupButtons.length; i++) {\r\n            this.powerupButtons[i].amount = this.powerups[i];\r\n        }\r\n        this.isTransition = false;\r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        this.addChild(this.nextTimer);\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addChild(this.boomMeter);\r\n        this.addActiveBlock();\r\n\r\n        this.addChild(this.bonusChooser);\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n        Ticker.shared.add(this.update, this);\r\n    }\r\n    public async updateBoomMeter(amount: number) {\r\n        if (this.isTransition || this.activeBonus) return;\r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            //gameSettings.paused = true;\r\n            const bonus = this.getRandomBonus();\r\n            this.bonusChooser.show(bonus);\r\n            this.setActiveBonus(this.bonusChooser.bonus);\r\n            //gameSettings.paused = false;\r\n        }\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.RainbowBall:\r\n                this.meterBonus = this.createRainbowBallBonus();\r\n                break;\r\n            case EBonus.CrazySheep:\r\n                this.meterBonus = this.createCrazySheepBonus();\r\n                break;\r\n            case EBonus.Alien:\r\n                this.meterBonus = this.createAlienBonus();\r\n                break;\r\n            case EBonus.Magic:\r\n                this.meterBonus = this.createMagicBonus();\r\n                break;\r\n            default: return;\r\n        }\r\n        this.addChild(this.meterBonus);\r\n        this.meterBonus.start((args) => {\r\n            this.doActionMeterBonus(bonus, args);\r\n            this.clearMeterBonus(false);\r\n        });\r\n    }\r\n    private doActionMeterBonus(bonus: EBonus, args: any) {\r\n        if (bonus === EBonus.Magic) {\r\n            const type: number = this.getRandomType();\r\n            world.bodies.forEach((body)=> {\r\n                const block = (body as any).userData as CircleBlock; \r\n                if (block && block.type === type) {\r\n                    block.boom();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //OLD BONUSES\r\n    /*private setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        switch(bonus) {\r\n            case EBonus.Rainbow:\r\n                this.clearActiveBlocks();\r\n                this.addActiveBlock();\r\n                break;\r\n            case EBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break;\r\n            case EBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock; \r\n                    if (block && block.type === type) {\r\n                        block.boom();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }*/\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 0.8;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.randomBodiesPositions[i];\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`rocket1.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1, y: 1, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position);\r\n                explodePoints.push(pos);\r\n                this.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n    }\r\n    public createExplosion(position: ObservablePoint) {\r\n        const e = new Explosion();\r\n        e.position.copyFrom(position);\r\n        this.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n          this.mousePressed = false;\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    private update() {\r\n        if (gameSettings.paused) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (body.type === Body.KINEMATIC && body !== this.moveBox.body) {\r\n                if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type === CircleBlock.goalType ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        if (this.isTransition && !wasEnd) {\r\n            this.nextTimer.clear();\r\n            this.boomMeter.update(0);\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.moveToNextLevel();\r\n            this.createMoveWalls();\r\n            this.addChild(this.nextTimer);\r\n            this.nextTimer.freeze();\r\n            this.generateNewBlocks().then(()=> {\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.nextTimer.unFreeze();\r\n            });\r\n            this.addChild(this.bonusChooser);\r\n            this.isTransition = false;\r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=1;\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            meterBonusBlocks.forEach((body)=> {\r\n                ((body as any).userData as CircleBlock).boom(false); \r\n            });\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            this.currentLevelData.stars = 3;\r\n            setStorageData(this.currentLevelData.name,this.currentLevelData.stars.toString());\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.stars) {\r\n                this.currentLevelData.stars = 0;\r\n                setStorageData(this.currentLevelData.name,this.currentLevelData.stars.toString());\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n    }\r\n    private async startPowerup(id: number) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition || this.powerups[id] <= 0) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case 0:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case 1:\r\n                await this.startHorizontalRocket();\r\n                break; \r\n        }\r\n        this.powerups[id] -= 1;\r\n        this.powerupButtons[id].amount = this.powerups[id];\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        //this.nextBlock.scale.set(0.7);\r\n        this.pad.addChild(this.nextBlock);\r\n    }\r\n    private getRandomType() {\r\n        //if (this.activeBonus === EBonus.Rainbow) return CircleBlock.rainbowType;\r\n        //const rainbowChance = Math.random() < 0.15;\r\n        //if (rainbowChance) return CircleBlock.rainbowType;\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n       /* if (this.nextType === CircleBlock.rainbowType) {\r\n            this.activeBonus = true;\r\n        }*/\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        if (this.mousePressed) {\r\n            const centerY = GameViewState.BottomPoint;\r\n            const len = 1200;\r\n            const boundX = 315;\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            const angle= Math.atan2((p.y-centerY), p.x);\r\n            this.preview.clear();\r\n            this.preview.lineStyle(4,0x000000, 0.7);\r\n            this.preview.moveTo(0, centerY);\r\n            let xx = len*Math.cos(angle);\r\n            let yy = centerY+len*Math.sin(angle);\r\n            if (xx < -boundX || xx > boundX) {\r\n                const d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n                xx = d*Math.cos(angle);\r\n                yy = centerY+d*Math.sin(angle);\r\n                this.preview.lineTo(xx,yy);\r\n                xx -= (len-d)*Math.cos(-angle);\r\n                yy -= (len-d)*Math.sin(-angle);\r\n                this.preview.lineTo(xx, yy);\r\n            } else {\r\n                this.preview.lineTo(xx,yy);\r\n            }\r\n            \r\n        }\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else {\r\n            this.mousePressed = true;\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        this.preview.clear();\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.padRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC);\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        a.body.type = Body.KINEMATIC;\r\n        const speed = 10;\r\n        a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        this.mousePressed = false;\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines, this.currentLevelData.name);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks} = this.currentLevelData;\r\n        for (let i = 0; i < startAmount; i++) {\r\n            const type = Math.floor(Math.random() * blocks) + 1;\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.addChild(f);\r\n            await this.delay(0.001);\r\n        }\r\n        await this.delay(1);\r\n        const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n        f.on(\"gameover\", this.onGameOver);\r\n        this.addChild(f);\r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private onGameOver() {\r\n        stateManager.start(MenuState);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        this.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        this.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 700, 50, 0);\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 700, 50, 0);\r\n        this.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.addChild(this.bottomOpenWall);\r\n    }\r\n    public close(): void {\r\n        app.stage.off(\"pointerup\");\r\n        app.stage.off(\"pointerdown\");\r\n        Ticker.shared.remove(this.update);\r\n\r\n        this.moveBox && this.moveBox.clean();\r\n        this.staticBox && this.staticBox.clean();\r\n        this.bottomOpenWall && this.bottomOpenWall.clean();\r\n        this.activeBlock && this.activeBlock.clean();\r\n        this.tick = 0;\r\n        this.moving = false;\r\n        this.isActivePowerup = false;\r\n        this.preview.clear();\r\n        this.mousePressed = false;\r\n        this.previewBlocks && this.previewBlocks.clear();\r\n        this.nextBlock && this.nextBlock.clean();\r\n        \r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n        });\r\n\r\n        //todo clear everything\r\n    }\r\n\r\n    //BONUSES\r\n    private createRainbowBallBonus() {\r\n        return new RainbowBallBonus(-400);\r\n    }\r\n    private createCrazySheepBonus() {\r\n        return new CrazyShipBonus();\r\n    }\r\n    private createMagicBonus() {\r\n        return new MagicBonus();\r\n    }\r\n    private createAlienBonus() {\r\n        return new AlienBonus(()=> {\r\n            if (this.isTransition) return undefined; \r\n            let p = this.randomBodiesPositions[Math.floor(Math.random()*this.randomBodiesPositions.length)];\r\n            if (Math.abs(p[1]) >= 20) {\r\n                p = undefined;\r\n            }\r\n            return p;\r\n        });\r\n    }\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class ChatItem extends Button {\r\n    public id: number;\r\n    constructor(id: number, name: string, message: string, icon: string, grey: boolean) {\r\n        super(\"\", \"\");\r\n        this.id = id;\r\n        this.btn.anchor.set(0,0);\r\n\r\n        const pic = Sprite.from(Texture.from(icon));\r\n        pic.position.set(10,10);\r\n        this.addChild(pic);\r\n\r\n        const txt = new Text(name, {fontFamily: \"Arial\", fontSize: 40, fill: 0x000000, fontWeight: \"bold\"});\r\n        txt.position.set(120, 10);\r\n        this.addChild(txt);\r\n\r\n        const txt1 = new Text(message, {fontFamily: \"Arial\", fontSize: 33, fill: 0x000000});\r\n        txt1.position.set(120, 5 + txt.height + 15);\r\n        this.addChild(txt1);\r\n\r\n        this.btn.tint = grey ? 0xCCCCCC : 0xFFFFFF;\r\n        this.btn.width = gameSettings.originalWidth - 30;\r\n        this.btn.height = 5 + txt.height + 20 + txt1.height + 5;\r\n        pic.height = pic.width = this.btn.height - 20;\r\n    }\r\n    /*public set text(t: string) {\r\n        this.txt.text = t;\r\n    }*/\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState, ILevelData } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { Scrollbox } from \"pixi-scrollbox\";\r\nimport { NineSlicePlane, Text, Texture } from \"pixi.js\";\r\nimport { ChatItem } from \"./map/ChatItem\";\r\n\r\nexport class MapState extends BaseState {\r\n    private scrollbox: Scrollbox;\r\n    public create(): void {\r\n        const txt = new Text(\"Chats\", {fontFamily: \"Arial\", fontSize: 75, fill: 0xFFFFFF, fontWeight: \"bold\"});\r\n        txt.position.set(-gameSettings.originalWidth * 0.5 + 30, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.addChild(txt);\r\n\r\n        this.scrollbox = new Scrollbox({ boxWidth: gameSettings.originalWidth - 30, boxHeight: gameSettings.originalHeight - 160});\r\n        this.scrollbox.position.set(-gameSettings.originalWidth * 0.5 + 18, -gameSettings.originalHeight * 0.5 + 130);\r\n        this.addChild(this.scrollbox);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n    }\r\n    public async start(...params: any) {\r\n        sendEvent(\"start\", \"map\", \"level\");\r\n        const {messages, levels} = gameSettings;\r\n        let yy = 0;\r\n        let i = 0;\r\n        for (const data of levels) {\r\n            const stars = await getStorageData(data.name,\"\");\r\n            if (stars !== \"\") {\r\n                data.stars = parseInt(stars);\r\n            }\r\n            const disabled = i !== 0 && data.stars === undefined;\r\n            const text = (i === 0) ? \"Let's start from here. Tap to play.\" : (disabled ? \"...\" : messages[Math.floor(Math.random()*messages.length)]);\r\n            const item = new ChatItem(i, data.name + (!disabled ? \" \" + \"*\".repeat(data.stars) : \"\"), text, data.icon, i%2 !== 0);\r\n            item.on(\"pointerup\", () => {\r\n                sendEvent(\"click\", \"map\", \"play\");\r\n                stateManager.start(GameViewState, item.id);\r\n            });\r\n            \r\n            item.disabled = disabled;\r\n            item.y = yy;\r\n            this.scrollbox.content.addChild(item);\r\n            yy += item.height;\r\n            i++;\r\n        }\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"map\", \"level\");\r\n        this.scrollbox.content.removeChildren();\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { MapState } from \"./MapState\";\r\nimport { Logo } from \"./menu/Logo\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        const playBtn = new TextedButton(\"PLAY\", 100, 0x000000, 0xFFFFFF);\r\n        playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(playBtn);\r\n        playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n    }\r\n    public close(): void {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(MapState);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport { MapState } from \"./states/MapState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected createStates() {\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new MapState());\r\n    stateManager.add(new GameViewState());\r\n    stateManager.start(MenuState);\r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n      if (!instanceA.correctType || !instanceB.correctType) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if (instanceA.type === instanceB.type && instanceA.type !== 0) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body = undefined;\r\n        let inst = undefined;\r\n        if (bodyA.type === Body.KINEMATIC && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n        } else if (bodyB.type === Body.KINEMATIC && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n        }\r\n        if (body) {\r\n          body.type = Body.DYNAMIC;\r\n          if (instanceA.type === instanceB.type) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else {\r\n            (stateManager.activeState as GameViewState).updateBoomMeter(1);\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(): void {\r\n    const small = unusedBodies.length >= 2;\r\n    const middle = unusedBodies.length >= 3;\r\n    const big = unusedBodies.length >= 5;\r\n    const amount = (big) ? 3 : (middle ? 2 : (small ? 1 : 0));\r\n    const state = stateManager.activeState as GameViewState;\r\n    if (!state || !state.updateBoomMeter) return; \r\n    if (amount === 3) {\r\n      const body = unusedBodies[Math.floor(Math.random()*unusedBodies.length)];\r\n      if (body) {\r\n        const block = (body as any).userData as CircleBlock;\r\n        state.fireMissle(1, block.position);\r\n      }\r\n    }\r\n    if (unusedBodies.length > 0) {\r\n      state.updateBoomMeter((amount > 0) ? unusedBodies.length + 1 : 1);\r\n    }\r\n    let wasRainbow = false;\r\n    unusedBodies.forEach((body) => {\r\n      const block = (body as any).userData as CircleBlock;\r\n      if (block && block.type === CircleBlock.rainbowType && block.steps > 3) {\r\n        wasRainbow = true;\r\n      }\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n\r\n    increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n    increaseBlocks = [];\r\n\r\n    explodePoints.forEach((pos) => {\r\n      const bodies = world.hitTest(pos, world.bodies, 0);\r\n      if (bodies && bodies.length > 0) {\r\n        const block = (bodies[0] as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.type !== CircleBlock.goalType) {\r\n          block.boom();\r\n        }\r\n      }\r\n    });\r\n    explodePoints = [];\r\n\r\n    if (wasRainbow) {\r\n      world.bodies.forEach((body)=> {\r\n        const block = (body as any).userData as CircleBlock;\r\n        if (block && block.correctType && block.correctType()) {\r\n          state.createExplosion(block.position);\r\n          block.boom();\r\n        }\r\n      });\r\n      state.stopBonuses();\r\n    }\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base\", \"assets/atlases/base.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n\r\n      //sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n      /*sounds.add(\"click\", { volume: 1 });\r\n      sounds.add(\"pop0\", { volume: 0.6 });\r\n      sounds.add(\"pop1\", { volume: 0.6 });\r\n      sounds.add(\"pop2\", { volume: 0.6 });\r\n      sounds.add(\"collide\", { volume: 0.2 });\r\n      sounds.add(\"boom\", { volume: 1 });\r\n      sounds.add(\"crab_crack\", { volume: 1 });\r\n      sounds.add(\"crab_hand\", { volume: 1 });\r\n      sounds.add(\"won\", { volume: 0.4 });\r\n      sounds.add(\"tutorial\", { volume: 0.4 });\r\n      sounds.add(\"level_failed\", { volume: 1 });\r\n      sounds.add(\"level_won\", { volume: 1 });\r\n      sounds.add(\"level\", { volume: 0.4 });*/\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.messages = loader.resources.levels.data.messages;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}