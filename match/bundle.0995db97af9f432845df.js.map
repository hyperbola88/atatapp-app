{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/SoundManager.ts","webpack:///./core/states/StateManager.ts","webpack:///./core/LoadingPopup.ts","webpack:///./core/BaseGame.ts","webpack:///./core/natives/social/DummySocial.ts","webpack:///./core/natives/social/PokiSocial.ts","webpack:///./core/natives/SocialManager.ts","webpack:///./core/states/BaseState.ts","webpack:///./core/ui/Button.ts","webpack:///./core/ui/TextedButton.ts","webpack:///./core/PhysicsSprite.ts","webpack:///./game/states/game/Explosion.ts","webpack:///./game/states/game/CircleBlock.ts","webpack:///./game/states/game/StaticBlock.ts","webpack:///./game/states/game/RocketPowerup.ts","webpack:///./game/states/game/GoalBlock.ts","webpack:///./game/states/game/PowerupButton.ts","webpack:///./game/states/game/NextBlocksTimer.ts","webpack:///./game/states/game/BoomMeter.ts","webpack:///./game/states/game/Message.ts","webpack:///./game/states/game/bonuses/BonusIntroLetter.ts","webpack:///./game/states/game/bonuses/BaseBonus.ts","webpack:///./game/states/game/bonuses/BoomLettersBonus.ts","webpack:///./game/states/game/ScorePlace.ts","webpack:///./game/states/game/BackButton.ts","webpack:///./game/states/game/bonuses/LaserLettersBonus.ts","webpack:///./game/states/game/bonuses/BigBoomLettersBonus.ts","webpack:///./game/states/game/obstacles/BaseObstacle.ts","webpack:///./game/states/game/obstacles/StaticObstacle.ts","webpack:///./game/states/game/obstacles/RandomObstacle.ts","webpack:///./game/states/game/Tutorial.ts","webpack:///./game/states/game/levelstart/WheelBox.ts","webpack:///./game/states/game/LevelFinished.ts","webpack:///./game/states/game/LevelStart.ts","webpack:///./game/states/game/PausePopup.ts","webpack:///./game/states/game/MousePreview.ts","webpack:///./game/states/GameViewState.ts","webpack:///./game/states/menu/Logo.ts","webpack:///./game/states/menu/MapItem.ts","webpack:///./game/states/MenuState.ts","webpack:///./game/states/ComicsState.ts","webpack:///./game/Game.ts","webpack:///./index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sounds","path","this","all","musics","mutedSounds","mutedMusic","mute","settings","Error","src","map","Howl","autoplay","loop","volume","play","console","error","StateManager","stage","states","Map","currentState","state","set","constructor","close","removeChild","params","start","addChild","setTimeout","world","app","LoadingPopup","width","height","back","Sprite","from","Texture","WHITE","anchor","tint","alpha","interactive","sprite","visible","rotate","gsap","killTweensOf","rotation","to","Math","PI","duration","ease","Linear","easeNone","onComplete","Container","Application","registerPlugin","AppLoaderPlugin","Loader","SpritesheetLoader","BitmapFontLoader","stateManager","loading","unusedBodies","gameSettings","started","paused","scale","realHeight","originalWidth","originalHeight","levels","particles","undefined","material","bounceMaterial","activeBallMaterial","slowmo","BaseGame","options","autoDensity","resolution","backgroundColor","document","body","appendChild","view","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","style","left","top","renderer","plugins","interaction","ticker","maxFPS","p2","World","gravity","initContactListener","Material","addContactMaterial","ContactMaterial","restitution","stiffness","Equation","DEFAULT_STIFFNESS","emitImpactEvent","add","step","bodies","forEach","userData","transform","v2","position","angle","customLogic","hide","removeBody","clearBodyArray","backC","game","load","createStates","calculateCanvasSize","innerWidth","innerHeight","resize","x","y","addEventListener","DummySocial","score","txt","success","language","gameKey","secretKey","AdType","instance","getLocalStorage","localStorage","ex","firstPlay","initSocial","Promise","resolve","reject","init","then","b","sendError","setStorageData","setItem","getStorageData","getItem","showADS","type","show","muteMusic","muteSounds","Interstitial","RewardedVideo","showInter","showReward","finishLoading","gameplayStart","BaseState","Button","normalState","downState","normalTexture","downTexture","btn","on","onButtonDown","onButtonUp","onButtonOut","disabled","isDisabled","buttonMode","isDown","texture","e","off","ECollisionGroups","TextedButton","text","size","color","textColor","Text","fontFamily","fontSize","fill","pow","PhysicsSprite","createView","physType","mass","pos","shape","createShape","Body","damping","angularDamping","addShape","addBody","destroyBody","parent","immidiately","CircleBlock","skullType","Explosion","delay","createTextures","art","textures","animate","frame","a","onUpdate","nf","floor","permanentSkull","createBody","DYNAMIC","_kinematic","sensorShape","Circle","radius","getRadius","sensor","killTween","clean","busy","skullMeter","removeSkull","savedType","kinematic","getTexture","bombType","updateShape","explosion","animateAndDestroy","fromBoom","increase","stepsAmount","steps","v","killAmount","max","sameColorNeighbors","k","scaleFactor","updateBoundingRadius","updateMassProperties","StaticBlock","rot","STATIC","DEG_TO_RAD","Box","RocketPowerup","startX","startY","endX","endY","Cubic","easeIn","GoalBlock","kill","delayedCall","emit","resetDeathCounter","PowerupButton","amount","toString","align","icon","onPressed","_id","id","getStorageId","storageData","parseInt","updateTxt","NextBlocksTimer","frozenBack","bar","barMask","mask","barBorder","frozen","initialWidth","isFrozen","seconds","unFreeze","BoomMeter","barShine","AnimatedSprite","animationSpeed","current","noAnimation","min","gotoAndPlay","wasEnd","stop","Message","blocks","NineSlicePlane","fontWeight","clear","nextLines","senders","random","lines","xx","f","addBlock","BonusIntroLetter","BaseBonus","Rectangle","stringLetters","getLetters","letters","item","getPoint","amounts","counter","currentLength","dAngle","w","dx","items","ll","pop","letter","BoomLettersBonus","points","arr","point","currentPoint","ScorePlace","scoreNumber","scoreTxt","scoreFormatted","letterSpacing","rest","BackButton","LaserLettersBonus","laser","rect","yy","BigBoomLettersBonus","split","BaseObstacle","StaticObstacle","ETutorial","RandomObstacle","lives","moving","finish","rx","ry","Tutorial","allConditions","textMap","Begin","Moving","Heart","NewLine","Recharge","Unbreak","IAPBonus","IAPBonus2","ChangePosition","Skull","tutorial","wordWrap","wordWrapWidth","pivot","copyFrom","scaleStepX","milisecs","scaleStepY","interval","setInterval","finalAlpha","clearInterval","setSlowMo","globalTimeline","pause","stopPropagation","stopped","resume","WheelBox","back1","back2","slot1","slot2","mask1","mask2","iconL0","randomTexture","iconR0","iconL1","iconR1","allTextures","EIAPBonus","RocketUp","Kill","Freeze","keys","Array","bonuses","temp","LevelFinished","deltaTime","emitter","update","popup","popupBack","title","stars","star","prizeIcon","okBut","Emitter","won","time","conditions","callback","level","prizes","idealTime","timeBonus","round","log","prize","powerupDone","showed","Bounce","easeOut","Ticker","shared","onTickEvent","cleanup","remove","LevelStart","nameBack","texts","usingTexts","getNewText","wheelbox","words","Expo","h","tween","PausePopup","xBut","exit","EBonus","EObstacle","MousePreview","part0","part1","centerY","GameViewState","BottomPoint","atan2","cos","sin","abs","prepareTextures","backContainer","gameContainer","fxContainer","frontContainer","levelFinished","pad","menuBtn","showPause","powerup1","startPowerup","powerup2","preview","previewBlocks","line","nextTimer","boomMeter","scorePlace","padRect","downRect","topRect","levelStart","pausePopup","addCondition","goalBlock","bottomOpenWall","levelId","isTransition","boltsActive","obstacles","isDone","waitForOver","activeBonus","None","randomBodiesPositions","nextType","isActivePowerup","generateLineBlocks","tick","maxY","freeze","sendEvent","sendProgressionEvent","EGAProgressionStatus","Start","generateStartBlocks","iaps","generateIAPS","currentLevelData","setData","maximum","addActiveBlock","levelStartTime","Date","getTime","onClick","onTapStart","reset","moveBox","staticBox","activeBlock","nextBlock","removeChildren","children","filter","MenuState","startPosition","fireMissle","addScore","playBolts","bonus","getRandomBonus","setActiveBonus","origAmount","amountPerBolt","bolt","addToBoomMeter","BoomLetters","BigBoomLetters","LaserLetters","meterBonus","getRandomPosition","clearMeterBonus","missle","createExplosion","explodePoints","clearActiveBlocks","stopBonuses","isSkull","setSkull","moveBalls","addLineBlocks","drawMouse","activeBounds","activeBound","wasGameOver","goal","meterBonusBlocks","gravityScale","goalType","isGoal","bound","contains","starsConditions","moveToNextLevel","startCountDeath","setProgress","boom","unusedBlocksRemoved","createMoveWalls","generateNewBlocks","startVerticalRocket","getRandomType","block","setBomb","startRocket","rocket","Skulls","next","generateActiveBlock","tempActive","tempNext","toLocal","eventData","global","draw","lp","switchBlockes","applyImpulse","decreaseSkullMeter","setLines","startAmount","wasHeartMiddle","skulls","createObstacle","HeartMiddle","skullsIds","includes","onGameOver","createBottomExit","obstacle","Static","Random","Number","MAX_SAFE_INTEGER","restartLevel","restart","leftWall","rightWall","bottomWall","bottomWall1","bottomWall2","bottomWall3","bottomWall4","endType","goOut","Logo","face","logo","Elastic","MapItem","lockedTxt","hearts","heart","playBtn","onPlayClicked","createMapItems","setActiveLevel","scoreS","calculateStars","activeLevelId","canPlay","activeLevelItem","updateData","updateButtons","right","updateActive","shouldPlayFirstAds","ComicsState","comics","nextBtn","onNextClicked","prevBtn","onPrevClicked","okBtn","removeFromCache","destroy","updateImage","EGAAdAction","EGAAdError","EGAAdType","increaseBlocks","physicsOnly","timeScale","Game","skip","evt","shapeA","shapeB","bodyA","bodyB","instanceA","instanceB","correctType","levelComplete","gameOver","inst","instB","changePosition","activeState","noState","hitTest","heartDeath","startLoading","loader","onProgress","onError","url","loadFonts","resources","startAfterLoading","WebFont","custom","families","urls","active","timeout","preloader","getElementById","display","GA","setEnabledInfoLog","live","lang","sKey","initialize","process","sendValueEvent","category","addDesignEvent","gtag","status","date","addProgressionEvent","Fail","sendAdEvent","action","addAdEvent","addAdEventWithNoAdReason","FailedShow","Show","RewardReceived","label","JSON","stringify","addErrorEvent","setLive","onfocus","Howler","onblur","onload","obj","Broadphase","canCollide","KINEMATIC","typeA","typeB","gameTypeA","gameTypeB","sleepState","SLEEPING"],"mappings":"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","file":"bundle.0995db97af9f432845df.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([200,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Howl } from \"howler\";\r\nexport class SoundManager {\r\n    private path: string;\r\n    private all: { [key: string]: Howl };\r\n    private musics: { [key: string]: Howl };\r\n    private mutedSounds: boolean;\r\n    private mutedMusic: boolean;\r\n    public init(path: string) {\r\n        this.path = path;\r\n        this.all = {};\r\n        this.musics = {};\r\n        this.mutedSounds = false;\r\n        this.mutedMusic = false;\r\n    }\r\n    public set muteMusic(m: boolean) {\r\n        this.mutedMusic = m;\r\n        this.musics[\"music\"]?.mute(m);\r\n    }\r\n    public set muteSounds(m: boolean) {\r\n        this.mutedSounds = m;\r\n        for (const s in this.all) {\r\n            if (this.all[s]) {\r\n                this.all[s].mute(m);\r\n            }\r\n        }\r\n    }\r\n    public get muteSounds() {\r\n        return this.mutedSounds;\r\n    }\r\n    public get muteMusic() {\r\n        return this.mutedMusic;\r\n    }\r\n    \r\n    public add(name: string, settings?: { autoplay?: boolean; loop?: boolean; volume: number }) {\r\n        if (this.all[name]) return;\r\n        if (!this.path) {\r\n            throw new Error(\"setup path for sounds\");\r\n        }\r\n        const src: string[] = [\"mp3\", \"ogg\"].map((value) => {\r\n            return `${this.path}/${name}.${value}`;\r\n        });\r\n        \r\n        const m = new Howl({\r\n            src,\r\n            autoplay: settings?.autoplay,\r\n            loop: settings?.loop,\r\n            volume: settings?.volume || 1,\r\n        });\r\n\r\n        if (name !== \"music\") {\r\n            this.all[name] = m;\r\n        } else {\r\n            this.musics[name] = m;\r\n        }\r\n    }\r\n    public play(name: string) {\r\n        if (!this.all[name]) {\r\n            console.error(\"no sound was found\");\r\n            return;\r\n            //throw new Error(\"no sound was found\");\r\n        }\r\n        this.all[name].play();\r\n    }\r\n}\r\nexport const sounds = new SoundManager();","import { Container } from \"@pixi/display\";\r\nimport { BaseState } from \"./BaseState\";\r\n\r\nexport class StateManager {\r\n    private states: Map<{new(): BaseState}, BaseState>;\r\n    private currentState: BaseState;\r\n    private stage: Container;\r\n    constructor(stage: Container) {\r\n        this.stage = stage;\r\n        this.states = new Map<{new(): BaseState}, BaseState>();\r\n    }\r\n    public get activeState() {\r\n        return this.currentState;\r\n    }\r\n    public add<T extends BaseState>(state: T):void {\r\n        this.states.set(<typeof BaseState>state.constructor as unknown as { new(): T}, state);\r\n        state.create();\r\n    }\r\n    public start<T extends BaseState>(c: { new(): T}, ...params: any): void {\r\n        const state  = this.states.get(c);\r\n        if (state) {\r\n            if ( this.currentState) {\r\n                this.currentState.close();\r\n                this.stage.removeChild(this.currentState);\r\n            }\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        } else {\r\n            throw new Error(`No state ${c}`);\r\n        }\r\n    }\r\n    public async restart(...params: any) {\r\n        const state = this.currentState;\r\n        if ( this.currentState) {\r\n            await this.currentState.close();\r\n            this.stage.removeChild(this.currentState);\r\n        }\r\n        window.setTimeout(()=> {\r\n            state.start(params);\r\n            this.currentState = state;\r\n            this.stage.addChild(this.currentState);\r\n        },100);\r\n        \r\n    }\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport gsap, { Linear } from \"gsap\";\r\n\r\nexport class LoadingPopup extends Container {\r\n    private sprite: Sprite;\r\n    constructor(width: number, height: number) {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5);\r\n        back.tint = 0;\r\n        back.alpha =0.6;\r\n        back.width = width*2;\r\n        back.height = height*2;\r\n        back.interactive = true;\r\n        this.addChild(back);\r\n\r\n        this.sprite = Sprite.from(\"assets/preloader.png\");\r\n        this.sprite.anchor.set(0.5,0.5);\r\n        this.addChild(this.sprite);\r\n    }\r\n    public show() {\r\n        this.visible = true;\r\n        this.rotate();\r\n    }\r\n    public hide() {\r\n        this.visible = false;\r\n        gsap.killTweensOf(this.sprite);\r\n    }\r\n    private rotate() {\r\n        this.sprite.rotation = 0;\r\n        gsap.to(this.sprite, {rotation: Math.PI*2, duration: 5, ease: Linear.easeNone, onComplete: ()=> {\r\n            this.rotate();\r\n        }});\r\n    }\r\n}","import { AppLoaderPlugin } from \"@pixi/loaders\";\r\nimport { SpritesheetLoader } from \"@pixi/spritesheet\";\r\nimport { BitmapFontLoader } from \"@pixi/text-bitmap\";\r\nimport { Application } from \"@pixi/app\";\r\nimport { Loader } from \"@pixi/loaders\";\r\nimport { StateManager } from \"./states/StateManager\";\r\nimport { IApplicationOptions, settings, Texture } from \"pixi.js\";\r\nimport { Container, DisplayObject } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { LoadingPopup } from \"./LoadingPopup\";\r\nimport p2, { ContactMaterial, Equation, Material } from \"p2\";\r\nimport { ILevelData } from \"../game/states/GameViewState\";\r\n\r\n\r\nApplication.registerPlugin(AppLoaderPlugin);\r\nLoader.registerPlugin(SpritesheetLoader);\r\nLoader.registerPlugin(BitmapFontLoader);\r\n\r\nexport let world: p2.World;\r\nexport let interaction: any;\r\nexport let app: Application;\r\nexport let unusedBodies: p2.Body[] = [];\r\nexport let gameSettings = {\r\n    started: false,\r\n    paused: false,\r\n    scale: 1,\r\n    realHeight: 1,\r\n    originalWidth: 1,\r\n    originalHeight: 1,\r\n    levels: [] as ILevelData[],\r\n    particles: undefined,\r\n    material: undefined,\r\n    bounceMaterial: undefined,\r\n    activeBallMaterial: undefined,\r\n    slowmo: false\r\n};\r\nexport let stateManager: StateManager;\r\nexport const METER_SIZE = 50;\r\n\r\nlet loading: LoadingPopup;\r\nexport const showLoading = () => {\r\n  if (loading) {\r\n    loading.show();\r\n  }\r\n}\r\nexport const hideLoading = () => {\r\n  if (loading) {\r\n    loading.hide();\r\n  }\r\n}\r\n\r\nexport abstract class BaseGame {\r\n    constructor(width: number, height: number) {\r\n        const options: IApplicationOptions = {\r\n            width: width,\r\n            height: height,\r\n            autoDensity: true,\r\n            resolution: 2,\r\n            backgroundColor: 0xbbd3e4\r\n          };\r\n          gameSettings.originalWidth = width;\r\n          gameSettings.originalHeight = height;\r\n          app = new Application(options);\r\n          document.body.appendChild(app.view);\r\n          settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\r\n          app.view.style.left = \"0%\";\r\n          app.view.style.top = \"0%\";\r\n          app.view.style.width = \"100%\";\r\n          app.view.style.height = \"100%\";\r\n          interaction = app.renderer.plugins.interaction;\r\n          app.stage.interactive = true;\r\n          app.ticker.maxFPS = 60;\r\n          const stage = new Container();\r\n          app.stage.addChild(stage);\r\n          world = new p2.World({gravity:[0, -10]});\r\n          this.initContactListener();\r\n          const material = new Material();\r\n          const activeBallMaterial = new Material();\r\n          const bounceMaterial = new Material();\r\n          gameSettings.material = material;\r\n          gameSettings.bounceMaterial = bounceMaterial;\r\n          gameSettings.activeBallMaterial = activeBallMaterial;\r\n          world.addContactMaterial(new ContactMaterial(material, material, {restitution: 0, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.addContactMaterial(new ContactMaterial(activeBallMaterial, bounceMaterial, {restitution: 1, stiffness: Equation.DEFAULT_STIFFNESS/3}));\r\n          world.emitImpactEvent = false;\r\n          app.ticker.add(() => {\r\n            if (gameSettings.paused) return;\r\n            const step = 1 / (gameSettings.slowmo ? 400 : 60);\r\n            world.step(step, 1 / 10, 3);\r\n            world.bodies.forEach((body)=> {\r\n              const sprite: DisplayObject = (body as any).userData;\r\n              if (sprite && sprite.transform) {\r\n                const v2 = body.position;\r\n                sprite.position.set(v2[0] * METER_SIZE, v2[1] * METER_SIZE);\r\n                sprite.rotation = body.angle;\r\n              }\r\n            });\r\n            this.customLogic(step);\r\n          });\r\n          this.start(app, stage);\r\n          loading = new LoadingPopup(width, height);\r\n          loading.hide();\r\n          stage.addChild(loading);\r\n    }\r\n    protected customLogic(step: number) {\r\n        unusedBodies.forEach((body) => world.removeBody(body));\r\n        this.clearBodyArray();\r\n    }\r\n    protected clearBodyArray(){\r\n      unusedBodies = [];\r\n    }\r\n    private async start(app: Application, stage: Container) {\r\n        const backC = new Container();\r\n        stage.addChild(backC);\r\n        const game = new Container();\r\n        stage.addChild(game);\r\n        stateManager = new StateManager(game);\r\n        await this.load();\r\n        const back = Sprite.from(Texture.from(\"back1.png\"));\r\n        backC.addChild(back);\r\n\r\n        this.createStates();\r\n    \r\n        const calculateCanvasSize = () => {\r\n          return { width: innerWidth, height: innerHeight };\r\n        };\r\n        const resize = () => {\r\n          const { width, height } = calculateCanvasSize();\r\n          app.renderer.resize(width, height);\r\n          /*const scaleBack =\r\n            width / height > gameSettings.originalWidth / gameSettings.originalHeight ? width / gameSettings.originalWidth : height / gameSettings.originalHeight;\r\n          backC.scale.set(scaleBack, scaleBack);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );*/\r\n    \r\n          gameSettings.realHeight = height;\r\n          loading.height = height;\r\n          loading.scale.x = loading.scale.y;\r\n    \r\n          const scale = height / gameSettings.originalHeight;\r\n          gameSettings.scale = scale;\r\n          game.scale.set(scale, scale);\r\n\r\n          backC.scale.set(scale, scale);\r\n          backC.position.set(\r\n            width * 0.5 - backC.width * 0.5,\r\n            height * 0.5 - backC.height * 0.5\r\n          );\r\n    \r\n          game.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n          loading.position.set(\r\n            backC.position.x + backC.width * 0.5,\r\n            backC.position.y + backC.height * 0.5\r\n          );\r\n        };\r\n        window.addEventListener(\"resize\", resize);\r\n        resize();\r\n    }\r\n    protected abstract initContactListener();\r\n    protected abstract createStates();\r\n    protected abstract load(): Promise<void>;\r\n}","import { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class DummySocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return false;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    //nothing\r\n  }\r\n  public gameplayStop(): void {\r\n    //nothing\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    //nothing\r\n  }\r\n  public async finishLoading() {\r\n    return;\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    return {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"\",\r\n      secretKey: \"\",\r\n    };\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    return;\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n}\r\n","import { sendAdEvent, EGAAdAction, EGAAdType, sendError } from \"../../..\";\r\nimport { IInited, ILeaderboardEntry, IPlayerEntry, ISocial } from \"../SocialManager\";\r\n\r\nexport class PokiSocial implements ISocial {\r\n  public showGlobalLeaders(score: number) {\r\n    //nothing\r\n  }\r\n  public shouldLeadersShow(): boolean {\r\n    return false;\r\n  }\r\n  public atatappLink(): string {\r\n    return \"\";\r\n  }\r\n    public shouldPlayFirstAds(): boolean {\r\n        return true;\r\n      }\r\n  public shouldShareShow(): boolean {\r\n    return false;\r\n  }\r\n  public shouldScalePlayer(): boolean {\r\n    return false;\r\n  }\r\n  public gameplayStart(): void {\r\n    PokiSDK.gameplayStart();\r\n  }\r\n  public gameplayStop(): void {\r\n    PokiSDK.gameplayStop();\r\n  }\r\n  public async createShortcut(): Promise<void> {\r\n    return;\r\n  }\r\n  public showInvitePage(): void {\r\n    //nothing\r\n  }\r\n  public shareScore(txt: string): void {\r\n    //nothing\r\n  }\r\n  public startLoading(): void {\r\n    PokiSDK.gameLoadingStart();\r\n  }\r\n  public async finishLoading() {\r\n    PokiSDK.gameLoadingFinished();\r\n  }\r\n  public loadingProgress(p: number): void {\r\n    //nothing\r\n  }\r\n  public performHapticFeedback() {\r\n    //nothing\r\n  }\r\n  public async getFriends(): Promise<ILeaderboardEntry[]> {\r\n    return [];\r\n  }\r\n  public getPlayerEntry(): IPlayerEntry {\r\n    return undefined;\r\n  }\r\n  public async setScore(value: number): Promise<void> {\r\n    return;\r\n  }\r\n  public async getScore(): Promise<number> {\r\n    return 0;\r\n  }\r\n  public async setStorageData(key: string, value: string): Promise<void> {\r\n    return;\r\n  }\r\n  public async getStorageData(key: string, value?: string): Promise<string> {\r\n    return value;\r\n  }\r\n  public async init(): Promise<IInited> {\r\n    const r = {\r\n      success: true,\r\n      language: \"en\",\r\n      gameKey: \"858dec355a72c9195a2a9d7b5b236599\",\r\n      secretKey: \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\",\r\n    };\r\n    try {\r\n      PokiSDK.setDebug(false);\r\n    } catch(e) {\r\n      sendError(e);\r\n    }\r\n    \r\n    return new Promise<IInited>((resolve)=> {\r\n      PokiSDK.init().then(()=> {\r\n        resolve(r);\r\n      }).catch(()=> {\r\n        sendError({\"error\":\"Ad block\"});\r\n        resolve(r);\r\n      });\r\n    });\r\n  }\r\n  public async showInter(): Promise<void> {\r\n    await PokiSDK.commercialBreak();\r\n    sendAdEvent(EGAAdAction.Show, EGAAdType.Interstitial);\r\n  }\r\n  public async showReward(): Promise<boolean> {\r\n    const r = await PokiSDK.rewardedBreak();\r\n    sendAdEvent(\r\n      r ? EGAAdAction.RewardReceived : EGAAdAction.Show,\r\n      EGAAdType.RewardedVideo\r\n    );\r\n    return r;\r\n  }\r\n}\r\n","import { live, sendError } from \"../..\";\r\nimport { sounds } from \"../../core/SoundManager\";\r\nimport { hideLoading, showLoading } from \"../BaseGame\";\r\nimport { DummySocial } from \"./social/DummySocial\";\r\nimport { FBSocial } from \"./social/FBSocial\";\r\nimport { PokiSocial } from \"./social/PokiSocial\";\r\nexport enum AdType {\r\n    RewardedVideo = 2,\r\n    Interstitial = 4,\r\n}\r\nexport interface ILeaderboardEntry {\r\n    rank: number;\r\n    score: number;\r\n    highscore?: number;\r\n    player: IPlayerEntry;\r\n    hasBonus?: boolean;\r\n    friend?: boolean;\r\n}\r\nexport interface IPlayerEntry {\r\n    name: string; \r\n    photo: string; \r\n    player_id: string;\r\n}\r\nexport interface IInited {\r\n    success: boolean, \r\n    gameKey: string, \r\n    secretKey: string, \r\n    language: string\r\n}\r\nexport interface ISocial {\r\n    init(): Promise<IInited>;\r\n    setStorageData(key: string, value: string): Promise<void>;\r\n    getStorageData(key: string, value?: string): Promise<string>;\r\n    setScore(value: number): Promise<void>;\r\n    getScore(): Promise<number>;\r\n    getPlayerEntry(): IPlayerEntry;\r\n    getFriends(): Promise<ILeaderboardEntry[]>;\r\n    showInter(): Promise<void>;\r\n    showReward(): Promise<boolean>;\r\n    showReward(): Promise<boolean>;\r\n    performHapticFeedback(): void;\r\n    startLoading(): void;\r\n    finishLoading(): Promise<void>;\r\n    loadingProgress(p: number): void;\r\n    shareScore(txt: string): void;\r\n    showInvitePage(): void;\r\n    createShortcut(): Promise<void>;\r\n    showGlobalLeaders(score: number): void;\r\n    gameplayStart(): void;\r\n    gameplayStop(): void;\r\n    shouldShareShow(): boolean;\r\n    shouldLeadersShow(): boolean;\r\n    shouldScalePlayer(): boolean;\r\n    shouldPlayFirstAds(): boolean;\r\n    atatappLink(): string;\r\n}\r\nconst getLocalStorage = () => {\r\n    try {\r\n        return localStorage;\r\n    } catch (ex) {\r\n        return undefined;\r\n    }\r\n};\r\nlet instance: ISocial;\r\nlet firstPlay: boolean = true;\r\nexport const initSocial = async(): Promise<IInited> => {\r\n    return new Promise<IInited>((resolve, reject)=> {\r\n        /*let t = window.setTimeout(()=> {\r\n            resolve({success: false, gameKey: \"72f259223556fc5ce732f0212865799b\", secretKey: \"7e2cf87503012b4c2e1f2346c99ac6e9c411b5ff\", language: \"en\"});\r\n        }, 5000);*/\r\n        if (process.env.NET === \"1\") {\r\n            instance = new FBSocial();\r\n        } else if (process.env.NET === \"4\") {\r\n            instance = new PokiSocial();\r\n        } else {\r\n            instance = new DummySocial();\r\n        }\r\n        if (instance) {\r\n            instance.init().then((b)=> {\r\n                //window.clearTimeout(t);\r\n                resolve(b);\r\n            }).catch((r)=>{\r\n                sendError({\"error\":\"initSocial\"});\r\n                reject();\r\n            });\r\n        }\r\n    });\r\n}\r\nexport const setScore = async(score: number) => {\r\n    const s = await getScore();\r\n    if (score > s) {\r\n        getLocalStorage()?.setItem(\"highscore\", score.toString());\r\n    }\r\n    await instance.setScore(score);\r\n}\r\nexport const getScore = async(): Promise<number> => {\r\n    let s = await instance.getScore();\r\n    if (!s || s === 0) {\r\n        s = parseInt(getLocalStorage()?.getItem(\"highscore\")) || 0;\r\n    }\r\n    return s;\r\n}\r\nexport const setStorageData = async(key: string, value: string): Promise<void> => {\r\n    getLocalStorage()?.setItem(key, value);\r\n    await instance.setStorageData(key, value);\r\n}\r\nexport const getStorageData = async(key: string, value?: string): Promise<string> => {\r\n    let s = await instance.getStorageData(key, value);\r\n    if (s === value) {\r\n        s = getLocalStorage()?.getItem(key) || value;\r\n    }\r\n    return s;\r\n}\r\nexport const getPlayerEntry = (): IPlayerEntry => {\r\n    let p = instance.getPlayerEntry();\r\n    if (!p) {\r\n        p = {\r\n            name: \"You\",\r\n            player_id: \"999\",\r\n            photo: \"assets/images/player26.jpg\",\r\n        }\r\n    }\r\n    return p;\r\n}\r\nexport const getFriends = async(): Promise<ILeaderboardEntry[]> => {\r\n    const p = [];\r\n    for (let i = 0; i < 26; i++) {\r\n        p.push(`assets/images/player${i}.jpg`);\r\n    }\r\n    let score = 0;\r\n    const r:ILeaderboardEntry[] = await instance.getFriends();\r\n    const l = 19 - r.length;\r\n    for (let i = 0; i < l; i++) {\r\n        score += Math.floor(Math.random()*600) + 100;\r\n        const entry = {rank: 1, score: score, player: {name: `Player${i}`, photo: p.splice(Math.floor(Math.random()*p.length),1)[0], player_id: i.toString()}};\r\n        r.push(entry);\r\n    }\r\n    return r;\r\n}\r\nexport const showADS = async(type: AdType): Promise<boolean> => {\r\n    let r = false;\r\n    showLoading();\r\n    const mutedMusic = sounds.muteMusic;\r\n    const muteSounds = sounds.muteSounds;\r\n    sounds.muteMusic = true;\r\n    sounds.muteSounds = true;\r\n    switch (type) {\r\n        case AdType.Interstitial:\r\n            await instance.showInter();\r\n            r = true;\r\n            break;\r\n        case AdType.RewardedVideo:\r\n            r = await instance.showReward();\r\n            break;\r\n    }\r\n    firstPlay = false;\r\n    hideLoading();\r\n    sounds.muteMusic = mutedMusic;\r\n    sounds.muteSounds = muteSounds;\r\n    return r;\r\n}\r\nexport const performHapticFeedback = () => {\r\n    instance.performHapticFeedback();\r\n}\r\nexport const startLoading = () => {\r\n    instance.startLoading();\r\n}\r\nexport const loadingProgress = (p) => {\r\n    instance.loadingProgress(p);\r\n}\r\nexport const finishLoading = async() => {\r\n    return instance.finishLoading();\r\n}\r\nexport const shouldScalePlayer = (): boolean => {\r\n    return live && instance.shouldScalePlayer();\r\n}\r\nexport const shouldShareShow = (): boolean => {\r\n    return instance.shouldShareShow();\r\n}\r\nexport const shouldLeadersShow = (): boolean => {\r\n    return instance.shouldLeadersShow();\r\n}\r\nexport const shouldPlayFirstAds = (): boolean => {\r\n    return firstPlay && instance.shouldPlayFirstAds();\r\n}\r\nexport const shareScore = (txt: string) => {\r\n    instance.shareScore(txt);\r\n}\r\nexport const showInvitePage = () => {\r\n    instance.showInvitePage();\r\n}\r\nexport const createShortcut = async()=> {\r\n    if (!firstPlay) return;\r\n    return await instance.createShortcut();\r\n}\r\nexport const gameplayStart = () => {\r\n    instance.gameplayStart();\r\n}\r\nexport const gameplayStop = () => {\r\n    instance.gameplayStop();\r\n}\r\nexport const atatappLink = () => {\r\n    return instance.atatappLink();\r\n}\r\nexport const showGlobalLeaders = (score: number) => {\r\n    instance.showGlobalLeaders(score);\r\n}","import { Container } from \"@pixi/display\";\r\n\r\nexport abstract class BaseState extends Container {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public abstract create(): void;\r\n    public abstract start(...params: any): void;\r\n    public abstract close(): Promise<void>;\r\n}","import { Texture } from \"@pixi/core\";\r\nimport { Container, IDestroyOptions } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { sounds } from \"../SoundManager\";\r\n\r\nexport class Button extends Container {\r\n    protected normalTexture: Texture;\r\n    protected downTexture: Texture;\r\n    private isDisabled: boolean = false;\r\n    private isDown: boolean;\r\n    protected btn: Sprite;\r\n\r\n    constructor(normalState: string, downState: string) {\r\n        super();\r\n        this.normalTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(normalState);\r\n        this.downTexture = (normalState === \"\") ? Texture.WHITE : Texture.from(downState);\r\n        this.btn = Sprite.from(this.normalTexture);\r\n        this.btn.anchor.set(0.5,0.5);\r\n        this.addChild(this.btn);\r\n\r\n        this.on(\"pointerdown\", this.onButtonDown.bind(this))\r\n            .on(\"pointerup\", this.onButtonUp.bind(this))\r\n            .on(\"pointerupoutside\", this.onButtonUp.bind(this))\r\n            .on(\"pointerout\", this.onButtonOut.bind(this));\r\n\r\n        this.disabled = false;\r\n    }\r\n    public set disabled(value: boolean) {\r\n        this.isDisabled = value;\r\n        if (this.isDisabled) {\r\n            this.interactive = false;\r\n            this.buttonMode = false;\r\n            this.btn.alpha = 0.5;\r\n        } else {\r\n            this.interactive = true;\r\n            this.buttonMode = true;\r\n            this.btn.alpha = 1;\r\n        }\r\n    }\r\n    public get disabled(): boolean {\r\n        return this.isDisabled;\r\n    }\r\n    public onButtonOut() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.isDown) {\r\n            return;\r\n        }\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n\r\n    protected onButtonDown(e: any) {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        sounds.play(\"click\");\r\n        this.isDown = true;\r\n        this.btn.texture = this.downTexture;\r\n    }\r\n    protected onButtonUp() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.isDown = false;\r\n        this.btn.texture = this.normalTexture;\r\n    }\r\n    override destroy(options?: boolean | IDestroyOptions): void {\r\n        this.off(\"pointerdown\")\r\n            .off(\"pointerup\")\r\n            .off(\"pointerupoutside\")\r\n            .off(\"pointerout\");\r\n        super.destroy(options);\r\n    }\r\n}","import { Text } from \"pixi.js\";\r\nimport { lang } from \"../..\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport class TextedButton extends Button {\r\n    protected txt: Text;\r\n    constructor(text: string, size: number, color: number, textColor: number) {\r\n        super(\"\", \"\");\r\n\r\n        this.txt = new Text(text, {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: size, fill: textColor});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.addChild(this.txt);\r\n        this.btn.tint = color;\r\n        this.btn.alpha = 0.001;\r\n        this.btn.width = this.txt.width + 100;\r\n        this.btn.height = this.txt.height + 50;\r\n    }\r\n    public set text(t: string) {\r\n        this.txt.text = t;\r\n    }\r\n}","import { Container } from \"@pixi/display\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport p2, { Body, Shape } from \"p2\";\r\nimport { CircleBlock } from \"../game/states/game/CircleBlock\";\r\nimport { METER_SIZE, unusedBodies, world } from \"./BaseGame\";\r\n\r\nexport enum ECollisionGroups {\r\n    NO = 0,\r\n    WALLS = Math.pow(2,0),\r\n    BALLS = Math.pow(2,1),\r\n    MOVER = Math.pow(2,2),\r\n    OBSTACLES = Math.pow(2,3)\r\n}\r\nexport abstract class PhysicsSprite extends Container {\r\n    public body: p2.Body;\r\n    public shape : p2.Shape;\r\n    public type: number;\r\n    protected view: Sprite;\r\n    \r\n    constructor(type: number) {\r\n        super();\r\n        this.type = type;\r\n        this.view = this.createView();\r\n        this.view.anchor.set(0.5, 0.5);\r\n        this.addChild(this.view);\r\n    }\r\n    public createBody(physType: 1|2|4, mass: number = 5) {\r\n        this.view.alpha = 1;\r\n        const pos: [number, number] = [this.position.x / METER_SIZE, this.position.y / METER_SIZE];\r\n        this.shape = this.createShape();\r\n        this.body = new Body({type: physType, position: pos, mass, damping: 0, angularDamping: 0});\r\n        this.body.addShape(this.shape);\r\n        world.addBody(this.body);\r\n        (this.body as any).userData = this;\r\n    }\r\n    public clean(i: boolean = false) {\r\n        this.destroyBody(i);\r\n        this.parent && this.parent.removeChild(this);\r\n    }\r\n    protected destroyBody (immidiately: boolean = false) {\r\n        if (this.body) {\r\n            if (immidiately) {\r\n                world.removeBody(this.body);\r\n            } else {\r\n                unusedBodies.push(this.body);\r\n            }\r\n            this.body = undefined;\r\n        }\r\n    }\r\n    public correctType() {\r\n        return this.type !== 0 && (this.type < 20 || this.type === 250 || this.type === 251 || this.type === CircleBlock.skullType);\r\n    }\r\n    protected abstract createView(): Sprite;\r\n    protected abstract createShape(): Shape;\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class Explosion extends Container{\r\n    private static textures;\r\n    private art: Sprite;\r\n    constructor(play: boolean = true, delay: number = 0) {\r\n        super();\r\n        Explosion.createTextures();\r\n        this.art = Sprite.from(Explosion.textures[0]);\r\n        this.art.anchor.set(0.5,0.5);\r\n        this.addChild(this.art);\r\n        this.scale.set(0, 0);\r\n        if (play) this.animate(delay);\r\n    }\r\n    \r\n    public async animate(delay: number = 0) {\r\n        return new Promise<void>((resolve)=>{\r\n            let frame = 0;\r\n            const p = {a: 0};\r\n            gsap.to(p, {a: 1, delay: delay, duration: delay+0.4, onUpdate: ()=> {\r\n                const nf = Math.floor(p.a * 2);\r\n                if (nf !== frame) {\r\n                    frame = nf;\r\n                    this.art.texture = Explosion.textures[frame];\r\n                }\r\n            }});\r\n\r\n            gsap.to(this.scale, {x: 1, y: 1, duration: delay+0.1});\r\n            gsap.to(this.scale, {x: 1.3, y: 1.3, delay: delay+0.2, duration: 0.3});\r\n            gsap.to(this, {alpha: 0, delay:delay+0.2, duration: 0.5, onComplete: ()=> {\r\n                resolve();\r\n            }});\r\n        });\r\n        \r\n    }\r\n    static createTextures() {\r\n        if (!Explosion.textures) {\r\n            Explosion.textures = [Texture.from(\"game_explosion_0.png\"), Texture.from(\"game_explosion_1.png\"), Texture.from(\"game_explosion_2.png\")]\r\n        }\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings, METER_SIZE, world } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { Body, Circle, Shape } from \"p2\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"./Explosion\";\r\n//import { GlowFilter } from \"@pixi/filter-glow\";\r\n\r\nexport class CircleBlock extends PhysicsSprite {\r\n    public static goalType = 1000;\r\n    public static endType = 500;\r\n    public static bombType = 2000;\r\n    public static skullType = 3000;\r\n    public sameColorNeighbors: Map<CircleBlock, boolean> = new Map<CircleBlock, boolean>();\r\n    protected stepsAmount = 3;\r\n    protected static scaleFactor = 0.5;\r\n    public steps = 1;\r\n    private savedType = -1;\r\n    private skullMeter = 1;\r\n    private _kinematic = false;\r\n    private permanentSkull = false;\r\n    private busy = false;\r\n    private sensorShape: Shape;\r\n\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(type);\r\n        this.permanentSkull = type === CircleBlock.skullType;\r\n\r\n        this.position.set(x,y);\r\n        if (create) {\r\n            this.createBody(Body.DYNAMIC);\r\n        }\r\n        \r\n    }\r\n    public get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n    public set kinematic(b: boolean) {\r\n        this._kinematic = b;\r\n        /*if (b) {\r\n            this.filters = [new GlowFilter({color: 0x65e4ff, quality: 0.5, outerStrength: 2})];\r\n        } else {\r\n            this.filters = [];\r\n        }\r\n        */\r\n    }\r\n    override createBody(physType: 1 | 2 | 4, mass = 5): void {\r\n        super.createBody(physType, mass);\r\n        this.sensorShape = new Circle({radius: (this.getRadius() + 5) / METER_SIZE});\r\n        this.sensorShape.sensor = true;\r\n        this.sensorShape.material = gameSettings.material;\r\n        (this.sensorShape as any).data = true;\r\n        this.body.addShape(this.sensorShape);\r\n    }\r\n    public animateAndDestroy() {\r\n        this.killTween();\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n    private killTween() {\r\n        gsap.killTweensOf(this.view.scale);\r\n    }\r\n    override clean(): void {\r\n        this.busy = false;\r\n        super.clean();\r\n    }\r\n    public decreaseSkullMeter() {\r\n        if (this.type === CircleBlock.skullType && !this.permanentSkull) {\r\n            this.skullMeter -= 1;\r\n            if (this.skullMeter === -1) {\r\n                this.removeSkull();\r\n            }\r\n        }\r\n        \r\n    }\r\n    public isSkull(): boolean {\r\n        return this.type === CircleBlock.skullType;\r\n    }\r\n    public isGoal() {\r\n        return false;\r\n    }\r\n    public setSkull() {\r\n        this.savedType = this.type;\r\n        this.skullMeter = 3;\r\n        this.kinematic = false;\r\n        this.type = CircleBlock.skullType;\r\n        this.view.texture = Texture.from(`${this.type}.png`);\r\n    }\r\n    public removeSkull() {\r\n        this.type = this.savedType;\r\n        this.savedType = -1;\r\n        this.view.texture = this.getTexture();\r\n    }\r\n    public setBomb() {\r\n        if (this.busy) return;\r\n        this.type = CircleBlock.bombType;\r\n        this.view.texture = Texture.from(\"bomb.png\");\r\n        this.killTween();\r\n        this.busy = true;\r\n        gsap.to(this.view.scale, {x: 0.4, y: 0.4, duration: 1, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }});\r\n        gsap.to(this.view.scale, {x: 1.2, y: 1.2, delay: 1, duration: 0.2, onUpdate: ()=> {\r\n            this.updateShape();\r\n        }, onComplete: ()=> {\r\n            const explosion = new Explosion();\r\n            this.addChild(explosion);\r\n            this.animateAndDestroy();\r\n        }});\r\n    }\r\n    public boom(fromBoom: boolean = true) {\r\n        return this.increase(this.stepsAmount-this.steps, fromBoom);\r\n    }\r\n    protected getRadius() {\r\n        return 35;\r\n    }\r\n    protected getTexture() {\r\n        return Texture.from(`${this.type}.png`);\r\n    }\r\n    protected createView() {\r\n        const v = new Sprite(this.getTexture());\r\n        v.scale.set(0.5,0.5);\r\n        return v;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Circle({radius: this.getRadius() / METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.BALLS;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        shape.material = gameSettings.material;\r\n        return shape;\r\n    }\r\n    \r\n    public increase(s: number, fromBoom: boolean = false): number {\r\n        if (this.busy || !this.body) return 0;\r\n        let killAmount = 0;\r\n        this.busy = true;\r\n        s += Math.max(0, this.sameColorNeighbors.size - 1);\r\n        this.steps += s;\r\n        if (this.steps >= this.stepsAmount) {\r\n            if (fromBoom) {\r\n                killAmount = 1;\r\n            }\r\n            this.killTween();\r\n            this.sameColorNeighbors.forEach((n,k)=> {\r\n                if (k !== this) {\r\n                    const a = k.increase(this.stepsAmount-k.steps, fromBoom);\r\n                    if (fromBoom) {\r\n                        killAmount += a;\r\n                    }\r\n                }\r\n            });\r\n            gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n                this.clean();\r\n            }});\r\n            this.destroyBody(fromBoom);\r\n        } else {\r\n            const i = CircleBlock.scaleFactor * this.steps;\r\n            gsap.to(this.view.scale, {x: i, y: i, duration: 0.2, onUpdate: ()=> {\r\n                this.updateShape();\r\n            }, onComplete: ()=> {\r\n                this.busy = false;\r\n            }});\r\n        }\r\n        return killAmount;\r\n    }\r\n    private updateShape() {\r\n        (this.shape as Circle).radius = this.getRadius() / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.shape.updateBoundingRadius();\r\n        (this.sensorShape as Circle).radius = (this.getRadius() + 5) / CircleBlock.scaleFactor * this.view.scale.x / METER_SIZE;\r\n        this.sensorShape.updateBoundingRadius();\r\n        this.body.updateBoundingRadius();\r\n        this.body.updateMassProperties();\r\n    }\r\n}","import { DEG_TO_RAD } from \"@pixi/math\";\r\nimport { Sprite } from \"@pixi/sprite\";\r\nimport { Body, Box, Shape } from \"p2\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport gsap from \"gsap\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\n\r\nexport class StaticBlock extends PhysicsSprite {\r\n    constructor(x: number, y: number, width: number, height: number, rot: number) {\r\n        super(0);\r\n        this.position.set(x,y);\r\n        this.view.width = width;\r\n        this.view.height = height;\r\n        this.createBody(Body.STATIC);\r\n        this.body.mass = 0;\r\n        this.body.angle = DEG_TO_RAD * rot;\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.WALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.MOVER | ECollisionGroups.OBSTACLES;\r\n        return s;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.WHITE);\r\n        view.anchor.set(0.5);\r\n        view.tint = 0x000000;\r\n        view.visible = false;\r\n        view.alpha = 0;\r\n        return view;\r\n    }\r\n    public isObstacle() {\r\n        return false;\r\n    }\r\n    public correctType() {\r\n        return false;\r\n    }\r\n    public animateAndDestroy() {\r\n        gsap.killTweensOf(this.view.scale);\r\n        gsap.to(this.view.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.clean();\r\n        }});\r\n        this.destroyBody();\r\n    }\r\n}","import { Body, Box, Shape } from \"p2\";\r\nimport { Graphics, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../core/BaseGame\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../../core/PhysicsSprite\";\r\nimport gsap, {Cubic} from \"gsap\";\r\n\r\nexport class RocketPowerup extends PhysicsSprite {\r\n    public rocket: boolean = true;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        super(300);\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.position.set(startX, startY);\r\n        if (startX !== endX) this.view.angle = 90;\r\n\r\n        this.createBody(Body.DYNAMIC);\r\n    }\r\n    override createShape(): Shape {\r\n        const s = new Box({width: 200 / METER_SIZE, height: 200 / METER_SIZE});\r\n        //s.collisionGroup = ECollisionGroups.BALLS;\r\n        //s.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS | ECollisionGroups.MOVER;\r\n        s.sensor = true;\r\n        return s;\r\n    }\r\n    protected createView(): Sprite {\r\n        return new Sprite(Texture.from(`powerup_rocket.png`));\r\n    }\r\n    public async animate() {\r\n        return new Promise<void>((r)=>{\r\n            const s = {x: this.startX, y: this.startY};\r\n            gsap.to(s, {x: this.endX, y: this.endY, duration: 1, ease: Cubic.easeIn, onComplete: ()=>{\r\n                this.clean();\r\n                r();\r\n            }, onUpdate: ()=> {\r\n                this.body.position = [s.x/METER_SIZE, s.y/METER_SIZE];\r\n            }});\r\n        });\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class GoalBlock extends CircleBlock {\r\n    private delay: gsap.core.Tween;\r\n    constructor(x: number, y: number, type: number, create: boolean = true) {\r\n        super(x, y, type, create);\r\n    }\r\n    public resetDeathCounter() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n    }\r\n    public startCountDeath() {\r\n        if (this.delay) return;\r\n        this.delay = gsap.delayedCall(4, ()=> {\r\n            this.delay = undefined;\r\n            this.emit(\"gameover\");\r\n        });\r\n    }\r\n    override destroyBody(immidiately?: boolean): void {\r\n        this.resetDeathCounter();\r\n        this.off(\"gameover\");\r\n        super.destroyBody(immidiately);\r\n    }\r\n    override setSkull() {\r\n        super.setSkull();\r\n        this.view.texture = Texture.from(`3001.png`);\r\n    }\r\n    protected createView() {\r\n        return new Sprite(this.getTexture());\r\n    }\r\n    override getTexture() {\r\n        return Texture.from(`hero.png`);\r\n    }\r\n    protected getRadius() {\r\n        return 50;\r\n    }\r\n    public isGoal() {\r\n        return true;\r\n    }\r\n}","import { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { AdType, getStorageData, setStorageData, showADS } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\n\r\nexport class PowerupButton extends Button {\r\n    private _id: EIAPBonus;\r\n    private icon: Sprite;\r\n    private txt: Text;\r\n    private amount: number;\r\n\r\n    constructor() {\r\n        super(\"\", \"\");\r\n        this.amount = 1;\r\n\r\n        this.txt = new Text(this.amount.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.txt.x = 90;\r\n        this.txt.y = 90;\r\n        this.addChild(this.txt);\r\n\r\n\r\n        this.icon = Sprite.from(Texture.from(\"bonus_ads.png\"));\r\n        this.icon.x = 15;\r\n        this.icon.y = 35;\r\n        this.addChild(this.icon);\r\n        this.icon.visible = false;\r\n\r\n        this.on(\"pointerup\", () => {\r\n            this.onPressed();\r\n        });\r\n    }\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n    public async setData (id: EIAPBonus, normalState: Texture, downState: Texture) {\r\n        this._id = id;\r\n        this.normalTexture = normalState;\r\n        this.downTexture = downState;\r\n        this.btn.texture = this.normalTexture;\r\n\r\n        this.icon.visible = false;\r\n        let storageData = await getStorageData(PowerupButton.getStorageId(this.id), undefined);\r\n        if (storageData === undefined) {\r\n            storageData = \"1\";\r\n            await setStorageData(PowerupButton.getStorageId(this.id), storageData);\r\n        }\r\n        this.amount = parseInt(storageData);\r\n        this.txt.text = storageData;\r\n        this.updateTxt();\r\n\r\n        this.scale.set(0.6, 0.6);\r\n    }\r\n    public static getStorageId(id: EIAPBonus) {\r\n        return \"powerup_\" + id.toString();\r\n    }\r\n    private updateTxt() {\r\n        if (this.amount === 0) {\r\n            this.btn.alpha = 0.6;\r\n            this.icon.visible = true;\r\n            this.txt.visible = false;\r\n        } else {\r\n            this.btn.alpha = 1;\r\n            this.icon.visible = false;\r\n            this.txt.visible = true;\r\n        }\r\n    }\r\n    private async onPressed() {\r\n        if (this.amount > 0) {\r\n            this.amount--;\r\n            await setStorageData(PowerupButton.getStorageId(this.id), this.amount.toString());\r\n            this.updateTxt();\r\n            this.emit(\"activate\", this.id);\r\n        } else {\r\n            gameSettings.paused = true;\r\n            const success = await showADS(AdType.RewardedVideo);\r\n            gameSettings.paused = false;\r\n            if (success) {\r\n                this.emit(\"activate\", this.id);\r\n            }\r\n            \r\n        }\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class NextBlocksTimer extends Container {\r\n    private bar: Sprite;\r\n    private barMask: Sprite;\r\n    private initialWidth: number = 596;\r\n    private initialHeight: number = 30;\r\n    public isFrozen: boolean;\r\n    private delay: gsap.core.Tween;\r\n    private frozen: Sprite;\r\n    private frozenBack: Sprite;\r\n    private back: Sprite;\r\n    barBorder: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.from(\"timer_1.png\"));\r\n        this.addChild(this.back);\r\n        this.frozenBack = Sprite.from(Texture.from(\"timer_frozen_1.png\"));\r\n        this.frozenBack.visible = false;\r\n        this.addChild(this.frozenBack);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"timer_2.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.x = 16;\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.addChild(this.barMask);\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"timer_0.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.x = 100;\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.frozen = new Sprite(Texture.from(\"timer_frozen_0.png\"));\r\n        this.frozen.visible = false;\r\n        this.addChild(this.frozen);\r\n    }\r\n    public setProgress(p: number) {\r\n        this.barMask.width = this.initialWidth * p;\r\n        this.barBorder.visible = p > 0.01 && p < 0.99;\r\n        this.barBorder.x = this.barMask.x + this.initialWidth * p;\r\n    }\r\n    public unFreeze() {\r\n        this.isFrozen = false;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.to(this.frozenBack, {alpha: 0, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozen, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.frozen.visible = false;\r\n            this.frozenBack.visible = false;\r\n        }});\r\n    }\r\n    public freeze(seconds: number = -1) {\r\n        this.isFrozen = true;\r\n        this.frozen.visible = true;\r\n        this.frozen.alpha = 0;\r\n        this.frozenBack.visible = true;\r\n        this.frozenBack.alpha = 0;\r\n        gsap.killTweensOf(this.frozen);\r\n        gsap.killTweensOf(this.frozenBack);\r\n        gsap.killTweensOf(this.back);\r\n        gsap.to(this.frozen, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.frozenBack, {alpha: 1, duration: 0.3});\r\n        gsap.to(this.back, {alpha: 0, duration: 0.3});\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n        }\r\n        if (seconds === -1) return;\r\n        this.delay = gsap.delayedCall(seconds, ()=> {\r\n            this.unFreeze();\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.delay) {\r\n            this.delay.kill();\r\n            this.delay = undefined;\r\n        }\r\n        gsap.killTweensOf(this.frozen);\r\n        this.frozen.visible = false;\r\n        this.frozenBack.visible = false;\r\n        this.back.alpha = 1;\r\n        this.isFrozen = false;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { AnimatedSprite, Container, Graphics, NineSlicePlane, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class BoomMeter extends Container {\r\n    private bar: Sprite;\r\n    private max: number;\r\n    private current: number;\r\n    private initialWidth: number = 170;\r\n    private barMask: Sprite;\r\n    private barBorder: Sprite;\r\n    private barShine: AnimatedSprite;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"battery_empty.png\"));\r\n        this.addChild(back);\r\n\r\n        this.bar = Sprite.from(Texture.from(\"battery_full.png\"));\r\n        this.addChild(this.bar);\r\n\r\n        this.barMask = new Sprite(Texture.WHITE);\r\n        this.barMask.width = 0;\r\n        this.barMask.height = this.bar.height;\r\n        this.barMask.x = 27;\r\n        this.addChild(this.barMask);\r\n\r\n        this.barBorder = Sprite.from(Texture.from(\"battery_border.png\"));\r\n        this.barBorder.anchor.set(0.5, 0.5);\r\n        this.barBorder.y = this.bar.height * 0.5;\r\n        this.addChild(this.barBorder);\r\n        this.barBorder.visible = false;\r\n\r\n        this.barShine = new AnimatedSprite([Texture.from(\"battery_charging0.png\"), Texture.from(\"battery_charging1.png\"), Texture.from(\"battery_charging2.png\"), Texture.from(\"battery_charging1.png\")]);\r\n        this.addChild(this.barShine);\r\n        this.barShine.animationSpeed = 0.3;\r\n        this.barShine.visible = false;        \r\n\r\n        this.bar.mask = this.barMask;\r\n\r\n        this.current = 0;\r\n        this.max = 10;\r\n    }\r\n    public set maximum(m: number) {\r\n        this.max = m;\r\n    }\r\n    public reset(noAnimation?: boolean) {\r\n        gsap.killTweensOf(this.barMask);\r\n        this.current = 0;\r\n        if (noAnimation) {\r\n            this.barMask.width = 0;\r\n        } else {\r\n            gsap.to(this.barMask, {width: 0, duration: 0.1});\r\n        }\r\n       \r\n        this.barBorder.visible = false;\r\n    }\r\n    public update(amount: number): boolean {\r\n        this.current += amount;\r\n        this.current = Math.min(this.current, this.max);\r\n        this.barShine.visible = true;\r\n        this.barShine.gotoAndPlay(0);\r\n        const wasEnd = this.current >= this.max;\r\n        const p = this.current / this.max;\r\n        this.barBorder.visible = p > 0.05 && p < 0.9;\r\n        gsap.killTweensOf(this.barMask);\r\n        gsap.to(this.barMask, {width: this.initialWidth * p, duration: 0.2});\r\n        gsap.to(this.barBorder, {x: this.barMask.x + this.initialWidth * p, duration: 0.2, onComplete: ()=> {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n        }});\r\n        if (wasEnd) {\r\n            this.barShine.visible = false;\r\n            this.barShine.stop();\r\n            this.current = 0;\r\n            gsap.to(this.barMask, {width: 0, delay: 0.2, duration: 0.2});\r\n            gsap.to(this.barBorder, {x: this.barMask.x, duration: 0.2, onUpdate: ()=> {\r\n                this.barBorder.visible = p > 0.05 && p < 0.9;\r\n            }});\r\n        }\r\n        return wasEnd;\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { CircleBlock } from \"./CircleBlock\";\r\n\r\nexport class Message extends Container {\r\n    private back: NineSlicePlane;\r\n    public blocks: CircleBlock[];\r\n    private startX: number;\r\n    private startY: number;\r\n    private txt: Text;\r\n    private static senders = [\"Mom\", \"Dad\", \"Boss\", \"Red Hair\", \"Stupid guy\", \"Handsome stranger\", \"Vampire\", \"Lady Hamilton\", \"Dude\", \"Sis\", \"Bro\", \"Grany\", \"Kurt\", \"Kristin\", \"Leo Di\", \"Emergency\"];\r\n    constructor() {\r\n        super();\r\n        this.blocks = [];\r\n        this.back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        this.back.width = gameSettings.originalWidth * 0.96;\r\n        this.back.height = 300;\r\n        this.back.position.set(-this.back.width * 0.5, 0);\r\n        this.addChild(this.back);\r\n\r\n        this.txt = new Text(\"From: Leopold\",{fontSize: 25, fill: 0x000000, fontWeight: \"bold\", align: \"left\"});\r\n        this.txt.anchor.set(0, 0.5);\r\n        this.txt.position.set(-this.back.width * 0.5 + 40, 30);\r\n        this.addChild(this.txt);\r\n        this.clear();\r\n    }\r\n    public setLines(nextLines: number[][]) {\r\n        this.txt.text = \"From: \" + Message.senders[Math.floor(Math.random()*Message.senders.length)];\r\n        const lines = nextLines.length;\r\n        this.back.height = lines * 75 + 70;\r\n        this.startX = -300;\r\n        this.startY = 95;\r\n\r\n        for (let j = 0; j < lines; j++) {\r\n            let xx = this.startX;\r\n            for (let i = 0; i < nextLines[j].length; i++) {\r\n                const f = new CircleBlock(xx,this.startY,nextLines[j][i],false);\r\n                this.addBlock(f);\r\n                xx += 74;\r\n            }\r\n            this.startY+=70;\r\n        }\r\n    }\r\n    public addBlock(f: CircleBlock) {\r\n        this.blocks.push(f);\r\n        this.addChild(f);\r\n        f.visible = false;\r\n    }\r\n    public show() {\r\n        this.blocks.forEach((f)=> {\r\n            f.visible = true;\r\n        });\r\n    }\r\n    public clear() {\r\n        this.blocks.forEach((f)=> {\r\n            this.removeChild(f);\r\n        });\r\n        this.blocks = [];\r\n    }\r\n}","import { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class BonusIntroLetter extends Container {\r\n    private txt: Text;\r\n    constructor() {\r\n        super();\r\n        const back = new Sprite(Texture.from(\"letter_button.png\"));\r\n        back.anchor.set(0.5, 0.5);\r\n        this.addChild(back);\r\n\r\n        this.txt = new Text(\"\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 60, fill: 0x000000, align: \"center\", fontWeight: \"bold\"});\r\n        this.txt.anchor.set(0.5, 0.5);\r\n        this.addChild(this.txt);\r\n    }\r\n    public set letter(l: string) {\r\n        if (l === \" \") l = \"*\";\r\n        this.txt.text = l;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../../core/BaseGame\";\r\nimport { EBonus } from \"../../GameViewState\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport abstract class BaseBonus extends Container {\r\n    protected bound: Rectangle = new Rectangle();\r\n    protected back: Sprite;\r\n    protected letters: BonusIntroLetter[];\r\n    protected stringLetters: string[];\r\n    protected getPoint?: () => any;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5,0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.stringLetters = this.getLetters();\r\n        this.letters = [];\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            const item = new BonusIntroLetter();\r\n            item.visible = false;\r\n            this.addChild(item);\r\n            this.letters.push(item);\r\n        }\r\n    }  \r\n    public async start(getPoint?: () => any): Promise<any> {\r\n        this.getPoint = getPoint;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        const amounts: number[] = [];\r\n        let l = 0;\r\n        for (let i = 0; i < this.stringLetters.length; i++) {\r\n            l++;\r\n            if (this.stringLetters[i] === \" \") {\r\n                amounts.push(l);\r\n                l = 0;\r\n            }\r\n        }\r\n        if (amounts.length === 0) {\r\n            amounts.push(this.stringLetters.length);\r\n        } else {\r\n            amounts.push(l);\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            const stepX = 100;\r\n            const stepY = 140;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 1});\r\n            let counter = 0;\r\n            let angle = -30;\r\n            let currentLength = amounts[counter];\r\n            let dAngle = 60 / (currentLength - 1);\r\n            let w = stepX * currentLength;\r\n            let x = -w*0.5;\r\n            let dx = w / (currentLength - 1);\r\n            let y = -400;\r\n            const items = [];\r\n            const ll = this.stringLetters.length;\r\n            for (let i = 0; i < ll; i++) {\r\n                const item = this.letters.pop();\r\n                items.push(item);\r\n                item.visible = true;\r\n                item.letter = this.stringLetters[i];\r\n                item.position.set(-400, 700);\r\n                item.scale.set(0.1, 0.1);\r\n                item.angle = angle - 30;\r\n                gsap.to(item, {angle, x, y, delay: i*0.1, duration: 0.5});\r\n                gsap.to(item.scale, {x: 1, y: 1, delay: i*0.1, duration: 0.5});\r\n                if (this.stringLetters[i] === \" \") {\r\n                    counter++;\r\n                    angle = -30;\r\n                    currentLength = amounts[counter];\r\n                    dAngle = 60 / (currentLength - 1);\r\n                    w = stepX * currentLength;\r\n                    x = -w*0.5;\r\n                    y += stepY;\r\n                    dx = w / (currentLength - 1);\r\n                } else {\r\n                    angle += dAngle;\r\n                    x += dx;\r\n                }\r\n                \r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: 1.2, duration: 0.5});\r\n            gsap.delayedCall(1 + (this.stringLetters.length-1)*0.1, ()=> {\r\n                this.animate(items).then(()=>{\r\n                    resolve();\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    public clean(): void {\r\n        this.getPoint = undefined;\r\n        gsap.killTweensOf(this.back);\r\n    }\r\n    public goOut(): Promise<void> {\r\n        return;\r\n    }  \r\n    public abstract get activeBound(): Rectangle[];  \r\n    protected abstract getLetters(): string[];\r\n    protected abstract animate(items: BonusIntroLetter[]): Promise<void>;\r\n}","import { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport gsap, { Expo, Linear } from \"gsap\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class BoomLettersBonus extends BaseBonus {\r\n    private points: [number, number][] = [];\r\n    public get activeBound() {\r\n        if (this.points.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i];\r\n                arr.push(new Rectangle(point[0] - 1, point[1] - 1, 2, 2))\r\n            }\r\n            this.points = [];\r\n            return arr;\r\n        }\r\n        return undefined;\r\n    }\r\n    public clean(): void {\r\n        this.points = [];\r\n        super.clean();\r\n    }  \r\n    protected getLetters(): string[] {\r\n        return [\"B\", \"O\", \"O\", \"M\", \" \", \"B\", \"O\", \"N\", \"U\", \"S\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        this.points = [];\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint) {\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const currentPoint = this.getPoint();\r\n                    if (!currentPoint) {\r\n                        continue;\r\n                    } else {\r\n                        gsap.to(items[i].scale, {x:0, y:0, duration: 0.2});\r\n                        gsap.to(items[i], {x: currentPoint[0] * METER_SIZE, y: currentPoint[1] * METER_SIZE, duration: 0.2, onComplete: ()=> {\r\n                            this.points.push(currentPoint);\r\n                        }});\r\n                    }\r\n                }\r\n                gsap.delayedCall(0.25, ()=> {\r\n                    resolve();\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }  \r\n}","import gsap, { Linear } from \"gsap\";\r\nimport { Container, Sprite, Text, Texture } from \"pixi.js\";\r\n\r\nexport class ScorePlace extends Container {\r\n    private scoreTxt: Text;\r\n    private scoreNumber: number;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.from(\"score_place.png\"));\r\n        this.addChild(back);\r\n        this.scoreNumber = 0;\r\n        this.scoreTxt = new Text(this.scoreFormatted(0), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xFFFFFF, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"});\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.position.set(back.width*0.5, back.height*0.5);\r\n        this.addChild(this.scoreTxt);\r\n    }\r\n    public set score(s: number) {\r\n        const p = {score: this.scoreNumber};\r\n        this.scoreTxt.text = this.scoreFormatted(this.scoreNumber);\r\n        gsap.to(p, {score: s, duration: 0.1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            this.scoreTxt.text = this.scoreFormatted(Math.floor(p.score));\r\n        }});\r\n        this.scoreNumber = s;\r\n    }\r\n    private scoreFormatted(s: number) {\r\n        const digits = 6;\r\n        let t = s.toString();\r\n        const rest = digits - t.length;\r\n        for (let i = 0; i < rest; i++) {\r\n            t = \"0\" + t;\r\n        }\r\n        return t;\r\n    }\r\n}","import { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class BackButton extends Button {\r\n    constructor() {\r\n        super(\"pause_button.png\",\"pause_button.png\");\r\n\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { BaseBonus } from \"./BaseBonus\";\r\nimport { BonusIntroLetter } from \"./BonusIntroLetter\";\r\n\r\nexport class LaserLettersBonus extends BaseBonus {\r\n    private rect: Rectangle;\r\n    laser: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.laser = Sprite.from(Texture.WHITE);\r\n        this.laser.width = 500;\r\n        this.laser.height = 10;\r\n        this.laser.tint = 0x4d9aff;\r\n        this.laser.alpha = 0;\r\n        this.laser.anchor.set(0.5,0.5);\r\n        this.addChild(this.laser);\r\n        this.laser.visible = false;\r\n    }\r\n    public get activeBound(): Rectangle[] {\r\n        if (this.rect) {\r\n            return [this.rect];\r\n        }\r\n        return undefined;\r\n    }\r\n    protected getLetters(): string[] {\r\n        return [\"{\", \"}\"];\r\n    }\r\n    protected animate(items: BonusIntroLetter[]): Promise<void> {\r\n        return new Promise<void>((resolve)=> {\r\n            if (this.getPoint || items.length !== 2) {\r\n                const yy = this.getPoint();\r\n                gsap.to(items[0], {x: -300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.to(items[1], {x: 300, angle: 0, y: yy * METER_SIZE, duration: 0.2 });\r\n                gsap.delayedCall(0.2, ()=> {\r\n                    this.laser.visible = true;\r\n                    this.laser.y = yy * METER_SIZE;\r\n                    this.rect = new Rectangle(-7, yy-0.5, 14, 1);\r\n                    gsap.to(this.laser, {alpha: 0.6, duration: 0.1 });\r\n                    gsap.delayedCall(0.1, ()=> {\r\n                        this.rect = undefined;\r\n                        gsap.to(items[0], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(items[1], {alpha: 0, duration: 0.1 });\r\n                        gsap.to(this.laser, {alpha: 0, duration: 0.1 });\r\n                        gsap.delayedCall(0.1, ()=> {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                })\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n}","import { BoomLettersBonus } from \"./BoomLettersBonus\";\r\n\r\nexport class BigBoomLettersBonus extends BoomLettersBonus {\r\n    private static all = [\r\n        \"YOU ARE JUST GREAT\".split(\"\"),\r\n        \"YOU ARE GREAT\".split(\"\"),\r\n        \"SUPER PUPER BOOM\".split(\"\"),\r\n        \"WISH YOU LUCK, DUDE!\".split(\"\")\r\n    ];\r\n    protected getLetters(): string[] {\r\n        return BigBoomLettersBonus.all[Math.floor(Math.random()*BigBoomLettersBonus.all.length)];        \r\n    }\r\n}","import { Sprite } from \"pixi.js\";\r\nimport { StaticBlock } from \"../StaticBlock\";\r\n\r\nexport abstract class BaseObstacle extends StaticBlock {\r\n    public isObstacle() {\r\n        return true;\r\n    }\r\n    protected abstract createView(): Sprite;\r\n}","import { Box, Shape } from \"p2\";\r\nimport { Sprite, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class StaticObstacle extends BaseObstacle {\r\n    constructor(pos: [number, number]) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.view.scale.set(1,1);\r\n        this.type = 250;\r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_static.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Shape, Box } from \"p2\";\r\nimport { Sprite, Text, Texture } from \"pixi.js\";\r\nimport { METER_SIZE } from \"../../../../core/BaseGame\";\r\nimport { ECollisionGroups } from \"../../../../core/PhysicsSprite\";\r\nimport { Explosion } from \"../Explosion\";\r\nimport { BaseObstacle } from \"./BaseObstacle\";\r\n\r\nexport class RandomObstacle extends BaseObstacle {\r\n    private moving: boolean = false;\r\n    private lives: number;\r\n    private txt: Text;\r\n    private explosion: Explosion;\r\n    constructor(pos: [number, number], lives: number) {\r\n        super(pos[0], pos[1], 100, 100, 0);\r\n        this.type = 251;\r\n        this.lives = lives;\r\n        this.txt = new Text(this.lives.toString(), {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, align: \"center\"});\r\n        this.txt.anchor.set(0.5,0.5);\r\n        this.txt.y = 20;\r\n        this.view.addChild(this.txt);\r\n        this.view.scale.set(1,1);\r\n\r\n        this.explosion = new Explosion(false);\r\n        this.explosion.visible = false;\r\n        this.addChild(this.explosion);\r\n    }\r\n    public changePosition() {\r\n        if (this.moving) return;\r\n        this.lives--;\r\n        const finish = this.lives <= 0;\r\n        this.moving = true;\r\n        const s = this.view.scale.x;\r\n        gsap.to(this.view.scale, {x: 0.01, y: 0.01, duration: 0.1, onUpdate: ()=> {\r\n            (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n            this.shape.updateBoundingRadius();\r\n            this.body.updateBoundingRadius();\r\n            this.body.updateMassProperties();\r\n        }, onComplete: ()=> {\r\n            if (finish) {\r\n                this.destroyBody();\r\n                this.explosion.visible = true;\r\n                this.explosion.animate().then(()=> {\r\n                    this.clean();\r\n                });\r\n            } else {\r\n                this.txt.text = this.lives.toString();\r\n                const rx = Math.random()*9 - 4.5;\r\n                const ry = -Math.random()*5;\r\n                this.body.position = [rx, ry];\r\n                gsap.to(this.view.scale, {x: s, y: s, duration: 0.4, onUpdate: ()=> {\r\n                    (this.shape as Box).width = (this.shape as Box).height = 100 * this.view.scale.x / METER_SIZE;\r\n                    this.shape.updateBoundingRadius();\r\n                    this.body.updateBoundingRadius();\r\n                    this.body.updateMassProperties();\r\n                }, onComplete: ()=> {\r\n                    this.moving = false;\r\n                }});\r\n            }\r\n        }});\r\n        \r\n    }\r\n    protected createView() {\r\n        const view = new Sprite(Texture.from(\"app_random.png\"));\r\n        view.anchor.set(0.5);\r\n        return view;\r\n    }\r\n    override createShape(): Shape {\r\n        const shape = new Box({width: this.view.width/METER_SIZE, height: this.view.height/METER_SIZE});\r\n        //shape.collisionGroup = ECollisionGroups.OBSTACLES;\r\n        //shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.OBSTACLES | ECollisionGroups.WALLS;\r\n        (shape as any).data = true;\r\n        return shape;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, InteractionEvent, IPointData, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { setSlowMo } from \"../../Game\";\r\n\r\nexport type TCondition = ()=>{success: boolean, data?: any};\r\nexport enum ETutorial {\r\n    Begin = \"begin\",\r\n    Moving = \"moving\",\r\n    Heart = \"heart\",\r\n    NewLine = \"newLine\",\r\n    Recharge = \"recharge\",\r\n    Unbreak = \"unbreak\",\r\n    IAPBonus = \"iapbonus\",\r\n    IAPBonus2 = \"iapbonus2\",\r\n    ChangePosition = \"changed\",\r\n    Skull = \"skull\",\r\n}\r\nexport class Tutorial extends Container {\r\n    private allConditions: Map<ETutorial, TCondition>;\r\n    private textMap: Map<ETutorial, string>;\r\n    private tutorial: NineSlicePlane;\r\n    private txt: Text;\r\n    private back: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.allConditions = new Map<ETutorial, TCondition>();\r\n        this.textMap = new Map<ETutorial, string>();\r\n        this.textMap.set(ETutorial.Begin, \"Save the Heart by moving it to the top!\");\r\n        this.textMap.set(ETutorial.Moving, \"Tap the screen and move your finger to aim. Release to shoot.\");\r\n        this.textMap.set(ETutorial.Heart, \"The Heart is free and happy now!\");\r\n        this.textMap.set(ETutorial.NewLine, \"It's time for a new emoji load!\");\r\n        this.textMap.set(ETutorial.Recharge, \"Charge it fully to get a bonus!\");\r\n        this.textMap.set(ETutorial.Unbreak, \"This app is invincible!\");\r\n        this.textMap.set(ETutorial.IAPBonus, \"but this bonuses will help you.\");\r\n        this.textMap.set(ETutorial.IAPBonus2, \"and this one too!\");\r\n        this.textMap.set(ETutorial.ChangePosition, \"This app should be destroyed! Aim to it!\");\r\n        this.textMap.set(ETutorial.Skull, \"Do not touch this Skulls by Heart or by throwed Emoji!\");\r\n\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.interactive = true;\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.addChild(this.back);\r\n        this.back.position.set(-this.back.width*0.5, -this.back.height*0.5);\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0.3;\r\n\r\n        this.tutorial = new NineSlicePlane(Texture.from(\"tutorial.png\"), 52, 52, 90, 93);\r\n        this.addChild(this.tutorial);\r\n\r\n        this.txt = new Text(\"\", {fontSize: 50, fontWeight: \"bold\", fill: 0xffffff, wordWrap: true, wordWrapWidth: 300});\r\n        this.addChild(this.txt);\r\n\r\n        this.visible = false;\r\n    }\r\n    public addCondition(t: ETutorial, c: TCondition) {\r\n        this.allConditions.set(t, c);\r\n    }\r\n    public update() {\r\n        for (const [e,c] of this.allConditions) {\r\n            const result = c();\r\n            if (result.success) {\r\n                this.show(e, result.data);\r\n                this.allConditions.delete(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public isDone(type: ETutorial) {\r\n        return this.allConditions.get(type) === undefined;\r\n    }\r\n    public show (type: ETutorial, data?: any) {\r\n        const text = this.textMap.get(type);\r\n        this.txt.text = text;\r\n        this.tutorial.scale.set(1,1);\r\n        this.tutorial.pivot.set(this.txt.width + 100, this.txt.height + 100);\r\n        this.tutorial.width = this.txt.width + 100;\r\n        this.tutorial.height = this.txt.height + 100;\r\n        this.tutorial.scale.set(0,0);\r\n        const s = {x: 1, y: 1};\r\n        const pos = data.pos as IPointData;\r\n        const scale = data.scale as IPointData;\r\n        s.x *= scale.x;\r\n        s.y *= scale.y;\r\n        this.tutorial.position.copyFrom(pos);\r\n        this.txt.position.copyFrom(pos);\r\n        if (scale.x === 1) {\r\n            this.txt.x -= 60 + this.txt.width;\r\n        } else {\r\n            this.txt.x += 60;\r\n        }\r\n        if (scale.y === 1) {\r\n            this.txt.y -= 60 + this.txt.height;\r\n        } else {\r\n            this.txt.y += 52;\r\n        }\r\n        this.txt.scale.set(0,0);\r\n        this.back.alpha = 0;\r\n\r\n        const milisecs = 300;\r\n        const intervalStep = 10;\r\n        const steps = milisecs / intervalStep;\r\n        const finalAlpha = 0.3;\r\n        \r\n        const alphaStep = finalAlpha / steps;\r\n        const scaleStepX = s.x / steps;\r\n        const scaleStepY = s.y / steps;\r\n        const txtScaleStep = 1 / steps;\r\n        const interval = window.setInterval(()=> {\r\n            this.back.alpha += alphaStep;\r\n            this.tutorial.scale.x += scaleStepX;\r\n            this.tutorial.scale.y += scaleStepY;\r\n            this.txt.scale.x += txtScaleStep;\r\n            this.txt.scale.y += txtScaleStep;\r\n            if (this.back.alpha >= finalAlpha) {\r\n                window.clearInterval(interval);\r\n            }\r\n        }, intervalStep);\r\n        this.visible = true;\r\n        setSlowMo(true, true);\r\n        \r\n        window.setTimeout(()=> {\r\n            setSlowMo(false, true);\r\n            gsap.globalTimeline.pause();\r\n            gameSettings.paused = true;\r\n            this.back.on(\"pointerup\", (e: InteractionEvent)=> {\r\n                e.stopPropagation();\r\n                e.stopped = true;\r\n                this.hide();\r\n            });\r\n        }, 400)\r\n        \r\n    }\r\n    public hide() {\r\n        gameSettings.paused = false;\r\n        gsap.globalTimeline.resume();\r\n        gsap.to(this, {alpha: 0, duration: 0.3, onComplete: ()=> {\r\n            this.visible = false;\r\n            this.alpha = 1;\r\n        }});\r\n        this.back.off(\"pointerup\");\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { EIAPBonus } from \"../../GameViewState\";\r\n\r\nexport class WheelBox extends Container {\r\n    private iconL0: Sprite;\r\n    private iconR0: Sprite;\r\n    private iconL1: Sprite;\r\n    private iconR1: Sprite;\r\n    private static allTextures: Map<EIAPBonus, Texture>;\r\n    constructor() {\r\n        super();\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.tint = 0x000000;\r\n        back.width = 370;\r\n        back.height = 250;\r\n        back.pivot.set(370*0.5, 200*0.5);\r\n        this.addChild(back);\r\n        back.y = -50;\r\n\r\n        const t = new Text(\"level powerups:\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 35, fill: 0xFFFFFF, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        t.position.set(0, -115);\r\n        this.addChild(t);\r\n\r\n        const back1 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back1.pivot.set(80, 80);\r\n        back1.width = 160;\r\n        back1.height = 160;\r\n        this.addChild(back1);\r\n\r\n        const back2 = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back2.pivot.set(80, 80);\r\n        back2.width = 160;\r\n        back2.height = 160;\r\n        this.addChild(back2);\r\n\r\n        back1.position.set(-85, 0);\r\n        back2.position.set(85, 0);\r\n\r\n        const slot1 = new Container();        \r\n        const slot2 = new Container();        \r\n        this.addChild(slot1);\r\n        this.addChild(slot2);\r\n        slot1.position.x = -85;\r\n        slot2.position.x = 85;\r\n\r\n        const mask1 = Sprite.from(Texture.WHITE);\r\n        mask1.anchor.set(0, 0.5);\r\n        mask1.width = 140;\r\n        mask1.height = 140;\r\n        this.addChild(mask1);\r\n\r\n        const mask2 = Sprite.from(Texture.WHITE);\r\n        mask2.anchor.set(0, 0.5);\r\n        mask2.width = 140;\r\n        mask2.height = 140;\r\n        this.addChild(mask2);\r\n\r\n        mask1.position.x = -145;\r\n        mask2.position.x = 5;\r\n        slot1.mask = mask1; \r\n        slot2.mask = mask2;\r\n\r\n        this.iconL0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL0.anchor.set(0.5, 0.5);\r\n        this.iconL0.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL0);\r\n\r\n        this.iconR0 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR0.anchor.set(0.5, 0.5);\r\n        this.iconR0.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR0);\r\n\r\n        this.iconL1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconL1.anchor.set(0.5, 0.5);\r\n        this.iconL1.scale.set(0.5, 0.5);\r\n        slot1.addChild(this.iconL1);\r\n        this.iconL1.y = 140;\r\n        \r\n        this.iconR1 = Sprite.from(WheelBox.randomTexture);\r\n        this.iconR1.anchor.set(0.5, 0.5);\r\n        this.iconR1.scale.set(0.5, 0.5);\r\n        slot2.addChild(this.iconR1);\r\n        this.iconR1.y = 140;\r\n    }\r\n    public start(bonuses: EIAPBonus[]) {\r\n        gsap.to({a:0}, {a: 1, duration: 2, onUpdate: ()=> {\r\n            if (this.iconL0.y >= 140) {\r\n                this.iconL0.texture = WheelBox.randomTexture;\r\n                this.iconR0.texture = WheelBox.randomTexture;\r\n                let temp = this.iconL0;\r\n                this.iconL0 = this.iconL1;\r\n                this.iconL1 = temp;\r\n\r\n                temp = this.iconR0;\r\n                this.iconR0 = this.iconR1;\r\n                this.iconR1 = temp;\r\n\r\n                this.iconL0.y = 0;\r\n                this.iconR0.y = 0;\r\n            }\r\n            this.iconL0.y += 10;\r\n            this.iconR0.y += 10;\r\n            this.iconL1.y = this.iconL0.y - 140;\r\n            this.iconR1.y = this.iconR0.y - 140;\r\n        }, onComplete: ()=> {\r\n            this.iconL0.y = 0;\r\n            this.iconR0.y = 0;\r\n            this.iconR1.y = 140;\r\n            this.iconL1.y = 140;\r\n            this.iconL0.texture = WheelBox.getTexture(bonuses[0]);\r\n            this.iconR0.texture = WheelBox.getTexture(bonuses[1]);\r\n        }});\r\n    }\r\n    public static prepareTextures() {\r\n        this.allTextures = new Map<EIAPBonus, Texture>();\r\n        this.allTextures.set(EIAPBonus.RocketUp, Texture.from(\"powerup_rocket.png\"));\r\n        this.allTextures.set(EIAPBonus.Kill, Texture.from(\"powerup_bomb.png\"));\r\n        this.allTextures.set(EIAPBonus.Freeze, Texture.from(\"powerup_freeze.png\"));\r\n    }\r\n    public static getTexture(k: EIAPBonus) {\r\n        return this.allTextures.get(k);\r\n    }\r\n    private static get randomTexture() {\r\n        const keys = Array.from(this.allTextures.keys());\r\n        const k = keys[Math.floor(Math.random() * keys.length)];\r\n        return this.getTexture(k);\r\n    }\r\n}","import gsap, { Bounce } from \"gsap\";\r\nimport { Emitter } from \"pixi-particles\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture, Ticker } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { getStorageData, setStorageData } from \"../../../core/natives/SocialManager\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\nimport { EIAPBonus } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\nimport { PowerupButton } from \"./PowerupButton\";\r\n\r\nexport class LevelFinished extends Container {\r\n    private back: Sprite;\r\n    private popup: Container;\r\n    private callback: () => void;\r\n    private scoreTxt: Text;\r\n    private title: Text;\r\n    private stars: Sprite[];\r\n    private emitter: Emitter;\r\n    private prizeIcon: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.tint = 0x000000;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        const particles = new Container();\r\n        this.addChild(particles);\r\n\r\n        this.popup = new Container();\r\n        this.popup.scale.set(0,0);\r\n        this.addChild(this.popup);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.pivot.set(300, 400);\r\n        popupBack.width = 600;\r\n        popupBack.height = 800;\r\n        this.popup.addChild(popupBack);\r\n\r\n        this.title = new Text(\"Well done!\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        this.title.anchor.set(0.5, 0.5);\r\n        this.title.position.y = -340;\r\n        this.popup.addChild(this.title);\r\n\r\n        this.scoreTxt = new Text(\"0\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 120, fill: 0x000000, align: \"center\", letterSpacing: 7, fontWeight: \"bold\"})\r\n        this.scoreTxt.anchor.set(0.5, 0.5);\r\n        this.scoreTxt.y = 40;\r\n        this.popup.addChild(this.scoreTxt);\r\n\r\n        this.stars = [];\r\n        let xx = -120;\r\n        for (let i = 0; i < 3; i++) {\r\n            const star = Sprite.from(Texture.from(\"like.png\"));\r\n            star.anchor.set(0.5, 0.5);\r\n            star.position.set(xx, -150);\r\n            this.popup.addChild(star);\r\n            this.stars.push(star);\r\n            star.visible = false;\r\n            xx += 120;\r\n        }\r\n        this.popup.addChild(this.stars[1]);\r\n\r\n        this.prizeIcon = new Sprite();\r\n        this.prizeIcon.anchor.set(0.5, 0.5);\r\n        this.prizeIcon.scale.set(0.5, 0.5);\r\n        this.prizeIcon.position.copyFrom(this.stars[2]);\r\n        this.prizeIcon.x += 50;\r\n        this.prizeIcon.y -= 50;\r\n        this.popup.addChild(this.prizeIcon);\r\n        this.prizeIcon.visible = false;\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", ()=> {\r\n            this.hide();\r\n        });\r\n        okBut.position.y = 300;\r\n        this.popup.addChild(okBut);\r\n\r\n        this.emitter = new Emitter(particles, \"like.png\", gameSettings.particles);\r\n    }\r\n    public async show(won: boolean, score: number, time: number, conditions: number[], callback: ()=>void, level: number, prizes: EIAPBonus[] | undefined) {\r\n        \r\n        const {idealTime} = gameSettings.levels[level];\r\n        const timeBonus = (won && time < idealTime) ? Math.round(1000 * (1 - (time / idealTime))) : 0;\r\n        console.log(level.toString(), prizes, time, timeBonus);\r\n        score += timeBonus;\r\n        this.title.text = (won) ? \"Well done!\" : \"So sorry...\";\r\n        const prize = prizes ? prizes[0] : undefined;\r\n        if (prize !== undefined && score >= conditions[2]) {\r\n            const powerupDone = await getStorageData(\"powerupDone\" + level.toString(), \"0\");\r\n            console.log(\"pd\",powerupDone);\r\n            if (powerupDone === \"0\") {\r\n                this.prizeIcon.visible = true;\r\n                this.prizeIcon.scale.set(0, 0);\r\n                this.prizeIcon.texture = WheelBox.getTexture(prize);\r\n\r\n\r\n                const storageData = await getStorageData(PowerupButton.getStorageId(prize), \"0\");\r\n                const amount = parseInt(storageData);\r\n                await setStorageData(PowerupButton.getStorageId(prize), (amount+1).toString());\r\n                await setStorageData(\"powerupDone\" + level.toString(), \"1\");\r\n            }\r\n        }\r\n        for (let i = 0; i < this.stars.length; i++) {\r\n            const star = this.stars[i];\r\n            star.visible = true;\r\n            star.scale.set(0,0);\r\n            (star as any).showed = false;\r\n        }\r\n        this.callback = callback;\r\n        this.visible = true;\r\n        this.back.alpha = 0;\r\n        this.popup.scale.set(0,0);\r\n        //const stars = calculateStars(score, conditions);\r\n        const o = {s: 0};\r\n        this.scoreTxt.text = \"0\";\r\n        gsap.to(o, {s: score, delay: 1, duration: 2, onUpdate: ()=> {\r\n            this.scoreTxt.text = Math.round(o.s).toString();\r\n            for (let i = 0; i < conditions.length; i++) {\r\n                const star = this.stars[i];\r\n                //console.log(i, star)\r\n                if (o.s >= conditions[i] && !(star as any).showed) {\r\n                    (star as any).showed = true;\r\n                    const s = (i === 1) ? 1.5 : 1;\r\n                    gsap.to(star.scale, {x: s, y: s, duration: 0.2, ease: Bounce.easeOut});\r\n                    if (this.prizeIcon.visible && i === 2) {\r\n                        gsap.to(this.prizeIcon.scale, {x: 0.5, y: 0.5, duration: 0.2, ease: Bounce.easeOut});\r\n                    }\r\n                }\r\n            }\r\n        }});\r\n        gsap.to(this.back, {alpha: 0.5, duration: 0.5});\r\n        gsap.to(this.popup.scale, {x: 1, y: 1, duration: 1, ease: Bounce.easeOut});\r\n        if (won) {\r\n            gsap.delayedCall(1, ()=> {\r\n                this.emitter.emit = true;\r\n                Ticker.shared.add(this.onTickEvent);\r\n            });\r\n        }\r\n    }\r\n    private readonly onTickEvent = (deltaTime: number) => {\r\n        this.emitter.update(deltaTime / 70);\r\n    };\r\n    private hide() {\r\n        gsap.to(this.back, {alpha: 0, duration: 0.2});\r\n        gsap.to(this.popup.scale, {x: 0, y: 0, duration: 0.2, onComplete: ()=> {\r\n            this.emitter.emit = false;\r\n            this.emitter.cleanup();\r\n            Ticker.shared.remove(this.onTickEvent);\r\n            this.prizeIcon.visible = false;\r\n            this.visible = false;\r\n            this.callback();\r\n        }});\r\n    }\r\n}","import gsap, { Expo } from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Text, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { EIAPBonus, ILevelData } from \"../GameViewState\";\r\nimport { WheelBox } from \"./levelstart/WheelBox\";\r\n\r\nexport class LevelStart extends Container {\r\n    private texts: Text[];\r\n    private usingTexts: Text[];\r\n    private back: Sprite;\r\n    private wheelbox: WheelBox;\r\n    private tween?: gsap.core.Tween;\r\n    private nameBack: NineSlicePlane;\r\n    constructor() {\r\n        super();\r\n        this.back = Sprite.from(Texture.WHITE);\r\n        this.back.anchor.set(0.5, 0.5);\r\n        this.back.width = gameSettings.originalWidth;\r\n        this.back.height = gameSettings.originalHeight;\r\n        this.back.alpha = 0;\r\n        this.addChild(this.back);\r\n\r\n        this.nameBack = new NineSlicePlane(Texture.from(\"name_back.png\"), 80, 80, 80, 80);\r\n        this.nameBack.width = 600;\r\n        this.nameBack.alpha = 0;\r\n        this.addChild(this.nameBack);\r\n\r\n        this.texts = [];\r\n        this.usingTexts = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const t = this.getNewText();\r\n            this.texts.push(t);\r\n        }\r\n\r\n        this.wheelbox = new WheelBox();\r\n        this.addChild(this.wheelbox);\r\n\r\n        this.visible = false;\r\n    }\r\n    public async show (data: ILevelData, bonuses?: EIAPBonus[]) {\r\n        return new Promise<void>((resolve)=> {\r\n            this.visible = true;\r\n            this.back.alpha = 0;\r\n            this.nameBack.alpha = 0;\r\n            this.wheelbox.position.y = 1000;\r\n            const delay = (bonuses && bonuses.length > 0) ? 5 : 3;\r\n            gsap.to(this.back, {alpha: 0.7, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 1, duration: 0.5});\r\n            const words = data.name.split(\" \");\r\n            let yy = -(words.length * 70) / 2 + 35 - 100;\r\n            const top = yy;\r\n            for (let i = 0; i < words.length; i++) {\r\n                const w = words[i];\r\n                let t: Text; \r\n                if (this.texts.length > 0) {\r\n                    t = this.texts.pop();\r\n                } else {\r\n                    t = this.getNewText();\r\n                }\r\n                t.alpha = 1;\r\n                t.visible = true;\r\n                t.text = w;\r\n                this.addChild(t);\r\n                this.usingTexts.push(t);\r\n    \r\n                t.y = yy;\r\n                t.x = i%2 ? (-500-t.width/2) : (500+t.width/2);\r\n                gsap.to(t, {x: 0, duration: 1, ease: Expo.easeOut});\r\n                gsap.to(t, {alpha: 0, delay: delay - 1, duration: 0.5, onComplete: ()=> {\r\n                    this.texts.push(t);\r\n                }});\r\n                yy += 70;\r\n            }\r\n            gsap.to(this.back, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            gsap.to(this.nameBack, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n            \r\n            if (bonuses && bonuses.length > 0) {\r\n                this.wheelbox.visible = true;\r\n                this.wheelbox.alpha = 1;\r\n                \r\n                gsap.to(this.wheelbox, {y: yy + 140, delay: 1, duration: 0.5, ease: Expo.easeOut, onComplete: ()=> {\r\n                    this.wheelbox.start(bonuses);\r\n                }});\r\n                gsap.to(this.wheelbox, {alpha: 0, delay: delay - 1, duration: 0.5});\r\n                yy += 120 + this.wheelbox.height / 2;\r\n            }\r\n            const h = Math.max(400, yy - top + 100)\r\n            this.nameBack.pivot.set(300, h / 2);\r\n            this.nameBack.height = h;\r\n            if (bonuses && bonuses.length > 0) {\r\n                this.nameBack.y = top - 80 + h / 2;\r\n            } else {\r\n                this.nameBack.y = -100;\r\n            }\r\n            \r\n            this.tween = gsap.delayedCall(delay, ()=> {\r\n                this.usingTexts = [];\r\n                this.visible = false;\r\n                this.tween = undefined;\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    public clear() {\r\n        if (this.tween) {\r\n            this.tween.kill();\r\n            this.tween = undefined;\r\n        }\r\n        gsap.killTweensOf(this.wheelbox);\r\n        gsap.killTweensOf(this.back);\r\n        for (const t of this.usingTexts) {\r\n            gsap.killTweensOf(t);\r\n            this.removeChild(t);\r\n        }\r\n        this.visible = false;\r\n    }\r\n    private getNewText() {\r\n        const t = new Text(\"\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"});\r\n        t.anchor.set(0.5,0.5);\r\n        return t;\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport { Container, NineSlicePlane, Sprite, Texture, Text } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\nimport { Button } from \"../../../core/ui/Button\";\r\n\r\nexport class PausePopup extends Container {\r\n    private callback: (exit: boolean) => void;\r\n    constructor() {\r\n        super();\r\n        const back = Sprite.from(Texture.WHITE);\r\n        back.anchor.set(0.5, 0.5);\r\n        back.width = gameSettings.originalWidth;\r\n        back.height = gameSettings.originalHeight;\r\n        back.tint = 0x000000;\r\n        back.alpha = 0.6;\r\n        this.addChild(back);\r\n\r\n        const popupBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        popupBack.width = 500;\r\n        popupBack.height = 360;\r\n        popupBack.pivot.set(250, 180);\r\n        this.addChild(popupBack);\r\n\r\n        const title = new Text(\"Exit?\", {fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 70, fill: 0x5f40e3, align: \"center\", fontWeight: \"bold\"})\r\n        title.anchor.set(0.5, 0.5);\r\n        title.position.y = -120;\r\n        this.addChild(title);\r\n\r\n        const okBut = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        okBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(true);\r\n        });\r\n        okBut.position.set(-110, 110);\r\n        okBut.scale.set(0.8, 0.8);\r\n        this.addChild(okBut);\r\n\r\n        const xBut = new Button(\"x_button.png\", \"x_button.png\");\r\n        xBut.on(\"pointerup\", (e)=> {\r\n            e.stopPropagation();\r\n            e.stopped = true;\r\n            this.hide(false);\r\n        });\r\n        xBut.position.set(110, 110);\r\n        xBut.scale.set(0.8, 0.8);\r\n        this.addChild(xBut);\r\n        \r\n        this.visible = false;\r\n    }\r\n    public show(callback: (exit: boolean)=>void) {\r\n        this.callback = callback;\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n        //gsap.to(this, {alpha: 1, duration: 0.4});\r\n    }\r\n    private hide(exit: boolean) {\r\n        this.callback(exit);\r\n        this.callback = undefined;\r\n        gsap.to(this, {alpha: 0, duration: 0.4, onComplete: ()=> {\r\n            this.visible = false;\r\n        }});\r\n    }\r\n}","import { Container, Point, Sprite, Texture } from \"pixi.js\";\r\nimport { GameViewState } from \"../GameViewState\";\r\n\r\nexport class MousePreview extends Container {\r\n    private part0: Sprite;\r\n    private part1: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.part0 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part0.anchor.set(0.5, 1);\r\n        this.addChild(this.part0);\r\n        this.part0.height = 1200;\r\n\r\n        this.part1 = Sprite.from(Texture.from(\"direction.png\"));\r\n        this.part1.anchor.set(0.5, 1);\r\n        this.addChild(this.part1);\r\n        this.part1.height = 700;\r\n    }\r\n\r\n    public draw(p: Point) {\r\n        const centerY = GameViewState.BottomPoint;\r\n        const len = 1200;\r\n        const boundX = 315;\r\n        \r\n        const angle= Math.atan2((p.y-centerY), p.x);\r\n        this.part0.rotation = angle + Math.PI/2;\r\n        let xx = len*Math.cos(angle);\r\n        let yy = centerY+len*Math.sin(angle);\r\n        let d = len;\r\n        if (xx < -boundX || xx > boundX) {\r\n            d = Math.abs(xx)/xx * boundX / Math.cos(angle);\r\n            xx = d*Math.cos(angle);\r\n            yy = d*Math.sin(angle);\r\n            this.part1.visible = true;\r\n            this.part1.position.set(xx, yy);\r\n            this.part1.rotation = -angle - Math.PI/2;\r\n        } else {\r\n            this.part1.visible = false;\r\n        }\r\n        this.part0.height = d;\r\n    }\r\n}","import { Container, NineSlicePlane, ObservablePoint, Rectangle, Sprite, Texture } from \"pixi.js\";\r\nimport { EGAProgressionStatus, sendEvent, sendProgressionEvent } from \"../..\";\r\nimport { app, gameSettings, METER_SIZE, stateManager, world } from \"../../core/BaseGame\";\r\nimport { gameplayStart, setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { CircleBlock } from \"./game/CircleBlock\";\r\nimport { StaticBlock } from \"./game/StaticBlock\";\r\nimport gsap, {Linear, Expo} from \"gsap\";\r\nimport { Explosion } from \"./game/Explosion\";\r\nimport { Body } from \"p2\";\r\nimport { RocketPowerup } from \"./game/RocketPowerup\";\r\nimport { GoalBlock } from \"./game/GoalBlock\";\r\nimport { MenuState } from \"./MenuState\";\r\nimport { PowerupButton } from \"./game/PowerupButton\";\r\nimport { NextBlocksTimer } from \"./game/NextBlocksTimer\";\r\nimport { ECollisionGroups, PhysicsSprite } from \"../../core/PhysicsSprite\";\r\nimport { explodePoints, setSlowMo } from \"../Game\";\r\nimport { BoomMeter } from \"./game/BoomMeter\";\r\nimport { Message } from \"./game/Message\";\r\nimport { BaseBonus } from \"./game/bonuses/BaseBonus\";\r\nimport { BoomLettersBonus } from \"./game/bonuses/BoomLettersBonus\";\r\nimport { ScorePlace } from \"./game/ScorePlace\";\r\nimport { BackButton } from \"./game/BackButton\";\r\nimport { LaserLettersBonus } from \"./game/bonuses/LaserLettersBonus\";\r\nimport { BigBoomLettersBonus } from \"./game/bonuses/BigBoomLettersBonus\";\r\nimport { StaticObstacle } from \"./game/obstacles/StaticObstacle\";\r\nimport { BaseObstacle } from \"./game/obstacles/BaseObstacle\";\r\nimport { RandomObstacle } from \"./game/obstacles/RandomObstacle\";\r\nimport { ETutorial, Tutorial } from \"./game/Tutorial\";\r\nimport { LevelFinished } from \"./game/LevelFinished\";\r\nimport { LevelStart } from \"./game/LevelStart\";\r\nimport { WheelBox } from \"./game/levelstart/WheelBox\";\r\nimport { PausePopup } from \"./game/PausePopup\";\r\nimport { MousePreview } from \"./game/MousePreview\";\r\n\r\nexport enum EIAPBonus {\r\n    None = 0,\r\n    Kill,\r\n    Freeze,\r\n    RocketUp\r\n}\r\nexport enum EBonus {\r\n    None = 0,\r\n    BoomLetters,\r\n    LaserLetters,\r\n    BigBoomLetters,\r\n    All\r\n}\r\nexport enum EObstacle {\r\n    None = 0,\r\n    Random,\r\n    Static,\r\n    HeartMiddle,\r\n    Skulls\r\n}\r\nexport interface IObstacle {\r\n    type: EObstacle;\r\n    position?: [number, number],\r\n    lives?: number,\r\n    amount?: number\r\n}\r\nexport interface ILevelData {\r\n    name: string,\r\n    blocks: number,\r\n    startAmount: number,\r\n    time: number,\r\n    lines: number,\r\n    boomMeter: number,\r\n    idealTime: number,\r\n    bonuses: number[],\r\n    obstacles: IObstacle[],\r\n    starsConditions: number[],\r\n    iaps: boolean,\r\n    score?: number\r\n}\r\n\r\nexport class GameViewState extends BaseState {\r\n    public static BottomPoint = 670;\r\n    private gameContainer: Container;\r\n    private fxContainer: Container;\r\n    private frontContainer: Container;\r\n    private backContainer: Container;\r\n    private moveBox: StaticBlock;\r\n    private staticBox: StaticBlock;\r\n    private bottomOpenWall: StaticBlock;\r\n    private activeBlock: CircleBlock;\r\n    private maxY: number;\r\n    private tick = 0;\r\n    private levelStartTime: number;\r\n    private moving: boolean;\r\n    private isActivePowerup: boolean;\r\n    private preview: MousePreview;\r\n    private nextLines: number[][];\r\n    private previewBlocks: Message;\r\n    private nextType: number;\r\n    private nextBlock: CircleBlock;\r\n    private isTransition: boolean;\r\n    private powerup1: PowerupButton;\r\n    private powerup2: PowerupButton;\r\n    private nextTimer: NextBlocksTimer;\r\n    private randomBodiesPositions: [number,number][];\r\n    private activeBonus: EBonus;\r\n    private boomMeter: BoomMeter;\r\n    private scorePlace: ScorePlace;\r\n    private pad: Sprite;\r\n    private padRect: Rectangle;\r\n    private downRect: Rectangle;\r\n    private topRect: Rectangle;\r\n    private levelId: number;\r\n    private meterBonus: BaseBonus;\r\n    private obstacles: BaseObstacle[];\r\n    private score: number;\r\n    private tutorial: Tutorial;\r\n    private goalBlock: GoalBlock;\r\n    private boltsActive: boolean;\r\n    private levelFinished: LevelFinished;\r\n    private levelStart: LevelStart;\r\n    private pausePopup: PausePopup;\r\n    private waitForOver: boolean;\r\n\r\n    public create(): void {\r\n        WheelBox.prepareTextures();\r\n\r\n        this.backContainer = new Container();\r\n        this.addChild(this.backContainer);\r\n        this.gameContainer = new Container();\r\n        this.addChild(this.gameContainer);\r\n        this.fxContainer = new Container();\r\n        this.addChild(this.fxContainer);\r\n        this.frontContainer = new Container();\r\n        this.addChild(this.frontContainer);\r\n\r\n        this.levelFinished = new LevelFinished();\r\n        this.frontContainer.addChild(this.levelFinished);\r\n        this.levelFinished.visible = false;\r\n\r\n        this.pad = new Sprite(Texture.from(\"launchpad.png\"));\r\n        this.pad.anchor.set(0.5, 1);\r\n        this.pad.position.y = gameSettings.originalHeight * 0.5 - 30;\r\n        this.gameContainer.addChild(this.pad);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"phone.png\"), 104, 100, 104, 100);\r\n        back.width = gameSettings.originalWidth + 50;\r\n        back.height = gameSettings.originalHeight + 40;\r\n        back.position.set(-back.width * 0.5, -back.height * 0.5);\r\n        this.addChild(back);\r\n\r\n        const top = new Container();\r\n        top.position.set(0, -gameSettings.originalHeight * 0.5 + 40);\r\n        this.gameContainer.addChild(top);\r\n\r\n        /*const topBack = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        topBack.width = gameSettings.originalWidth * 0.93;\r\n        topBack.position.set(-topBack.width * 0.5, 0);\r\n        top.addChild(topBack);*/\r\n\r\n        const menuBtn = new BackButton();\r\n        menuBtn.position.set(-230, 30);\r\n        menuBtn.on(\"pointerup\", () => {\r\n            this.showPause();\r\n        });\r\n        top.addChild(menuBtn);\r\n\r\n        this.powerup1 = new PowerupButton();\r\n        this.powerup1.position.set(-255, 620);\r\n        this.gameContainer.addChild(this.powerup1);\r\n        this.powerup1.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n\r\n        this.powerup2 = new PowerupButton();\r\n        this.powerup2.position.set(255, 620);\r\n        this.gameContainer.addChild(this.powerup2);\r\n        this.powerup2.on(\"activate\", (id) => {\r\n            this.startPowerup(id);\r\n        });\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n\r\n        this.preview = new MousePreview();\r\n        this.gameContainer.addChild(this.preview);\r\n        this.preview.visible = false;\r\n\r\n        this.previewBlocks = new Message();\r\n        this.gameContainer.addChild(this.previewBlocks);\r\n        this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n\r\n        const line = new NineSlicePlane(Texture.from(\"progress_bar.png\"), 6,4,6,4);\r\n        line.width = 600;\r\n        line.height = 15;\r\n        line.position.set(-300, 500);\r\n        this.gameContainer.addChild(line);\r\n\r\n        this.nextTimer = new NextBlocksTimer();\r\n        this.nextTimer.position.set(-316, -637);\r\n        this.gameContainer.addChild(this.nextTimer);\r\n\r\n        this.boomMeter = new BoomMeter();\r\n        this.boomMeter.position.set(165, -725);\r\n        this.boomMeter.scale.set(0.85, 0.85);\r\n        this.gameContainer.addChild(this.boomMeter);\r\n\r\n        this.scorePlace = new ScorePlace();\r\n        this.scorePlace.position.set(-150, -725);\r\n        this.gameContainer.addChild(this.scorePlace);\r\n\r\n        this.padRect = new Rectangle(-140, 610, 280, 150);\r\n        this.downRect = new Rectangle(-400, 500, 800, 300);\r\n        this.topRect = new Rectangle(-gameSettings.originalWidth*0.5, -gameSettings.originalHeight*0.5, gameSettings.originalWidth, 180);\r\n        \r\n        this.tutorial = new Tutorial();\r\n        this.frontContainer.addChild(this.tutorial);\r\n\r\n        this.levelStart = new LevelStart();\r\n        this.frontContainer.addChild(this.levelStart);\r\n\r\n        this.pausePopup = new PausePopup();\r\n        this.frontContainer.addChild(this.pausePopup);\r\n\r\n        this.tutorial.addCondition(ETutorial.Begin, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible && position?.y < -100, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Moving, () => {\r\n            const position = {x: 40, y: 0};\r\n            return {success: this.bottomOpenWall && this.levelId === 0 && !this.levelStart.visible, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Heart, () => {\r\n            const position = this.goalBlock?.position;\r\n            return {success: this.isTransition, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.NewLine, () => {\r\n            const position = {x: 290, y: -550};\r\n            return {success: this.moving, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Recharge, () => {\r\n            const position = {x: 300, y: -650};\r\n            return {success: this.boltsActive, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Unbreak, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus, () => {\r\n            const position = {x: -255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.Unbreak) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: -1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.IAPBonus2, () => {\r\n            const position = {x: 255, y: 620};\r\n            return {success: !this.tutorial.visible && this.tutorial.isDone(ETutorial.IAPBonus) && this.bottomOpenWall && this.powerup1.visible && this.levelId === 6 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: 1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.ChangePosition, () => {\r\n            const position = {x: 25, y: -125};\r\n            return {success: this.bottomOpenWall && this.powerup1.visible && this.levelId === 7 && this.obstacles.length === 1, data: {pos: position, scale: {x: 1, y: -1}}};\r\n        });\r\n        this.tutorial.addCondition(ETutorial.Skull, () => {\r\n            let position = {x: 25, y: -125};\r\n            for (let body of world.bodies) {\r\n                if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                    position = (body as any).userData.position;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return {success: this.bottomOpenWall && this.levelId === 13 && !this.levelStart.visible, data: {pos: position, scale: {x: (position?.x < -20) ? -1 : 1, y: -1}}};\r\n        });\r\n    }\r\n    public async start(...params: any) {\r\n        gameplayStart();\r\n        this.waitForOver = false;\r\n        this.boltsActive = false;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.levelId = params[0][0] as number;\r\n        this.activeBonus = EBonus.None;\r\n        this.randomBodiesPositions = [];\r\n        this.obstacles = [];\r\n        this.isTransition = false;\r\n        \r\n        this.nextType = undefined;\r\n        this.nextLines = [];\r\n        this.isActivePowerup = false;\r\n        this.generateLineBlocks();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.moving = false;\r\n        this.nextTimer.freeze();\r\n        sendEvent(\"start\", \"game\", \"level\");\r\n        sendProgressionEvent(EGAProgressionStatus.Start);\r\n        gameSettings.paused = false;\r\n\r\n        await this.generateStartBlocks();\r\n        const iaps = this.generateIAPS();\r\n        await this.levelStart.show(this.currentLevelData, iaps);\r\n        if (this.currentLevelData.iaps) {\r\n            this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n            this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n            this.powerup1.visible = true;\r\n            this.powerup2.visible = true;\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.addActiveBlock();\r\n        this.nextTimer.unFreeze();\r\n        this.levelStartTime = new Date().getTime();\r\n\r\n        app.stage.on(\"pointerup\", this.onClick, this);\r\n        app.stage.on(\"pointerdown\", this.onTapStart, this);\r\n    }\r\n    public async close() {\r\n        return new Promise<void>((resolve)=> {\r\n            app.stage.off(\"pointerup\");\r\n            app.stage.off(\"pointerdown\");\r\n            gameSettings.paused = false;\r\n            this.waitForOver = true;\r\n            setSlowMo(false);\r\n            this.boltsActive = false;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset(true);\r\n            this.levelStart.clear();\r\n            this.moveBox && this.moveBox.clean();\r\n            this.staticBox && this.staticBox.clean();\r\n            this.bottomOpenWall && this.bottomOpenWall.clean();\r\n            this.activeBlock && this.activeBlock.clean();\r\n            this.activeBonus = EBonus.None;\r\n            this.tick = 0;\r\n            this.moving = false;\r\n            this.isActivePowerup = false;\r\n            this.previewBlocks && this.previewBlocks.clear();\r\n            this.nextBlock && this.nextBlock.clean();\r\n            this.preview.visible = false;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            this.nextLines = [];\r\n            this.randomBodiesPositions = [];\r\n            this.obstacles = [];\r\n            \r\n            this.fxContainer.removeChildren();\r\n            \r\n            world.bodies.forEach((body)=> {\r\n                if (body && (body as any).userData) {\r\n                    ((body as any).userData as PhysicsSprite).clean(); \r\n                }\r\n            });\r\n            const l = this.gameContainer.children.length;\r\n            for (let i = l - 1; i >= 0; i--) {\r\n                const c = this.gameContainer.children[i];\r\n                if ((c as any).createBody) {\r\n                    this.gameContainer.removeChild(c);\r\n                }\r\n            }\r\n            gsap.globalTimeline.clear();\r\n            const t = window.setInterval(()=> {\r\n                const all = world.bodies.filter((body)=> {\r\n                    const b: boolean = body && (body as any).userData;\r\n                    return b;\r\n                });\r\n                if (all.length === 0) {\r\n                    window.clearInterval(t);\r\n                    resolve();\r\n                } else {\r\n                    console.log(all);\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n    private showPause() {\r\n        gsap.globalTimeline.pause();\r\n        gameSettings.paused = true;\r\n        this.pausePopup.show((exit: boolean)=> {\r\n            gameSettings.paused = false;\r\n            gsap.globalTimeline.resume();\r\n            if (exit) {\r\n                //this.close();\r\n                //gameSettings.paused = true;\r\n                stateManager.start(MenuState);\r\n            }\r\n        })\r\n    }\r\n    private generateIAPS(): EIAPBonus[] | undefined {\r\n        if (!this.currentLevelData.iaps) {\r\n            return undefined;\r\n        }\r\n        const iaps = [EIAPBonus.Kill, EIAPBonus.RocketUp, EIAPBonus.Freeze];\r\n        const r: EIAPBonus[] = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const id = Math.floor(Math.random()*iaps.length);\r\n            r.push(iaps[id]);\r\n            iaps.splice(id,1);\r\n        }\r\n        return r;\r\n    }\r\n    public unusedBlocksRemoved(amount: number, startPosition?: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        let score = amount * 5;\r\n        if (amount >= 5) {\r\n            if (startPosition) {\r\n                this.fireMissle(1, startPosition);\r\n                score += 50;\r\n            }\r\n        }\r\n        this.addScore(score);\r\n        if (this.activeBonus) return; \r\n        \r\n        if (this.levelId > 1) {\r\n            this.playBolts(amount, startPosition);\r\n        }        \r\n    }\r\n    private addToBoomMeter(amount: number) {\r\n        if (this.activeBonus) return; \r\n        const boom = this.boomMeter.update(amount);\r\n        if (boom) {\r\n            const bonus = this.getRandomBonus();\r\n            this.setActiveBonus(bonus);\r\n        }\r\n    }\r\n    private async playBolts(amount: number, startPosition: ObservablePoint) {\r\n        if (amount < 2 || !startPosition) return;\r\n        const time = 0.8;\r\n        this.boltsActive = true;\r\n        const origAmount = amount;\r\n        amount = Math.min(amount, 6);\r\n        const amountPerBolt = origAmount / amount;\r\n        for (let i = 0; i < amount; i++) {\r\n            const r = Math.floor(Math.random()*4);\r\n            const bolt = new Sprite(Texture.from(`bolt${r}.png`));\r\n            bolt.anchor.set(0.5, 0.5);\r\n            bolt.scale.set(0.1, 0.1);\r\n            bolt.rotation = Math.PI /2 + Math.atan2(-680 - startPosition.y, 270 - startPosition.x);\r\n            bolt.position.copyFrom(startPosition);\r\n            this.fxContainer.addChild(bolt);\r\n            gsap.to(bolt.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(bolt.position, {x: 270, y: -680, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.addToBoomMeter(amountPerBolt);\r\n                this.fxContainer.removeChild(bolt);\r\n            }});\r\n            await this.delay(0.1);\r\n        }\r\n        this.boltsActive = false;\r\n    }\r\n    private addScore(score: number) {\r\n        this.score += score;\r\n        this.scorePlace.score = this.score;\r\n    }\r\n    private get currentLevelData(): ILevelData {\r\n        return gameSettings.levels[this.levelId] as ILevelData;\r\n    }\r\n    private getRandomPosition() {\r\n        if (this.isTransition) return undefined; \r\n        const i = Math.floor(Math.random()*this.randomBodiesPositions.length);\r\n        let p = this.randomBodiesPositions[i];\r\n        this.randomBodiesPositions.splice(i, 1);\r\n        if (Math.abs(p[1]) >= 20) {\r\n            return undefined;\r\n        }\r\n        return p;\r\n    }\r\n    private async setActiveBonus(bonus: EBonus) {\r\n        this.activeBonus = bonus;\r\n        this.nextTimer.freeze();\r\n        this.addScore(100);\r\n        let getPoint = undefined;\r\n        switch(bonus) {\r\n            case EBonus.BoomLetters:\r\n            case EBonus.BigBoomLetters:\r\n                this.meterBonus = (bonus === EBonus.BoomLetters) ? new BoomLettersBonus() : new BigBoomLettersBonus();\r\n                getPoint = ()=> {\r\n                    return this.getRandomPosition();\r\n                };\r\n                break;\r\n            case EBonus.LaserLetters:\r\n                this.meterBonus = new LaserLettersBonus();\r\n                getPoint = ()=> {\r\n                    const p = this.getRandomPosition();\r\n                    if (!p) {\r\n                        return undefined;\r\n                    }\r\n                    return p[1];\r\n                };\r\n                break;\r\n            default: return;\r\n        }\r\n        this.frontContainer.addChild(this.meterBonus);\r\n\r\n        await this.meterBonus.start(getPoint);\r\n        this.clearMeterBonus(false);\r\n        this.nextTimer.unFreeze();\r\n    }\r\n    private getRandomBonus(): EBonus {\r\n        const {bonuses} = this.currentLevelData;\r\n        return bonuses[Math.floor(Math.random() * bonuses.length)];\r\n    }\r\n    public async fireMissle(amount: number, position: ObservablePoint) {\r\n        if (this.isTransition) return;\r\n        setSlowMo(true);\r\n        amount = Math.min(amount, this.randomBodiesPositions.length);\r\n        const time = 1.0;\r\n        for (let i = 0; i < amount; i++) {\r\n            const pos = this.getRandomPosition();\r\n            if (!pos || this.isTransition) continue;\r\n            const missle = new Sprite(Texture.from(`like.png`));\r\n            missle.anchor.set(0.5, 0.5);\r\n            missle.scale.set(0.1, 0.1);\r\n            missle.position.copyFrom(position);\r\n            //missle.rotation = Math.atan2(position.y - pos[1] * METER_SIZE, position.x - pos[0] * METER_SIZE) - Math.PI/2;\r\n            this.fxContainer.addChild(missle);\r\n            gsap.to(missle.scale, {x: 1.5, y: 1.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.scale, {x: 0, y: 0, delay: time * 0.5, duration: time * 0.5, ease: Linear.easeNone});\r\n            gsap.to(missle.position, {x: pos[0] * METER_SIZE, y: pos[1] * METER_SIZE, duration: time, ease: Linear.easeNone, onComplete: ()=> {\r\n                this.createExplosion(missle.position, 0);\r\n                explodePoints.push(pos);\r\n                this.fxContainer.removeChild(missle);\r\n            }});\r\n            await this.delay(0.2);\r\n        }\r\n        gsap.delayedCall(0.2, ()=>{\r\n            setSlowMo(false);\r\n        })\r\n    }\r\n    public createExplosion(position: ObservablePoint, delay: number) {\r\n        const e = new Explosion(true, delay);\r\n        e.position.copyFrom(position);\r\n        this.fxContainer.addChild(e);\r\n      }\r\n      private clearActiveBlocks() {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n            this.nextBlock.clean();   \r\n        }\r\n        if (this.activeBlock) {\r\n            this.gameContainer.removeChild(this.activeBlock);\r\n            this.activeBlock.clean();   \r\n            this.preview.visible = false;\r\n        }\r\n        this.activeBlock = undefined;\r\n        this.nextBlock = undefined;\r\n        this.nextType = undefined;\r\n      }\r\n      public stopBonuses() {\r\n        this.activeBonus = EBonus.None;\r\n        this.clearActiveBlocks();\r\n      }\r\n      public levelComplete() {\r\n          this.stopBonuses();\r\n          this.isTransition = true;\r\n          this.moving = false;\r\n          this.obstacles.forEach((o)=> {\r\n            o.clean();\r\n          });\r\n          this.obstacles=[];\r\n          this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n          this.previewBlocks && this.previewBlocks.clear();\r\n          this.bottomOpenWall && this.bottomOpenWall.animateAndDestroy();\r\n          this.bottomOpenWall = undefined;\r\n          this.moveBox && this.moveBox.animateAndDestroy();\r\n          this.staticBox && this.staticBox.animateAndDestroy();\r\n      }\r\n      public heartDeath() {\r\n        if (this.goalBlock.isSkull()) return;\r\n        this.goalBlock.setSkull();\r\n        this.moveBalls();\r\n      }\r\n    public moveBalls() {\r\n        if (this.isTransition || this.moving) return;\r\n        this.moving = true;\r\n        const l = this.nextLines.length;\r\n        const pos = this.moveBox.body.position;\r\n        const m = {x:pos[0], y:pos[1]};\r\n        this.previewBlocks.show();\r\n        gsap.to(this.previewBlocks, {y: -570, duration: 1.1});\r\n        gsap.to(m, {y: (-500 + l*70)/METER_SIZE, delay: 0.1, duration:1, ease: Linear.easeNone, onUpdate: ()=> {\r\n            if (!this.moveBox.body) {\r\n                gsap.killTweensOf(m); \r\n            } else {\r\n                this.moveBox.body.position = [m.x, m.y];\r\n            }\r\n        }, onComplete: ()=> {\r\n            this.moveBox.body.position = [0, -575/METER_SIZE];\r\n            this.addLineBlocks();\r\n            this.generateLineBlocks();\r\n            gsap.to(this.previewBlocks, {y: -900 - this.previewBlocks.height, duration: 0.5});\r\n            this.moving = false;\r\n        }});\r\n    }\r\n    public update(step: number) {\r\n        if (gameSettings.paused || this.waitForOver) return;\r\n        this.drawMouse();\r\n        let activeBounds = this.meterBonus && this.meterBonus.activeBound || undefined;\r\n        this.maxY=-800;\r\n        let wasEnd = false;\r\n        let wasGameOver = false;\r\n        let goal: GoalBlock = undefined;\r\n        //const rPos = [];\r\n        let meterBonusBlocks = [];\r\n        this.randomBodiesPositions = [];\r\n        world.bodies.forEach((body)=> {\r\n            const pos = body.position;\r\n            if (((body as any).userData as CircleBlock).kinematic && body !== this.moveBox.body) {\r\n                /*if (pos[0] < -315/METER_SIZE || pos[0] > 315/METER_SIZE) {\r\n                    body.position = [(pos[0] < 0) ? -315/METER_SIZE : 315/METER_SIZE, pos[1]];\r\n                    body.velocity[0] *= -1;\r\n                } else */\r\n                if (pos[1] < -455 / METER_SIZE || pos[1] > (GameViewState.BottomPoint + 10) / METER_SIZE) {\r\n                    //body.position = [pos[0], (pos[1] < -455/METER_SIZE) ? -455/METER_SIZE : (GameViewState.BottomPoint + 10)/METER_SIZE];\r\n                    ((body as any).userData as CircleBlock).shape.material = gameSettings.material;\r\n                    body.gravityScale = 1;\r\n                    //body.type = Body.DYNAMIC;\r\n                }\r\n            }\r\n            if (body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                this.randomBodiesPositions.push(body.position);\r\n            }\r\n            if (!this.isTransition && body.type === Body.DYNAMIC && pos[1] > this.maxY) {\r\n                this.maxY = pos[1];\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] > -GameViewState.BottomPoint/METER_SIZE) {\r\n                wasEnd = true;\r\n            }\r\n            if (this.isTransition && body.type === Body.DYNAMIC && pos[1] < -GameViewState.BottomPoint*3/METER_SIZE) {\r\n                ((body as any).userData as PhysicsSprite).clean(); \r\n            }\r\n            if (body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.isGoal() ) {\r\n                goal = (body as any).userData;\r\n                if (!this.isTransition && pos[1] > 450/METER_SIZE) {\r\n                    wasGameOver = true;\r\n                }\r\n            }\r\n            if (!this.isTransition && activeBounds && body.type === Body.DYNAMIC && (body as any).userData && (body as any).userData.type !== CircleBlock.goalType) {\r\n                activeBounds.forEach((bound)=> {\r\n                    if (bound.contains(pos[0], pos[1])) {\r\n                        meterBonusBlocks.push(body);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        \r\n        if (goal && !wasGameOver) {\r\n            goal.resetDeathCounter();\r\n        }\r\n        this.goalBlock = goal;\r\n        this.tutorial.update();\r\n        if (this.isTransition && !wasEnd && !this.levelFinished.visible) {\r\n            //gameSettings.paused = true;\r\n            this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n            this.nextTimer.clear();\r\n            this.boomMeter.reset();\r\n            this.clearMeterBonus();\r\n            this.tick = 0;\r\n            this.maxY=-800;\r\n            this.powerup1.visible = false;\r\n            this.powerup2.visible = false;\r\n            const time = new Date().getTime() - this.levelStartTime;\r\n            this.levelFinished.show(true, this.score, time, this.currentLevelData.starsConditions, ()=> {\r\n                this.moveToNextLevel();\r\n            }, this.levelId, this.generateIAPS());\r\n            this.nextTimer.freeze();\r\n            this.obstacles=[];\r\n            \r\n        }\r\n        if (this.moving || this.isTransition) return;\r\n        if (goal && wasGameOver) {\r\n            goal.startCountDeath();\r\n        }\r\n        if (!this.nextTimer.isFrozen) {\r\n            this.tick+=Math.floor(step*60);\r\n            const p = this.tick%this.currentLevelData.time;  \r\n            this.nextTimer.setProgress(p/this.currentLevelData.time);\r\n            if (p === 0) {\r\n                this.nextTimer.setProgress(1);\r\n                meterBonusBlocks = [];\r\n                this.moveBalls();\r\n            }\r\n        }\r\n        if (meterBonusBlocks.length > 0) {\r\n            let amount = 0;\r\n            meterBonusBlocks.forEach((body)=> {\r\n                const b = ((body as any).userData as CircleBlock);\r\n                amount += b.boom(false);\r\n                this.createExplosion(b.position, Math.random()*0.2);\r\n            });\r\n            console.log(amount);\r\n            this.unusedBlocksRemoved(amount);\r\n        }\r\n    }\r\n    private moveToNextLevel() {\r\n        console.log(\"finished\",this.levelId, this.score);\r\n        if (gameSettings.levels.length > this.levelId + 1) {\r\n            if (this.score > this.currentLevelData.score || !this.currentLevelData.score) {\r\n                this.currentLevelData.score = this.score;\r\n                setStorageData(this.currentLevelData.name,this.score.toString());\r\n                console.log(\"set score\");\r\n            }\r\n            this.levelId+=1;\r\n            if (!this.currentLevelData.score && this.currentLevelData.score !== 0) {\r\n                this.currentLevelData.score = 0;\r\n                setStorageData(this.currentLevelData.name,\"0\");\r\n            }\r\n        }\r\n        this.boomMeter.maximum = this.currentLevelData.boomMeter;\r\n        this.score = 0;\r\n        this.scorePlace.score = 0;\r\n        this.createMoveWalls();\r\n        this.generateNewBlocks().then(()=> {\r\n            const iaps = this.generateIAPS();\r\n            this.levelStart.show(this.currentLevelData, iaps).then(()=> {\r\n                if (this.currentLevelData.iaps) {\r\n                    this.powerup1.setData(iaps[0], WheelBox.getTexture(iaps[0]), WheelBox.getTexture(iaps[0]));\r\n                    this.powerup2.setData(iaps[1], WheelBox.getTexture(iaps[1]), WheelBox.getTexture(iaps[1]));\r\n                    this.powerup1.visible = true;\r\n                    this.powerup2.visible = true;\r\n                }\r\n                this.generateLineBlocks();\r\n                this.addActiveBlock();\r\n                this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n                this.nextTimer.unFreeze();\r\n                this.levelStartTime = new Date().getTime();\r\n            });\r\n        });\r\n        this.isTransition = false;\r\n        gameSettings.paused = false;\r\n    }\r\n    private async startPowerup(id: EIAPBonus) {\r\n        if (this.isActivePowerup || gameSettings.paused || this.isTransition) return;\r\n        this.isActivePowerup = true;\r\n        switch(id) {\r\n            case EIAPBonus.RocketUp:\r\n                await this.startVerticalRocket();\r\n                break;\r\n            case EIAPBonus.Kill:\r\n                const type = this.getRandomType();\r\n                world.bodies.forEach((body)=> {\r\n                    const block = (body as any).userData as CircleBlock;\r\n                    if (block && block.type === type) {\r\n                        block.setBomb();\r\n                    }\r\n                });\r\n                break;\r\n            case EIAPBonus.Freeze:\r\n                this.nextTimer.freeze(10);\r\n                break; \r\n        }\r\n        this.isActivePowerup = false;\r\n    }\r\n    private async startVerticalRocket() {\r\n        const x = Math.random() * 560 - 280;\r\n        await this.startRocket(x, GameViewState.BottomPoint, x, -450);\r\n    }\r\n    /*private async startHorizontalRocket() {\r\n        const h = this.maxY * METER_SIZE + 400;\r\n        const y = Math.random() * h - 400;\r\n        await this.startRocket(-280, y, 280, y);\r\n    }*/\r\n    private async startRocket(startX: number, startY: number, endX: number, endY: number) {\r\n        const rocket = new RocketPowerup(startX, startY, endX, endY);\r\n        this.gameContainer.addChild(rocket);\r\n        await rocket.animate();\r\n    }\r\n    private generateActiveBlock(type: number = -1) {\r\n        if (this.nextBlock) {\r\n            this.pad.removeChild(this.nextBlock);\r\n        }\r\n        this.nextType = (type !== -1) ? type : this.getRandomType();\r\n        this.nextBlock = new CircleBlock(-90, -20, this.nextType, false);\r\n        this.pad.addChild(this.nextBlock);\r\n\r\n        if (type === -1) {\r\n            this.nextBlock.alpha = 0;\r\n            gsap.to(this.nextBlock, {alpha: 1, duration: 0.3});\r\n        }\r\n    }\r\n    private getRandomType() {\r\n        if (this.obstacles.filter(o => o.type === EObstacle.Skulls).length > 0 && Math.random() < 0.01) {\r\n            return CircleBlock.skullType;\r\n        }\r\n        return Math.floor(Math.random() * (this.currentLevelData.blocks)) + 1;\r\n    }\r\n    private addActiveBlock(next: number = -1) {\r\n        if (!this.nextType) {\r\n            this.nextType = this.getRandomType();\r\n        }\r\n        this.activeBlock = new CircleBlock(0, GameViewState.BottomPoint, this.nextType, false);\r\n        this.activeBlock.kinematic = true;\r\n        this.gameContainer.addChild(this.activeBlock);\r\n        this.generateActiveBlock(next);\r\n\r\n        this.preview.position.copyFrom(this.activeBlock.position);\r\n        this.preview.visible = true;\r\n\r\n        if (next === -1) {\r\n            this.activeBlock.alpha = 0;\r\n            this.preview.alpha = 0;\r\n            gsap.to(this.activeBlock, {alpha: 1, duration: 0.3});\r\n            gsap.to(this.preview, {alpha: 0.8, duration: 0.3});\r\n        }\r\n    }\r\n    private async switchBlockes() {\r\n        const tempActive = this.activeBlock.type;\r\n        const tempNext = this.nextType;\r\n        await new Promise<void>((resolve)=> {\r\n            gsap.to(this.nextBlock, {x: 0, y: -50, duration: 0.2});\r\n            gsap.to(this.activeBlock, {x: -90, y: 700, duration: 0.2, onComplete: ()=> {resolve();}});\r\n        });\r\n        this.clearActiveBlocks();\r\n        this.nextType = tempNext;\r\n        this.addActiveBlock(tempActive);\r\n    }\r\n    private drawMouse() {\r\n        //if (this.mousePressed) {\r\n            const p = this.toLocal(app.renderer.plugins.interaction.eventData.data.global);\r\n            this.preview.draw(p);\r\n        //}\r\n    }\r\n    protected onTapStart(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || this.topRect.contains(lp.x, lp.y)) return;\r\n        if (this.padRect.contains(lp.x, lp.y)) {\r\n            this.switchBlockes();\r\n        } else if (!this.downRect.contains(lp.x, lp.y)) {\r\n            this.drawMouse();\r\n        }\r\n    }\r\n    protected onClick(e) {\r\n        const lp = this.toLocal(e.data.global);\r\n        if (this.isTransition || gameSettings.paused || !this.activeBlock || this.isActivePowerup || this.downRect.contains(lp.x, lp.y) || this.topRect.contains(lp.x, lp.y)) return;\r\n        this.activeBlock.createBody(Body.DYNAMIC, 30);\r\n        this.activeBlock.shape.material = gameSettings.activeBallMaterial;\r\n        const a = this.activeBlock;\r\n        this.activeBlock = undefined;\r\n        this.preview.visible = false;\r\n\r\n        const angle= Math.atan2((lp.y-GameViewState.BottomPoint) / METER_SIZE, lp.x / METER_SIZE);\r\n        const speed = 450;\r\n        a.body.gravityScale = 0;\r\n        a.body.applyImpulse([speed*Math.cos(angle),speed*Math.sin(angle)]);\r\n        //a.body.type = Body.KINEMATIC;\r\n        //a.body.velocity = [speed*Math.cos(angle),speed*Math.sin(angle)];\r\n        gsap.delayedCall(0.2, ()=> {\r\n           this.addActiveBlock();\r\n        });\r\n        //count all skulls\r\n        world.bodies.forEach((body)=> {\r\n            if (body && (body as any).userData && (body as any).userData.type === CircleBlock.skullType) {\r\n                ((body as any).userData as CircleBlock).decreaseSkullMeter(); \r\n            }\r\n        });\r\n    }\r\n    private generateLineBlocks() {\r\n        const lines = this.currentLevelData.lines;\r\n        this.previewBlocks.clear(); \r\n        this.nextLines = [];\r\n        for (let j = 0; j < lines; j++) {\r\n            this.nextLines[j]=[];\r\n            for (let i = 0; i < 9; i++) {\r\n                this.nextLines[j][i] = Math.floor(Math.random() * this.currentLevelData.blocks) + 1;\r\n            }\r\n        }\r\n        this.previewBlocks.setLines(this.nextLines);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n    }\r\n    private addLineBlocks() {\r\n        //this.previewBlocks.clear();\r\n        let x;\r\n        let y = -500;\r\n        for (let j = 0; j < this.nextLines.length; j++) {\r\n            x = -300;\r\n            for (let i = 0; i < this.nextLines[j].length; i++) {\r\n                const f = new CircleBlock(x,y,this.nextLines[j][i]);\r\n                this.gameContainer.addChild(f);\r\n                x += 74;\r\n            }\r\n            y+=70\r\n        }\r\n    }\r\n    private async delay (t: number) {\r\n        return new Promise<void>((resolve)=> {\r\n            gsap.delayedCall(t, ()=> {\r\n                resolve();\r\n            })\r\n        });\r\n    }\r\n    private async generateNewBlocks() {\r\n        const { startAmount, blocks, obstacles} = this.currentLevelData;\r\n        let wasHeartMiddle = false;\r\n        let skulls = 0;\r\n        if (obstacles && obstacles.length > 0) {\r\n            obstacles.forEach((o)=> {\r\n                this.createObstacle(o);\r\n                if (o.type === EObstacle.HeartMiddle) {\r\n                    wasHeartMiddle = true;\r\n                } else if (o.type === EObstacle.Skulls) {\r\n                    skulls = o.amount;\r\n                }\r\n            });\r\n        }\r\n        const skullsIds: number[] = [];\r\n        for (let i = 0; i < skulls; i++) {\r\n            let r = Math.floor(Math.random() * (startAmount - 19));\r\n            while (skullsIds.includes(r)) {\r\n                r = Math.floor(Math.random() * (startAmount - 19));\r\n            }\r\n            skullsIds.push(r);\r\n        }\r\n        for (let i = 0; i < startAmount; i++) {\r\n            let type = -1;\r\n            if (skullsIds.includes(i)) {\r\n                type = CircleBlock.skullType;\r\n            } else {\r\n                type = Math.floor(Math.random() * blocks) + 1;\r\n            }\r\n            const f = new CircleBlock(Math.random()*50-25,900,type);\r\n            this.gameContainer.addChild(f);\r\n            await this.delay(0.001);\r\n            if (wasHeartMiddle && i === Math.floor(startAmount/2)) {\r\n                const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n                f.on(\"gameover\", this.onGameOver, this);\r\n                this.gameContainer.addChild(f);\r\n                await this.delay(1);\r\n            }\r\n        }\r\n        if (!wasHeartMiddle) {\r\n            await this.delay(1);\r\n            const f = new GoalBlock(0,1100,CircleBlock.goalType);\r\n            f.on(\"gameover\", this.onGameOver, this);\r\n            this.gameContainer.addChild(f);\r\n        }\r\n        \r\n        await this.delay(1);\r\n        this.createBottomExit();\r\n    }\r\n    private createObstacle(obstacle: IObstacle) {\r\n        if (obstacle.type === EObstacle.HeartMiddle || obstacle.type === EObstacle.Skulls) return;\r\n        let o: BaseObstacle = undefined;\r\n        switch(obstacle.type) {\r\n            case EObstacle.Static:\r\n                o = new StaticObstacle(obstacle.position);\r\n                break;\r\n            case EObstacle.Random:\r\n                o = new RandomObstacle(obstacle.position, obstacle.lives);\r\n                break;\r\n        }\r\n        this.gameContainer.addChild(o);\r\n        this.obstacles.push(o);\r\n    }\r\n    public onGameOver() {\r\n        //stateManager.start(MenuState);\r\n        //this.previewBlocks.y = -900 - this.previewBlocks.height;\r\n        this.nextTimer?.clear();\r\n        this.boomMeter?.reset();\r\n        this.clearMeterBonus();\r\n        this.tick = 0;\r\n        this.maxY=-800;\r\n        this.powerup1.visible = false;\r\n        this.powerup2.visible = false;\r\n        this.score = 0;\r\n        this.levelFinished.show(false, this.score, Number.MAX_SAFE_INTEGER, this.currentLevelData.starsConditions, ()=> {\r\n            this.restartLevel();\r\n        }, this.levelId, undefined);\r\n        this.nextTimer?.freeze();\r\n        this.obstacles=[];\r\n        gameSettings.paused = true;\r\n    }\r\n    private restartLevel() {\r\n        this.isTransition = true;\r\n        stateManager.restart(this.levelId);\r\n    }\r\n    private async generateStartBlocks() {\r\n        this.createMoveWalls();\r\n        const leftWall = new StaticBlock(-400, -50, 100, 1800, 0);\r\n        leftWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(leftWall);\r\n        const rightWall = new StaticBlock(400, -50, 100, 1800, 0);\r\n        rightWall.shape.material = gameSettings.bounceMaterial;\r\n        this.gameContainer.addChild(rightWall);\r\n\r\n        const bottomWall = new StaticBlock(-225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall);\r\n        const bottomWall1 = new StaticBlock(225, 800, 250, 100, 0);\r\n        this.gameContainer.addChild(bottomWall1);\r\n        const bottomWall2 = new StaticBlock(-150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall2);\r\n        const bottomWall3 = new StaticBlock(150, 1100, 100, 500, 0);\r\n        this.gameContainer.addChild(bottomWall3);\r\n        const bottomWall4 = new StaticBlock(0, 1300, 200, 100, 0);\r\n        this.gameContainer.addChild(bottomWall4);\r\n\r\n        await this.generateNewBlocks();\r\n        gameSettings.started = true;\r\n    }\r\n    private createMoveWalls() {\r\n        this.moveBox = new StaticBlock(0, -575, 710, 50, 0);\r\n        //this.moveBox.shape.collisionGroup = ECollisionGroups.MOVER;\r\n        //this.moveBox.shape.collisionMask = ECollisionGroups.BALLS | ECollisionGroups.WALLS;\r\n        this.moveBox.type = CircleBlock.endType;\r\n        this.gameContainer.addChild(this.moveBox);\r\n        this.staticBox = new StaticBlock(0, -625, 710, 50, 0);\r\n        this.gameContainer.addChild(this.staticBox);\r\n        //const wall = new StaticBlock(0, -575, 700, 50, 0);\r\n        //this.addChild(wall);\r\n    }\r\n    private createBottomExit() {\r\n        this.bottomOpenWall = new StaticBlock(0, 800, 200, 100, 0);\r\n        this.gameContainer.addChild(this.bottomOpenWall);\r\n    }\r\n\r\n    //BONUSES\r\n    private async clearMeterBonus(immidiately: boolean = true) {\r\n        if (this.meterBonus) {\r\n            if (!immidiately) {\r\n                await this.meterBonus.goOut();\r\n            }\r\n            if (this.meterBonus) {\r\n                this.meterBonus.clean();\r\n                this.frontContainer.removeChild(this.meterBonus);\r\n                this.meterBonus = undefined;\r\n            }\r\n        }\r\n        this.activeBonus = EBonus.None;\r\n    }\r\n}","import gsap, { Bounce, Elastic, Linear } from \"gsap\";\r\nimport { Container, Sprite, Texture } from \"pixi.js\";\r\nimport { gameSettings } from \"../../../core/BaseGame\";\r\n\r\nexport class Logo extends Container {\r\n    private explosion: Sprite;\r\n    private face: Sprite;\r\n    private logo: Sprite;\r\n    constructor() {\r\n        super();\r\n        this.explosion = Sprite.from(Texture.from(\"splash_explosion.png\"));\r\n        this.explosion.anchor.set(0.5);\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.alpha = 0;\r\n        this.addChild(this.explosion);\r\n\r\n        this.face = Sprite.from(Texture.from(\"splash_logo_face.png\"));\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.addChild(this.face);\r\n\r\n        this.logo = Sprite.from(Texture.from(\"splash_logo.png\"));\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n        this.addChild(this.logo);\r\n    }\r\n    public start() {\r\n        this.explosion.position.y = -gameSettings.originalHeight * 0.5+516;\r\n        this.explosion.scale.set(0, 0);\r\n        this.explosion.alpha = 0;\r\n        this.face.position.set(-131, -350);\r\n        this.face.alpha = 0;\r\n        this.logo.position.set(0, -260);\r\n        this.logo.scale.set(3, 3);\r\n        this.logo.alpha = 0;\r\n\r\n        gsap.to(this.explosion, {alpha: 1, duration: 0.2});\r\n        gsap.to(this.explosion.scale, {x: 1, y: 1, duration: 1, ease: Elastic.easeOut});\r\n\r\n        gsap.to(this.logo, {alpha: 1, delay: 0.2, duration: 0.2});\r\n        gsap.to(this.logo.scale, {x: 1, y: 1, delay: 0.2, duration: 1, ease: Bounce.easeOut});\r\n\r\n        gsap.to(this.face, {alpha: 1, delay: 1.09, duration: 0.1});\r\n        gsap.to(this.face, {y: -448, delay: 1.1, duration: 2, ease: Linear.easeNone});\r\n    }\r\n    public stop() {\r\n        gsap.killTweensOf(this.explosion);\r\n        gsap.killTweensOf(this.explosion.scale);\r\n\r\n        gsap.killTweensOf(this.logo);\r\n        gsap.killTweensOf(this.logo.scale);\r\n\r\n        gsap.killTweensOf(this.face);\r\n    }\r\n}","import { Container, NineSlicePlane, Texture, Text, Sprite } from \"pixi.js\";\r\nimport { ILevelData } from \"../GameViewState\";\r\n\r\nexport class MapItem extends Container {\r\n    private txt: Text;\r\n    private lockedTxt: Text;\r\n    private hearts: Sprite[];\r\n    constructor() {\r\n        super();\r\n        this.txt = new Text(\"Level 1\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0x000000, fontWeight: \"bold\", align: \"center\"});\r\n        this.txt.anchor.set(0.5, 1);\r\n        this.txt.position.set(0, -75);\r\n        this.addChild(this.txt);\r\n\r\n        const back = new NineSlicePlane(Texture.from(\"top_back.png\"), 46, 50, 46, 50);\r\n        back.pivot.set(160, 70);\r\n        back.width = 320;\r\n        back.height = 140;\r\n        this.addChild(back);\r\n\r\n        this.lockedTxt = new Text(\"Locked\",{fontFamily: \"FontsFree-Net-AmericanTypewriterBold\", fontSize: 50, fill: 0xAAAAAA, fontWeight: \"bold\", align: \"center\"});\r\n        this.lockedTxt.anchor.set(0.5, 0.5);\r\n        this.lockedTxt.position.set(0, 0);\r\n        this.addChild(this.lockedTxt);\r\n\r\n        this.hearts = [];\r\n        let xx = -100;\r\n        for (let i = 0; i < 3; i++) {\r\n            const heart = new Sprite(Texture.from(`hero.png`));\r\n            heart.alpha = 0.3;\r\n            heart.anchor.set(0.5, 0.5);\r\n            heart.scale.set(0.8);\r\n            heart.position.x = xx;\r\n            this.addChild(heart);\r\n            this.hearts.push(heart);\r\n            xx += 100;\r\n        }\r\n    }\r\n    public updateData(id: number, stars: number) {\r\n        this.txt.text = `Level ${id+1}`; \r\n        for (let i = 0; i < 3; i++) {\r\n            this.hearts[i].alpha = stars >= i+1 ? 1 : (stars >= 0 ? 0.3: 0);\r\n        }\r\n        this.lockedTxt.visible = stars === -1;\r\n    }\r\n}","import { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { AdType, getStorageData, shouldPlayFirstAds, showADS } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { TextedButton } from \"../../core/ui/TextedButton\";\r\nimport { calculateStars } from \"../Game\";\r\nimport { GameViewState } from \"./GameViewState\";\r\nimport { Logo } from \"./menu/Logo\";\r\nimport { MapItem } from \"./menu/MapItem\";\r\n\r\nexport class MenuState extends BaseState {\r\n    private logo: Logo;\r\n    private activeLevelItem: MapItem;\r\n    private activeLevelId: number;\r\n    private left: TextedButton;\r\n    private right: TextedButton;\r\n    private canPlay: boolean;\r\n    private playBtn: Button;\r\n\r\n    public create(): void {\r\n        this.logo = new Logo();\r\n        this.addChild(this.logo);\r\n        this.playBtn = new Button(\"start_button.png\", \"start_button.png\");\r\n        this.playBtn.position.y = gameSettings.originalHeight / 3 - 30;\r\n        this.addChild(this.playBtn);\r\n        this.playBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"play\");\r\n            this.onPlayClicked();\r\n        });\r\n        this.createMapItems();\r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.logo.start();\r\n        this.setActiveLevel();\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        this.logo.stop();\r\n    }\r\n    private async setActiveLevel() {\r\n        const {levels} = gameSettings;\r\n        let i = 0;\r\n        let stars = -1;\r\n        for (const data of levels) {\r\n            const scoreS = await getStorageData(data.name,\"\");\r\n            stars = -1;\r\n            if (scoreS !== \"\") {\r\n                data.score = parseInt(scoreS);\r\n                stars = calculateStars(data.score, data.starsConditions);\r\n            }\r\n            if (stars === 0 || stars === -1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this.activeLevelId = i;\r\n        this.canPlay = stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private updateButtons() {\r\n        this.playBtn.disabled = !this.canPlay;\r\n        this.left.visible = this.activeLevelId > 0;\r\n        this.right.visible = this.activeLevelId < gameSettings.levels.length-1;\r\n    }\r\n    private createMapItems() {\r\n        this.activeLevelItem = new MapItem();\r\n        this.activeLevelItem.position.set(0, gameSettings.originalHeight / 3 - 230);\r\n        this.addChild(this.activeLevelItem);\r\n\r\n        this.left = new TextedButton(\"<\", 100, 0, 0);\r\n        this.left.position.set(-250, this.activeLevelItem.y);\r\n        this.addChild(this.left);\r\n\r\n        this.right = new TextedButton(\">\", 100, 0, 0);\r\n        this.right.position.set(250, this.activeLevelItem.y);\r\n        this.addChild(this.right);\r\n\r\n        this.left.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"left\");\r\n            this.activeLevelId--;\r\n            this.updateActive();\r\n        });\r\n        this.right.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"menu\", \"right\");\r\n            this.activeLevelId++;\r\n            this.updateActive();\r\n        });\r\n    }\r\n    private async updateActive() {\r\n        const data = gameSettings.levels[this.activeLevelId];\r\n        const scoreS = await getStorageData(data.name,\"\");\r\n        let stars = -1;\r\n        if (scoreS !== \"\") {\r\n            data.score = parseInt(scoreS);\r\n            stars = calculateStars(data.score, data.starsConditions);\r\n        }\r\n        this.canPlay = true;// stars !== -1;\r\n        this.activeLevelItem.updateData(this.activeLevelId, stars);\r\n        this.updateButtons();\r\n    }\r\n    private async onPlayClicked() {\r\n        if (!this.canPlay) return;\r\n        if (shouldPlayFirstAds()) {\r\n            await showADS(AdType.Interstitial);\r\n        }\r\n        stateManager.start(GameViewState, this.activeLevelId);\r\n        //stateManager.start(MapState);\r\n    }\r\n}","import { Sprite, Texture } from \"pixi.js\";\r\nimport { sendEvent } from \"../..\";\r\nimport { gameSettings, stateManager } from \"../../core/BaseGame\";\r\nimport { setStorageData } from \"../../core/natives/SocialManager\";\r\nimport { BaseState } from \"../../core/states/BaseState\";\r\nimport { Button } from \"../../core/ui/Button\";\r\nimport { MenuState } from \"./MenuState\";\r\n\r\nexport class ComicsState extends BaseState {\r\n    private comics: Sprite;\r\n    private step: number;\r\n    private nextBtn: Button;\r\n    private prevBtn: Button;\r\n    private okBtn: Button;\r\n    public create(): void {\r\n        this.comics = Sprite.from(Texture.from(\"comic_00.png\"));\r\n        this.comics.anchor.set(0.5, 0.5);\r\n        this.addChild(this.comics);\r\n        \r\n        \r\n        this.nextBtn = new Button(\"next_button.png\", \"next_button.png\");\r\n        this.nextBtn.position.set(160,gameSettings.originalHeight/2 - this.nextBtn.height/2);\r\n        this.addChild(this.nextBtn);\r\n        this.nextBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"next\");\r\n            this.onNextClicked();\r\n        });\r\n        this.prevBtn = new Button(\"back_button.png\", \"back_button.png\");\r\n        this.prevBtn.position.set(-160,this.nextBtn.y);\r\n        this.addChild(this.prevBtn);\r\n        this.prevBtn.on(\"pointerup\", () => {\r\n            sendEvent(\"click\", \"comics\", \"prev\");\r\n            this.onPrevClicked();\r\n        });\r\n\r\n        this.okBtn = new Button(\"ok_button.png\", \"ok_button.png\");\r\n        this.okBtn.on(\"pointerup\", ()=> {\r\n            setStorageData(\"skipcomics\",\"1\");\r\n            stateManager.start(MenuState);\r\n        });\r\n        this.okBtn.position.y = this.nextBtn.y - 50;\r\n        this.addChild(this.okBtn);\r\n\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = false;\r\n        this.okBtn.visible = false;\r\n        \r\n    }\r\n    public start(...params: any): void {\r\n        sendEvent(\"start\", \"menu\", \"level\");\r\n        this.step = 0;\r\n        this.prevBtn.visible = false;\r\n        this.nextBtn.visible = true;\r\n        this.okBtn.visible = false;\r\n    }\r\n    public async close() {\r\n        sendEvent(\"close\", \"menu\", \"level\");\r\n        for (let i = 0; i < 6; i++) {\r\n            Texture.removeFromCache(`comic_0${i}.png`);\r\n        }\r\n        this.removeChild(this.okBtn);\r\n        this.okBtn = undefined;\r\n        this.destroy({children: true, texture: true});\r\n    }\r\n    private onNextClicked() {\r\n        this.step++;\r\n        if (this.step < 5) {\r\n            this.updateImage();\r\n            this.prevBtn.visible = true;\r\n            this.nextBtn.visible = true;\r\n        } else if (this.step === 5) {\r\n            this.updateImage();\r\n            this.okBtn.visible = true;\r\n            this.prevBtn.visible = false;\r\n            this.nextBtn.visible = false;\r\n        }\r\n    }\r\n    private onPrevClicked() {\r\n        this.step--;\r\n        this.prevBtn.visible = this.step > 0;\r\n        this.updateImage();\r\n    }\r\n    private updateImage() {\r\n        this.comics.texture = Texture.from(`comic_0${this.step}.png`);\r\n    }\r\n}","import { Loader } from \"@pixi/loaders\";\r\nimport { sounds } from \"../core/SoundManager\";\r\nimport { sendError } from \"..\";\r\nimport { BaseGame, gameSettings, stateManager, unusedBodies, world } from \"../core/BaseGame\";\r\nimport { finishLoading, getStorageData, startLoading } from \"../core/natives/SocialManager\";\r\nimport { MenuState } from \"./states/MenuState\";\r\nimport { GameViewState } from \"./states/GameViewState\";\r\nimport { Body } from \"p2\";\r\nimport { CircleBlock } from \"./states/game/CircleBlock\";\r\nimport * as WebFont from \"webfontloader\";\r\nimport gsap from \"gsap\";\r\nimport { Ticker } from \"pixi.js\";\r\nimport { ComicsState } from \"./states/ComicsState\";\r\n\r\nexport let increaseBlocks: { block: CircleBlock; steps: number }[] = [];\r\nexport let explodePoints: [number, number][] = [];\r\nexport const calculateStars = (score: number, conditions: number[]): number => {\r\n  let stars = 0;\r\n  for (let i = 0; i < conditions.length; i++) {\r\n      if (score > conditions[i]) {\r\n          stars++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  return stars;\r\n}\r\nexport const setSlowMo = (slowmo: boolean, physicsOnly: boolean = false)=> {\r\n  gameSettings.slowmo = slowmo;\r\n  if (!physicsOnly) {\r\n    gsap.globalTimeline.timeScale(gameSettings.slowmo ? 0.3 : 1);\r\n  }\r\n  \r\n}\r\nexport default class Game extends BaseGame {\r\n  constructor() {\r\n    super(720, 1500);\r\n  }\r\n  protected async createStates() {\r\n    const skip = await getStorageData(\"skipcomics\",\"0\");\r\n    stateManager.add(new MenuState());\r\n    stateManager.add(new GameViewState());\r\n    if (skip === \"0\") {\r\n      stateManager.add(new ComicsState());\r\n      stateManager.start(ComicsState);\r\n    } else {\r\n      stateManager.start(MenuState);\r\n    }\r\n    \r\n  }\r\n  protected initContactListener() {\r\n    world.on(\"endContact\", (evt) => {\r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      if (!instanceA.correctType || !instanceB.correctType) return;\r\n      if ((instanceA.type === instanceB.type) && instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType) {\r\n        instanceA.sameColorNeighbors.delete(instanceB);\r\n        instanceB.sameColorNeighbors.delete(instanceA);\r\n      }\r\n    });\r\n    world.on(\"beginContact\", (evt) => {\r\n      const bodyA: Body = evt.bodyA;\r\n      const bodyB: Body = evt.bodyB;\r\n      const instanceA = (bodyA as any).userData as CircleBlock;\r\n      const instanceB = (bodyB as any).userData as CircleBlock;\r\n      \r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.endType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.endType)\r\n      ) {\r\n        this.levelComplete();\r\n        return;\r\n      }\r\n\r\n      if (\r\n        (instanceA.type === CircleBlock.goalType &&\r\n          instanceB.type === CircleBlock.skullType) ||\r\n        (instanceB.type === CircleBlock.goalType &&\r\n          instanceA.type === CircleBlock.skullType)\r\n      ) {\r\n        if (instanceA.type === CircleBlock.skullType) {\r\n          instanceA.boom();\r\n        } else {\r\n          instanceB.boom();\r\n        }\r\n        this.gameOver();\r\n        return;\r\n      }\r\n\r\n      if ((instanceA as any).rocket || (instanceB as any).rocket) {\r\n        let rocket = undefined;\r\n        let block: CircleBlock = undefined;\r\n        if (\r\n          (instanceA as any).rocket &&\r\n          instanceB.correctType() &&\r\n          instanceB.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyA;\r\n          block = instanceB;\r\n        } else if (\r\n          (instanceB as any).rocket &&\r\n          instanceA.correctType() &&\r\n          instanceA.type !== CircleBlock.goalType\r\n        ) {\r\n          rocket = bodyB;\r\n          block = instanceA;\r\n        }\r\n        if (rocket && block) {\r\n          block.boom();\r\n        }\r\n      }\r\n      \r\n      if (!evt.shapeA.data || !evt.shapeB.data) return;\r\n      if (instanceA.correctType && instanceB.correctType) {\r\n        if ((instanceA.type === instanceB.type) && instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType) {\r\n          instanceA.sameColorNeighbors.set(instanceB, true);\r\n          instanceB.sameColorNeighbors.set(instanceA, true);\r\n        }\r\n        let body: Body = undefined;\r\n        let inst = undefined;\r\n        let instB = undefined;\r\n        if (instanceA.kinematic && instanceA.type !== 0) {\r\n          body = bodyA;\r\n          inst = instanceA;\r\n          instB = instanceB;\r\n        } else if (instanceB.kinematic && instanceB.type !== 0) {\r\n          body = bodyB;\r\n          inst = instanceB;\r\n          instB = instanceA;\r\n        }\r\n        if (body) {\r\n          body.gravityScale = 1;\r\n          inst.shape.material = gameSettings.material;\r\n          body.mass = 5;\r\n          body.updateMassProperties();\r\n          //body.type = Body.DYNAMIC;\r\n          if (instB.type === 251) {\r\n            instB.changePosition();\r\n          }\r\n          if (instanceA.type === instanceB.type && instanceA.type !== CircleBlock.skullType) {\r\n            const steps = inst.steps;\r\n            inst.animateAndDestroy();\r\n            increaseBlocks.push({\r\n              block: inst === instanceA ? instanceB : instanceA,\r\n              steps,\r\n            });\r\n          } else if (instB.type === CircleBlock.skullType) {\r\n            inst.setSkull();\r\n          }\r\n        } else {\r\n          if (\r\n            instanceA.type === instanceB.type &&\r\n            instanceA.type !== 0 && instanceA.type !== CircleBlock.skullType &&\r\n            (instanceA.steps !== instanceB.steps ||\r\n              instanceA.kinematic ||\r\n              instanceB.kinematic)\r\n          ) {\r\n            if (instanceA.kinematic) {\r\n              bodyA.gravityScale = 1;\r\n              instanceA.shape.material = gameSettings.material;\r\n              const steps = instanceA.steps;\r\n              instanceA.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceB, steps });\r\n            } else {\r\n              instanceB.shape.material = gameSettings.material;\r\n              bodyB.gravityScale = 1;\r\n              const steps = instanceB.steps;\r\n              instanceB.animateAndDestroy();\r\n              increaseBlocks.push({ block: instanceA, steps });\r\n            }\r\n            \r\n          } else if ((instanceA.kinematic && instanceB.type === 251) ||\r\n            (instanceB.kinematic && instanceA.type === 251)) {\r\n              (instanceB.type === 251) ? (instanceB as any).changePosition() : (instanceA as any).changePosition();\r\n          } else if ((instanceA.kinematic && instanceB.type === CircleBlock.skullType) ||\r\n          (instanceB.kinematic && instanceA.type === CircleBlock.skullType)) {\r\n            (instanceB.type === CircleBlock.skullType) ? instanceA.setSkull() : instanceB.setSkull();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  protected customLogic(step: number): void {\r\n    const state = stateManager.activeState as GameViewState;\r\n    const noState = !state || !state.unusedBlocksRemoved;\r\n    let amount = unusedBodies.length;\r\n    let pos = undefined;\r\n    if (!noState) {\r\n      state.update(step);\r\n      if (amount > 0) {\r\n        const body = unusedBodies[Math.floor(Math.random()*amount)];\r\n        if (body) {\r\n          pos = ((body as any).userData as CircleBlock).position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    unusedBodies.forEach((body) => {\r\n      world.removeBody(body);\r\n    });\r\n    this.clearBodyArray();\r\n    if (!noState) {\r\n      increaseBlocks.forEach((data) => data.block.increase(data.steps));\r\n      increaseBlocks = [];\r\n\r\n      explodePoints.forEach((pos) => {\r\n        const bodies = world.hitTest(pos, world.bodies, 0);\r\n        if (bodies && bodies.length > 0) {\r\n          const block = (bodies[0] as any).userData as CircleBlock;\r\n          if (block && block.correctType && block.type !== CircleBlock.goalType && block.boom) {\r\n          amount += block.boom();\r\n          }\r\n        }\r\n      });\r\n      amount > 0 && state.unusedBlocksRemoved(amount, pos);\r\n    }\r\n    explodePoints = [];\r\n  }\r\n  protected levelComplete() {\r\n    (stateManager.activeState as GameViewState).levelComplete();\r\n  }\r\n  protected gameOver() {\r\n    (stateManager.activeState as GameViewState).heartDeath();\r\n    //(stateManager.activeState as GameViewState).onGameOver();\r\n  }\r\n  protected async load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      sounds.init(\"assets/sounds\");\r\n      startLoading();\r\n      const loader = new Loader();\r\n      loader.add(\"base0\", \"assets/atlases/base0.json\");\r\n      loader.add(\"base1\", \"assets/atlases/base1.json\");\r\n      loader.add(\"levels\", \"assets/levels.json\");\r\n      loader.add(\"particles\", \"assets/emitter.json\");\r\n      sounds.add(\"music\", { autoplay: true, loop: true, volume: 0.6 });\r\n\r\n      loader.onProgress.add((l) => {\r\n        //loadingProgress(l.progress);\r\n      });\r\n      loader.onError.add((a, b, c) => {\r\n        sendError({ error: `loading (${c.url})` });\r\n        reject();\r\n      });\r\n\r\n      loader.load(async () => {\r\n        await this.loadFonts();\r\n        gameSettings.levels = loader.resources.levels.data.levels;\r\n        gameSettings.particles = loader.resources.particles.data;\r\n        await this.startAfterLoading();\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  private async loadFonts() {\r\n    return new Promise<void>((resolve) => {\r\n      WebFont.load({\r\n        custom: {\r\n            families: [\"FontsFree-Net-AmericanTypewriterBold\"],\r\n            urls: [\"assets/fonts/font.css\"],\r\n        },\r\n        active: () => {\r\n            resolve();\r\n        },\r\n        timeout: 60000,\r\n    });\r\n    });\r\n  }\r\n  private async startAfterLoading() {\r\n    const preloader = document.getElementById(\"preloader\");\r\n    if (preloader) {\r\n      preloader.style.display = \"none\";\r\n    }\r\n    await finishLoading();\r\n    //await leaderboards.load();\r\n  }\r\n}\r\n","import * as GA from 'gameanalytics';\r\nimport { Body, Broadphase } from 'p2';\r\nimport { initSocial } from './core/natives/SocialManager';\r\nimport Game from './game/Game';\r\nexport enum EGAAdAction {\r\n    Undefined = 0,\r\n    Clicked = 1,\r\n    Show = 2,\r\n    FailedShow = 3,\r\n    RewardReceived = 4\r\n}\r\nexport enum EGAAdError {\r\n    Undefined = 0,\r\n    Unknown = 1,\r\n    Offline = 2,\r\n    NoFill = 3,\r\n    InternalError = 4,\r\n    InvalidRequest = 5,\r\n    UnableToPrecache = 6\r\n}\r\nexport enum EGAAdType {\r\n    Undefined = 0,\r\n    Video = 1,\r\n    RewardedVideo = 2,\r\n    Playable = 3,\r\n    Interstitial = 4,\r\n    OfferWall = 5,\r\n    Banner = 6\r\n}\r\nexport enum EGAProgressionStatus {\r\n    Undefined = 0,\r\n    Start = 1,\r\n    Complete = 2,\r\n    Fail = 3\r\n}\r\nGA.GameAnalytics.setEnabledInfoLog(false);\r\nexport let live: boolean = false;\r\nexport let lang = \"en\";\r\nwindow.onfocus = () => {\r\n    Howler.mute(false);\r\n}\r\nwindow.onblur = () => {\r\n    Howler.mute(true);\r\n}\r\nwindow.onload = () => {\r\n    initSocial()\r\n        .then((obj)=> {\r\n            lang = obj.language;\r\n            live = obj.success;\r\n            start(obj.gameKey, obj.secretKey);\r\n        })\r\n        .catch((e)=>{\r\n            lang = \"en\";\r\n            live = false;\r\n            start(\"858dec355a72c9195a2a9d7b5b236599\", \"da73f2e7aa8cb82c345aa88235b57abb415e1cd5\");\r\n        });\r\n}\r\nBroadphase.canCollide = function(bodyA, bodyB){\r\n    const KINEMATIC = Body.KINEMATIC;\r\n    const STATIC = Body.STATIC;\r\n    const typeA = bodyA.type;\r\n    const typeB = bodyB.type;\r\n    const gameTypeA = (bodyA as any).userData?.type;\r\n    const gameTypeB = (bodyB as any).userData?.type;\r\n\r\n\r\n    // Cannot collide static bodies\r\n    if(typeA === STATIC && typeB === STATIC){\r\n        return false;\r\n    }\r\n    // Cannot collide static vs kinematic bodies\r\n    if( (typeA === KINEMATIC && typeB === STATIC) ||\r\n        (typeA === STATIC    && typeB === KINEMATIC)){\r\n            if (gameTypeA >= 250 && gameTypeA <= 260 && gameTypeB < 20 || gameTypeB >= 250 && gameTypeB <= 260 && gameTypeA < 20) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide kinematic vs kinematic\r\n    if(typeA === KINEMATIC && typeB === KINEMATIC){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide both sleeping bodies\r\n    if(bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING){\r\n        return false;\r\n    }\r\n\r\n    // Cannot collide if one is static and the other is sleeping\r\n    if( (bodyA.sleepState === Body.SLEEPING && typeB === STATIC) ||\r\n        (bodyB.sleepState === Body.SLEEPING && typeA === STATIC)){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nfunction start(gameKey: string, sKey: string) {\r\n    GA.GameAnalytics.initialize(gameKey, sKey);\r\n    console.log(`Network: ${process.env.NET}, live: ${live}`);\r\n    sendEvent(\"set\", \"network\", process.env.NET, live ? 1 : 0);\r\n    sendEvent(\"start\", \"app\", \"game\");\r\n    new Game();\r\n}\r\nexport function sendValueEvent(name: string, category: string, value:number) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendProgressionEvent(status: EGAProgressionStatus, value?:number, date?: string) {\r\n    GA.GameAnalytics.addProgressionEvent(status, \"level\", date, undefined, value);\r\n    gtag(\"event\", \"progression\", {\r\n        \"event_category\": status === EGAProgressionStatus.Start ? \"start\" : (status !== EGAProgressionStatus.Fail ? \"complete\" : \"fail\"),\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendAdEvent(action: EGAAdAction, type: EGAAdType, error?: EGAAdError) {\r\n    if (error === undefined) {\r\n        GA.GameAnalytics.addAdEvent(action, type, process.env.NET, \"ad\");\r\n    } else {\r\n        GA.GameAnalytics.addAdEventWithNoAdReason(action, type, process.env.NET, \"ad\", error);\r\n    }\r\n    let name = \"\";\r\n    let category = \"\";\r\n    switch (type) {\r\n        case EGAAdType.Interstitial:\r\n            category = \"inter\";\r\n            break;\r\n        case EGAAdType.RewardedVideo:\r\n            category = \"reward\";\r\n            break;\r\n    }\r\n    switch (action) {\r\n        case EGAAdAction.FailedShow:\r\n            name = \"showError\";\r\n            break;\r\n        case EGAAdAction.Show:\r\n            name = \"show\";\r\n            break;\r\n        case EGAAdAction.RewardReceived:\r\n            name = \"success\";\r\n            break;\r\n    }\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n      });\r\n}\r\nexport function sendEvent(name: string, category: string, label: string, value:number = 0) {\r\n    GA.GameAnalytics.addDesignEvent(`${name}:${category}:${label}`, value);\r\n    gtag(\"event\", name, {\r\n        \"event_category\": category,\r\n        \"event_label\": label,\r\n        \"value\": value\r\n      });\r\n}\r\nexport function sendError(error: any) {\r\n    const e = JSON.stringify(error);\r\n    GA.GameAnalytics.addErrorEvent(GA.EGAErrorSeverity.Error, e);\r\n    gtag(\"event\", \"show\", {\r\n        \"event_category\": \"error\",\r\n        \"event_label\": \"error\",\r\n        \"value\": e\r\n      });\r\n}\r\nexport function setLive(l: boolean) {\r\n    live = l;\r\n}\r\n"],"sourceRoot":""}